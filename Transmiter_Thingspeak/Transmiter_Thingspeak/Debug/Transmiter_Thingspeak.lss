
Transmiter_Thingspeak.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000153e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000000b0  00800060  0000153e  000015b2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000006cc  00000000  00000000  00001664  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000085  00000000  00000000  00001d30  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000160  00000000  00000000  00001db5  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 000001be  00000000  00000000  00001f15  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001ff9  00000000  00000000  000020d3  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ef5  00000000  00000000  000040cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000151a  00000000  00000000  00004fc1  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001b0  00000000  00000000  000064dc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003e9  00000000  00000000  0000668c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000a79  00000000  00000000  00006a75  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_pubtypes 00000588  00000000  00000000  000074ee  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000060  00000000  00000000  00007a76  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d4 e0       	ldi	r29, 0x04	; 4
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ee e3       	ldi	r30, 0x3E	; 62
      68:	f5 e1       	ldi	r31, 0x15	; 21
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	a0 31       	cpi	r26, 0x10	; 16
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
      76:	0e 94 94 00 	call	0x128	; 0x128 <main>
      7a:	0c 94 9d 0a 	jmp	0x153a	; 0x153a <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <USART_init>:
#include<util/delay.h>
#define Baud_Rate 9600UL
#define Ubrr_value ((F_CPU/(16*Baud_Rate))-1)

void USART_init()
{
      82:	df 93       	push	r29
      84:	cf 93       	push	r28
      86:	cd b7       	in	r28, 0x3d	; 61
      88:	de b7       	in	r29, 0x3e	; 62
	//SET Baud Rate
	UBRRL=Ubrr_value;
      8a:	89 e2       	ldi	r24, 0x29	; 41
      8c:	90 e0       	ldi	r25, 0x00	; 0
      8e:	27 e6       	ldi	r18, 0x67	; 103
      90:	fc 01       	movw	r30, r24
      92:	20 83       	st	Z, r18
	UBRRH=(Ubrr_value>>8);
      94:	80 e4       	ldi	r24, 0x40	; 64
      96:	90 e0       	ldi	r25, 0x00	; 0
      98:	fc 01       	movw	r30, r24
      9a:	10 82       	st	Z, r1
	UCSRC=(1<<URSEL)|(1<<UCSZ1)|(1<<UCSZ0);
      9c:	80 e4       	ldi	r24, 0x40	; 64
      9e:	90 e0       	ldi	r25, 0x00	; 0
      a0:	26 e8       	ldi	r18, 0x86	; 134
      a2:	fc 01       	movw	r30, r24
      a4:	20 83       	st	Z, r18
	UCSRB=(1<<TXEN)|(1<<RXEN);
      a6:	8a e2       	ldi	r24, 0x2A	; 42
      a8:	90 e0       	ldi	r25, 0x00	; 0
      aa:	28 e1       	ldi	r18, 0x18	; 24
      ac:	fc 01       	movw	r30, r24
      ae:	20 83       	st	Z, r18
}
      b0:	cf 91       	pop	r28
      b2:	df 91       	pop	r29
      b4:	08 95       	ret

000000b6 <usart_transmit>:

void usart_transmit(unsigned char data)
{
      b6:	df 93       	push	r29
      b8:	cf 93       	push	r28
      ba:	0f 92       	push	r0
      bc:	cd b7       	in	r28, 0x3d	; 61
      be:	de b7       	in	r29, 0x3e	; 62
      c0:	89 83       	std	Y+1, r24	; 0x01
	while(!(UCSRA&(1<<UDRE)));
      c2:	00 00       	nop
      c4:	8b e2       	ldi	r24, 0x2B	; 43
      c6:	90 e0       	ldi	r25, 0x00	; 0
      c8:	fc 01       	movw	r30, r24
      ca:	80 81       	ld	r24, Z
      cc:	88 2f       	mov	r24, r24
      ce:	90 e0       	ldi	r25, 0x00	; 0
      d0:	80 72       	andi	r24, 0x20	; 32
      d2:	90 70       	andi	r25, 0x00	; 0
      d4:	00 97       	sbiw	r24, 0x00	; 0
      d6:	b1 f3       	breq	.-20     	; 0xc4 <usart_transmit+0xe>
	UDR=data;
      d8:	8c e2       	ldi	r24, 0x2C	; 44
      da:	90 e0       	ldi	r25, 0x00	; 0
      dc:	29 81       	ldd	r18, Y+1	; 0x01
      de:	fc 01       	movw	r30, r24
      e0:	20 83       	st	Z, r18
}
      e2:	0f 90       	pop	r0
      e4:	cf 91       	pop	r28
      e6:	df 91       	pop	r29
      e8:	08 95       	ret

000000ea <usart_string>:

void usart_string(char *str)
{
      ea:	df 93       	push	r29
      ec:	cf 93       	push	r28
      ee:	00 d0       	rcall	.+0      	; 0xf0 <usart_string+0x6>
      f0:	cd b7       	in	r28, 0x3d	; 61
      f2:	de b7       	in	r29, 0x3e	; 62
      f4:	9a 83       	std	Y+2, r25	; 0x02
      f6:	89 83       	std	Y+1, r24	; 0x01
	while(*str)
      f8:	0c c0       	rjmp	.+24     	; 0x112 <usart_string+0x28>
	{
		usart_transmit(*str++);
      fa:	89 81       	ldd	r24, Y+1	; 0x01
      fc:	9a 81       	ldd	r25, Y+2	; 0x02
      fe:	fc 01       	movw	r30, r24
     100:	20 81       	ld	r18, Z
     102:	89 81       	ldd	r24, Y+1	; 0x01
     104:	9a 81       	ldd	r25, Y+2	; 0x02
     106:	01 96       	adiw	r24, 0x01	; 1
     108:	9a 83       	std	Y+2, r25	; 0x02
     10a:	89 83       	std	Y+1, r24	; 0x01
     10c:	82 2f       	mov	r24, r18
     10e:	0e 94 5b 00 	call	0xb6	; 0xb6 <usart_transmit>
	UDR=data;
}

void usart_string(char *str)
{
	while(*str)
     112:	89 81       	ldd	r24, Y+1	; 0x01
     114:	9a 81       	ldd	r25, Y+2	; 0x02
     116:	fc 01       	movw	r30, r24
     118:	80 81       	ld	r24, Z
     11a:	88 23       	and	r24, r24
     11c:	71 f7       	brne	.-36     	; 0xfa <usart_string+0x10>
	{
		usart_transmit(*str++);
	}
}
     11e:	0f 90       	pop	r0
     120:	0f 90       	pop	r0
     122:	cf 91       	pop	r28
     124:	df 91       	pop	r29
     126:	08 95       	ret

00000128 <main>:

void main()
{
     128:	0f 93       	push	r16
     12a:	1f 93       	push	r17
     12c:	df 93       	push	r29
     12e:	cf 93       	push	r28
     130:	cd b7       	in	r28, 0x3d	; 61
     132:	de b7       	in	r29, 0x3e	; 62
     134:	c2 56       	subi	r28, 0x62	; 98
     136:	d0 40       	sbci	r29, 0x00	; 0
     138:	0f b6       	in	r0, 0x3f	; 63
     13a:	f8 94       	cli
     13c:	de bf       	out	0x3e, r29	; 62
     13e:	0f be       	out	0x3f, r0	; 63
     140:	cd bf       	out	0x3d, r28	; 61
	USART_init();
     142:	0e 94 41 00 	call	0x82	; 0x82 <USART_init>
	for ( ; ; )
	{
		usart_string("AT+CIPCSGP=1,\"www\"\r\n");	//to connect to prefered APN like www is for Vodafone
     146:	80 e6       	ldi	r24, 0x60	; 96
     148:	90 e0       	ldi	r25, 0x00	; 0
     14a:	0e 94 75 00 	call	0xea	; 0xea <usart_string>
     14e:	80 e0       	ldi	r24, 0x00	; 0
     150:	90 e0       	ldi	r25, 0x00	; 0
     152:	a8 e4       	ldi	r26, 0x48	; 72
     154:	b4 e4       	ldi	r27, 0x44	; 68
     156:	89 83       	std	Y+1, r24	; 0x01
     158:	9a 83       	std	Y+2, r25	; 0x02
     15a:	ab 83       	std	Y+3, r26	; 0x03
     15c:	bc 83       	std	Y+4, r27	; 0x04
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     15e:	69 81       	ldd	r22, Y+1	; 0x01
     160:	7a 81       	ldd	r23, Y+2	; 0x02
     162:	8b 81       	ldd	r24, Y+3	; 0x03
     164:	9c 81       	ldd	r25, Y+4	; 0x04
     166:	20 e0       	ldi	r18, 0x00	; 0
     168:	30 e0       	ldi	r19, 0x00	; 0
     16a:	4a e7       	ldi	r20, 0x7A	; 122
     16c:	55 e4       	ldi	r21, 0x45	; 69
     16e:	0e 94 fa 06 	call	0xdf4	; 0xdf4 <__mulsf3>
     172:	dc 01       	movw	r26, r24
     174:	cb 01       	movw	r24, r22
     176:	8d 83       	std	Y+5, r24	; 0x05
     178:	9e 83       	std	Y+6, r25	; 0x06
     17a:	af 83       	std	Y+7, r26	; 0x07
     17c:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
     17e:	11 e0       	ldi	r17, 0x01	; 1
     180:	6d 81       	ldd	r22, Y+5	; 0x05
     182:	7e 81       	ldd	r23, Y+6	; 0x06
     184:	8f 81       	ldd	r24, Y+7	; 0x07
     186:	98 85       	ldd	r25, Y+8	; 0x08
     188:	20 e0       	ldi	r18, 0x00	; 0
     18a:	30 e0       	ldi	r19, 0x00	; 0
     18c:	40 e8       	ldi	r20, 0x80	; 128
     18e:	5f e3       	ldi	r21, 0x3F	; 63
     190:	0e 94 54 08 	call	0x10a8	; 0x10a8 <__ltsf2>
     194:	88 23       	and	r24, r24
     196:	0c f0       	brlt	.+2      	; 0x19a <main+0x72>
     198:	10 e0       	ldi	r17, 0x00	; 0
     19a:	11 23       	and	r17, r17
     19c:	29 f0       	breq	.+10     	; 0x1a8 <main+0x80>
		__ticks = 1;
     19e:	81 e0       	ldi	r24, 0x01	; 1
     1a0:	90 e0       	ldi	r25, 0x00	; 0
     1a2:	9a 87       	std	Y+10, r25	; 0x0a
     1a4:	89 87       	std	Y+9, r24	; 0x09
     1a6:	46 c0       	rjmp	.+140    	; 0x234 <main+0x10c>
	else if (__tmp > 65535)
     1a8:	11 e0       	ldi	r17, 0x01	; 1
     1aa:	6d 81       	ldd	r22, Y+5	; 0x05
     1ac:	7e 81       	ldd	r23, Y+6	; 0x06
     1ae:	8f 81       	ldd	r24, Y+7	; 0x07
     1b0:	98 85       	ldd	r25, Y+8	; 0x08
     1b2:	20 e0       	ldi	r18, 0x00	; 0
     1b4:	3f ef       	ldi	r19, 0xFF	; 255
     1b6:	4f e7       	ldi	r20, 0x7F	; 127
     1b8:	57 e4       	ldi	r21, 0x47	; 71
     1ba:	0e 94 f4 07 	call	0xfe8	; 0xfe8 <__gtsf2>
     1be:	18 16       	cp	r1, r24
     1c0:	0c f0       	brlt	.+2      	; 0x1c4 <main+0x9c>
     1c2:	10 e0       	ldi	r17, 0x00	; 0
     1c4:	11 23       	and	r17, r17
     1c6:	61 f1       	breq	.+88     	; 0x220 <main+0xf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     1c8:	69 81       	ldd	r22, Y+1	; 0x01
     1ca:	7a 81       	ldd	r23, Y+2	; 0x02
     1cc:	8b 81       	ldd	r24, Y+3	; 0x03
     1ce:	9c 81       	ldd	r25, Y+4	; 0x04
     1d0:	20 e0       	ldi	r18, 0x00	; 0
     1d2:	30 e0       	ldi	r19, 0x00	; 0
     1d4:	40 e2       	ldi	r20, 0x20	; 32
     1d6:	51 e4       	ldi	r21, 0x41	; 65
     1d8:	0e 94 fa 06 	call	0xdf4	; 0xdf4 <__mulsf3>
     1dc:	dc 01       	movw	r26, r24
     1de:	cb 01       	movw	r24, r22
     1e0:	bc 01       	movw	r22, r24
     1e2:	cd 01       	movw	r24, r26
     1e4:	0e 94 26 05 	call	0xa4c	; 0xa4c <__fixunssfsi>
     1e8:	dc 01       	movw	r26, r24
     1ea:	cb 01       	movw	r24, r22
     1ec:	9a 87       	std	Y+10, r25	; 0x0a
     1ee:	89 87       	std	Y+9, r24	; 0x09
     1f0:	12 c0       	rjmp	.+36     	; 0x216 <main+0xee>
     1f2:	80 e9       	ldi	r24, 0x90	; 144
     1f4:	91 e0       	ldi	r25, 0x01	; 1
     1f6:	9c 87       	std	Y+12, r25	; 0x0c
     1f8:	8b 87       	std	Y+11, r24	; 0x0b
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     1fa:	8b 85       	ldd	r24, Y+11	; 0x0b
     1fc:	9c 85       	ldd	r25, Y+12	; 0x0c
     1fe:	8c 01       	movw	r16, r24
     200:	c8 01       	movw	r24, r16
     202:	01 97       	sbiw	r24, 0x01	; 1
     204:	f1 f7       	brne	.-4      	; 0x202 <main+0xda>
     206:	8c 01       	movw	r16, r24
     208:	1c 87       	std	Y+12, r17	; 0x0c
     20a:	0b 87       	std	Y+11, r16	; 0x0b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     20c:	89 85       	ldd	r24, Y+9	; 0x09
     20e:	9a 85       	ldd	r25, Y+10	; 0x0a
     210:	01 97       	sbiw	r24, 0x01	; 1
     212:	9a 87       	std	Y+10, r25	; 0x0a
     214:	89 87       	std	Y+9, r24	; 0x09
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     216:	89 85       	ldd	r24, Y+9	; 0x09
     218:	9a 85       	ldd	r25, Y+10	; 0x0a
     21a:	00 97       	sbiw	r24, 0x00	; 0
     21c:	51 f7       	brne	.-44     	; 0x1f2 <main+0xca>
     21e:	17 c0       	rjmp	.+46     	; 0x24e <main+0x126>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     220:	6d 81       	ldd	r22, Y+5	; 0x05
     222:	7e 81       	ldd	r23, Y+6	; 0x06
     224:	8f 81       	ldd	r24, Y+7	; 0x07
     226:	98 85       	ldd	r25, Y+8	; 0x08
     228:	0e 94 26 05 	call	0xa4c	; 0xa4c <__fixunssfsi>
     22c:	dc 01       	movw	r26, r24
     22e:	cb 01       	movw	r24, r22
     230:	9a 87       	std	Y+10, r25	; 0x0a
     232:	89 87       	std	Y+9, r24	; 0x09
     234:	89 85       	ldd	r24, Y+9	; 0x09
     236:	9a 85       	ldd	r25, Y+10	; 0x0a
     238:	9e 87       	std	Y+14, r25	; 0x0e
     23a:	8d 87       	std	Y+13, r24	; 0x0d
     23c:	8d 85       	ldd	r24, Y+13	; 0x0d
     23e:	9e 85       	ldd	r25, Y+14	; 0x0e
     240:	8c 01       	movw	r16, r24
     242:	f8 01       	movw	r30, r16
     244:	31 97       	sbiw	r30, 0x01	; 1
     246:	f1 f7       	brne	.-4      	; 0x244 <main+0x11c>
     248:	8f 01       	movw	r16, r30
     24a:	1e 87       	std	Y+14, r17	; 0x0e
     24c:	0d 87       	std	Y+13, r16	; 0x0d
		_delay_ms(800);
		//	usart_string("AT+CIPMUX=0\r\n");		//to turn off other connection other than currently running connection 
		//	_delay_ms(5000);
		usart_string("AT+CIPSTART=\"TCP\",\"api.thingspeak.com\",80\r\n");//TCP is to turn on the Internet connection, CIPSTART is used to starts the command, api.thingspeak.com is the destination
     24e:	85 e7       	ldi	r24, 0x75	; 117
     250:	90 e0       	ldi	r25, 0x00	; 0
     252:	0e 94 75 00 	call	0xea	; 0xea <usart_string>
     256:	80 e0       	ldi	r24, 0x00	; 0
     258:	90 e4       	ldi	r25, 0x40	; 64
     25a:	ac e9       	ldi	r26, 0x9C	; 156
     25c:	b5 e4       	ldi	r27, 0x45	; 69
     25e:	8f 87       	std	Y+15, r24	; 0x0f
     260:	98 8b       	std	Y+16, r25	; 0x10
     262:	a9 8b       	std	Y+17, r26	; 0x11
     264:	ba 8b       	std	Y+18, r27	; 0x12
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     266:	6f 85       	ldd	r22, Y+15	; 0x0f
     268:	78 89       	ldd	r23, Y+16	; 0x10
     26a:	89 89       	ldd	r24, Y+17	; 0x11
     26c:	9a 89       	ldd	r25, Y+18	; 0x12
     26e:	20 e0       	ldi	r18, 0x00	; 0
     270:	30 e0       	ldi	r19, 0x00	; 0
     272:	4a e7       	ldi	r20, 0x7A	; 122
     274:	55 e4       	ldi	r21, 0x45	; 69
     276:	0e 94 fa 06 	call	0xdf4	; 0xdf4 <__mulsf3>
     27a:	dc 01       	movw	r26, r24
     27c:	cb 01       	movw	r24, r22
     27e:	8b 8b       	std	Y+19, r24	; 0x13
     280:	9c 8b       	std	Y+20, r25	; 0x14
     282:	ad 8b       	std	Y+21, r26	; 0x15
     284:	be 8b       	std	Y+22, r27	; 0x16
	if (__tmp < 1.0)
     286:	11 e0       	ldi	r17, 0x01	; 1
     288:	6b 89       	ldd	r22, Y+19	; 0x13
     28a:	7c 89       	ldd	r23, Y+20	; 0x14
     28c:	8d 89       	ldd	r24, Y+21	; 0x15
     28e:	9e 89       	ldd	r25, Y+22	; 0x16
     290:	20 e0       	ldi	r18, 0x00	; 0
     292:	30 e0       	ldi	r19, 0x00	; 0
     294:	40 e8       	ldi	r20, 0x80	; 128
     296:	5f e3       	ldi	r21, 0x3F	; 63
     298:	0e 94 54 08 	call	0x10a8	; 0x10a8 <__ltsf2>
     29c:	88 23       	and	r24, r24
     29e:	0c f0       	brlt	.+2      	; 0x2a2 <main+0x17a>
     2a0:	10 e0       	ldi	r17, 0x00	; 0
     2a2:	11 23       	and	r17, r17
     2a4:	29 f0       	breq	.+10     	; 0x2b0 <main+0x188>
		__ticks = 1;
     2a6:	81 e0       	ldi	r24, 0x01	; 1
     2a8:	90 e0       	ldi	r25, 0x00	; 0
     2aa:	98 8f       	std	Y+24, r25	; 0x18
     2ac:	8f 8b       	std	Y+23, r24	; 0x17
     2ae:	46 c0       	rjmp	.+140    	; 0x33c <main+0x214>
	else if (__tmp > 65535)
     2b0:	11 e0       	ldi	r17, 0x01	; 1
     2b2:	6b 89       	ldd	r22, Y+19	; 0x13
     2b4:	7c 89       	ldd	r23, Y+20	; 0x14
     2b6:	8d 89       	ldd	r24, Y+21	; 0x15
     2b8:	9e 89       	ldd	r25, Y+22	; 0x16
     2ba:	20 e0       	ldi	r18, 0x00	; 0
     2bc:	3f ef       	ldi	r19, 0xFF	; 255
     2be:	4f e7       	ldi	r20, 0x7F	; 127
     2c0:	57 e4       	ldi	r21, 0x47	; 71
     2c2:	0e 94 f4 07 	call	0xfe8	; 0xfe8 <__gtsf2>
     2c6:	18 16       	cp	r1, r24
     2c8:	0c f0       	brlt	.+2      	; 0x2cc <main+0x1a4>
     2ca:	10 e0       	ldi	r17, 0x00	; 0
     2cc:	11 23       	and	r17, r17
     2ce:	61 f1       	breq	.+88     	; 0x328 <main+0x200>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     2d0:	6f 85       	ldd	r22, Y+15	; 0x0f
     2d2:	78 89       	ldd	r23, Y+16	; 0x10
     2d4:	89 89       	ldd	r24, Y+17	; 0x11
     2d6:	9a 89       	ldd	r25, Y+18	; 0x12
     2d8:	20 e0       	ldi	r18, 0x00	; 0
     2da:	30 e0       	ldi	r19, 0x00	; 0
     2dc:	40 e2       	ldi	r20, 0x20	; 32
     2de:	51 e4       	ldi	r21, 0x41	; 65
     2e0:	0e 94 fa 06 	call	0xdf4	; 0xdf4 <__mulsf3>
     2e4:	dc 01       	movw	r26, r24
     2e6:	cb 01       	movw	r24, r22
     2e8:	bc 01       	movw	r22, r24
     2ea:	cd 01       	movw	r24, r26
     2ec:	0e 94 26 05 	call	0xa4c	; 0xa4c <__fixunssfsi>
     2f0:	dc 01       	movw	r26, r24
     2f2:	cb 01       	movw	r24, r22
     2f4:	98 8f       	std	Y+24, r25	; 0x18
     2f6:	8f 8b       	std	Y+23, r24	; 0x17
     2f8:	12 c0       	rjmp	.+36     	; 0x31e <main+0x1f6>
     2fa:	80 e9       	ldi	r24, 0x90	; 144
     2fc:	91 e0       	ldi	r25, 0x01	; 1
     2fe:	9a 8f       	std	Y+26, r25	; 0x1a
     300:	89 8f       	std	Y+25, r24	; 0x19
     302:	89 8d       	ldd	r24, Y+25	; 0x19
     304:	9a 8d       	ldd	r25, Y+26	; 0x1a
     306:	8c 01       	movw	r16, r24
     308:	c8 01       	movw	r24, r16
     30a:	01 97       	sbiw	r24, 0x01	; 1
     30c:	f1 f7       	brne	.-4      	; 0x30a <main+0x1e2>
     30e:	8c 01       	movw	r16, r24
     310:	1a 8f       	std	Y+26, r17	; 0x1a
     312:	09 8f       	std	Y+25, r16	; 0x19
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     314:	8f 89       	ldd	r24, Y+23	; 0x17
     316:	98 8d       	ldd	r25, Y+24	; 0x18
     318:	01 97       	sbiw	r24, 0x01	; 1
     31a:	98 8f       	std	Y+24, r25	; 0x18
     31c:	8f 8b       	std	Y+23, r24	; 0x17
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     31e:	8f 89       	ldd	r24, Y+23	; 0x17
     320:	98 8d       	ldd	r25, Y+24	; 0x18
     322:	00 97       	sbiw	r24, 0x00	; 0
     324:	51 f7       	brne	.-44     	; 0x2fa <main+0x1d2>
     326:	17 c0       	rjmp	.+46     	; 0x356 <main+0x22e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     328:	6b 89       	ldd	r22, Y+19	; 0x13
     32a:	7c 89       	ldd	r23, Y+20	; 0x14
     32c:	8d 89       	ldd	r24, Y+21	; 0x15
     32e:	9e 89       	ldd	r25, Y+22	; 0x16
     330:	0e 94 26 05 	call	0xa4c	; 0xa4c <__fixunssfsi>
     334:	dc 01       	movw	r26, r24
     336:	cb 01       	movw	r24, r22
     338:	98 8f       	std	Y+24, r25	; 0x18
     33a:	8f 8b       	std	Y+23, r24	; 0x17
     33c:	8f 89       	ldd	r24, Y+23	; 0x17
     33e:	98 8d       	ldd	r25, Y+24	; 0x18
     340:	9c 8f       	std	Y+28, r25	; 0x1c
     342:	8b 8f       	std	Y+27, r24	; 0x1b
     344:	8b 8d       	ldd	r24, Y+27	; 0x1b
     346:	9c 8d       	ldd	r25, Y+28	; 0x1c
     348:	8c 01       	movw	r16, r24
     34a:	f8 01       	movw	r30, r16
     34c:	31 97       	sbiw	r30, 0x01	; 1
     34e:	f1 f7       	brne	.-4      	; 0x34c <main+0x224>
     350:	8f 01       	movw	r16, r30
     352:	1c 8f       	std	Y+28, r17	; 0x1c
     354:	0b 8f       	std	Y+27, r16	; 0x1b
		_delay_ms(5000);
		usart_string("AT+CIPSEND\r\n");//is used to send the link
     356:	81 ea       	ldi	r24, 0xA1	; 161
     358:	90 e0       	ldi	r25, 0x00	; 0
     35a:	0e 94 75 00 	call	0xea	; 0xea <usart_string>
     35e:	80 e0       	ldi	r24, 0x00	; 0
     360:	90 e0       	ldi	r25, 0x00	; 0
     362:	aa e7       	ldi	r26, 0x7A	; 122
     364:	b4 e4       	ldi	r27, 0x44	; 68
     366:	8d 8f       	std	Y+29, r24	; 0x1d
     368:	9e 8f       	std	Y+30, r25	; 0x1e
     36a:	af 8f       	std	Y+31, r26	; 0x1f
     36c:	b8 a3       	std	Y+32, r27	; 0x20
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     36e:	6d 8d       	ldd	r22, Y+29	; 0x1d
     370:	7e 8d       	ldd	r23, Y+30	; 0x1e
     372:	8f 8d       	ldd	r24, Y+31	; 0x1f
     374:	98 a1       	ldd	r25, Y+32	; 0x20
     376:	20 e0       	ldi	r18, 0x00	; 0
     378:	30 e0       	ldi	r19, 0x00	; 0
     37a:	4a e7       	ldi	r20, 0x7A	; 122
     37c:	55 e4       	ldi	r21, 0x45	; 69
     37e:	0e 94 fa 06 	call	0xdf4	; 0xdf4 <__mulsf3>
     382:	dc 01       	movw	r26, r24
     384:	cb 01       	movw	r24, r22
     386:	89 a3       	std	Y+33, r24	; 0x21
     388:	9a a3       	std	Y+34, r25	; 0x22
     38a:	ab a3       	std	Y+35, r26	; 0x23
     38c:	bc a3       	std	Y+36, r27	; 0x24
	if (__tmp < 1.0)
     38e:	11 e0       	ldi	r17, 0x01	; 1
     390:	69 a1       	ldd	r22, Y+33	; 0x21
     392:	7a a1       	ldd	r23, Y+34	; 0x22
     394:	8b a1       	ldd	r24, Y+35	; 0x23
     396:	9c a1       	ldd	r25, Y+36	; 0x24
     398:	20 e0       	ldi	r18, 0x00	; 0
     39a:	30 e0       	ldi	r19, 0x00	; 0
     39c:	40 e8       	ldi	r20, 0x80	; 128
     39e:	5f e3       	ldi	r21, 0x3F	; 63
     3a0:	0e 94 54 08 	call	0x10a8	; 0x10a8 <__ltsf2>
     3a4:	88 23       	and	r24, r24
     3a6:	0c f0       	brlt	.+2      	; 0x3aa <main+0x282>
     3a8:	10 e0       	ldi	r17, 0x00	; 0
     3aa:	11 23       	and	r17, r17
     3ac:	29 f0       	breq	.+10     	; 0x3b8 <main+0x290>
		__ticks = 1;
     3ae:	81 e0       	ldi	r24, 0x01	; 1
     3b0:	90 e0       	ldi	r25, 0x00	; 0
     3b2:	9e a3       	std	Y+38, r25	; 0x26
     3b4:	8d a3       	std	Y+37, r24	; 0x25
     3b6:	46 c0       	rjmp	.+140    	; 0x444 <main+0x31c>
	else if (__tmp > 65535)
     3b8:	11 e0       	ldi	r17, 0x01	; 1
     3ba:	69 a1       	ldd	r22, Y+33	; 0x21
     3bc:	7a a1       	ldd	r23, Y+34	; 0x22
     3be:	8b a1       	ldd	r24, Y+35	; 0x23
     3c0:	9c a1       	ldd	r25, Y+36	; 0x24
     3c2:	20 e0       	ldi	r18, 0x00	; 0
     3c4:	3f ef       	ldi	r19, 0xFF	; 255
     3c6:	4f e7       	ldi	r20, 0x7F	; 127
     3c8:	57 e4       	ldi	r21, 0x47	; 71
     3ca:	0e 94 f4 07 	call	0xfe8	; 0xfe8 <__gtsf2>
     3ce:	18 16       	cp	r1, r24
     3d0:	0c f0       	brlt	.+2      	; 0x3d4 <main+0x2ac>
     3d2:	10 e0       	ldi	r17, 0x00	; 0
     3d4:	11 23       	and	r17, r17
     3d6:	61 f1       	breq	.+88     	; 0x430 <main+0x308>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     3d8:	6d 8d       	ldd	r22, Y+29	; 0x1d
     3da:	7e 8d       	ldd	r23, Y+30	; 0x1e
     3dc:	8f 8d       	ldd	r24, Y+31	; 0x1f
     3de:	98 a1       	ldd	r25, Y+32	; 0x20
     3e0:	20 e0       	ldi	r18, 0x00	; 0
     3e2:	30 e0       	ldi	r19, 0x00	; 0
     3e4:	40 e2       	ldi	r20, 0x20	; 32
     3e6:	51 e4       	ldi	r21, 0x41	; 65
     3e8:	0e 94 fa 06 	call	0xdf4	; 0xdf4 <__mulsf3>
     3ec:	dc 01       	movw	r26, r24
     3ee:	cb 01       	movw	r24, r22
     3f0:	bc 01       	movw	r22, r24
     3f2:	cd 01       	movw	r24, r26
     3f4:	0e 94 26 05 	call	0xa4c	; 0xa4c <__fixunssfsi>
     3f8:	dc 01       	movw	r26, r24
     3fa:	cb 01       	movw	r24, r22
     3fc:	9e a3       	std	Y+38, r25	; 0x26
     3fe:	8d a3       	std	Y+37, r24	; 0x25
     400:	12 c0       	rjmp	.+36     	; 0x426 <main+0x2fe>
     402:	80 e9       	ldi	r24, 0x90	; 144
     404:	91 e0       	ldi	r25, 0x01	; 1
     406:	98 a7       	std	Y+40, r25	; 0x28
     408:	8f a3       	std	Y+39, r24	; 0x27
     40a:	8f a1       	ldd	r24, Y+39	; 0x27
     40c:	98 a5       	ldd	r25, Y+40	; 0x28
     40e:	8c 01       	movw	r16, r24
     410:	c8 01       	movw	r24, r16
     412:	01 97       	sbiw	r24, 0x01	; 1
     414:	f1 f7       	brne	.-4      	; 0x412 <main+0x2ea>
     416:	8c 01       	movw	r16, r24
     418:	18 a7       	std	Y+40, r17	; 0x28
     41a:	0f a3       	std	Y+39, r16	; 0x27
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     41c:	8d a1       	ldd	r24, Y+37	; 0x25
     41e:	9e a1       	ldd	r25, Y+38	; 0x26
     420:	01 97       	sbiw	r24, 0x01	; 1
     422:	9e a3       	std	Y+38, r25	; 0x26
     424:	8d a3       	std	Y+37, r24	; 0x25
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     426:	8d a1       	ldd	r24, Y+37	; 0x25
     428:	9e a1       	ldd	r25, Y+38	; 0x26
     42a:	00 97       	sbiw	r24, 0x00	; 0
     42c:	51 f7       	brne	.-44     	; 0x402 <main+0x2da>
     42e:	17 c0       	rjmp	.+46     	; 0x45e <main+0x336>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     430:	69 a1       	ldd	r22, Y+33	; 0x21
     432:	7a a1       	ldd	r23, Y+34	; 0x22
     434:	8b a1       	ldd	r24, Y+35	; 0x23
     436:	9c a1       	ldd	r25, Y+36	; 0x24
     438:	0e 94 26 05 	call	0xa4c	; 0xa4c <__fixunssfsi>
     43c:	dc 01       	movw	r26, r24
     43e:	cb 01       	movw	r24, r22
     440:	9e a3       	std	Y+38, r25	; 0x26
     442:	8d a3       	std	Y+37, r24	; 0x25
     444:	8d a1       	ldd	r24, Y+37	; 0x25
     446:	9e a1       	ldd	r25, Y+38	; 0x26
     448:	9a a7       	std	Y+42, r25	; 0x2a
     44a:	89 a7       	std	Y+41, r24	; 0x29
     44c:	89 a5       	ldd	r24, Y+41	; 0x29
     44e:	9a a5       	ldd	r25, Y+42	; 0x2a
     450:	8c 01       	movw	r16, r24
     452:	f8 01       	movw	r30, r16
     454:	31 97       	sbiw	r30, 0x01	; 1
     456:	f1 f7       	brne	.-4      	; 0x454 <main+0x32c>
     458:	8f 01       	movw	r16, r30
     45a:	1a a7       	std	Y+42, r17	; 0x2a
     45c:	09 a7       	std	Y+41, r16	; 0x29
		_delay_ms(1000);
		usart_string("GET https://api.thingspeak.com/update?api_key=5NI922SL4EOGTX70&field1=26"); //GET is used to get link  
     45e:	8e ea       	ldi	r24, 0xAE	; 174
     460:	90 e0       	ldi	r25, 0x00	; 0
     462:	0e 94 75 00 	call	0xea	; 0xea <usart_string>
		usart_string("\r\n");
     466:	87 ef       	ldi	r24, 0xF7	; 247
     468:	90 e0       	ldi	r25, 0x00	; 0
     46a:	0e 94 75 00 	call	0xea	; 0xea <usart_string>
     46e:	80 e0       	ldi	r24, 0x00	; 0
     470:	90 e0       	ldi	r25, 0x00	; 0
     472:	a6 e9       	ldi	r26, 0x96	; 150
     474:	b3 e4       	ldi	r27, 0x43	; 67
     476:	8b a7       	std	Y+43, r24	; 0x2b
     478:	9c a7       	std	Y+44, r25	; 0x2c
     47a:	ad a7       	std	Y+45, r26	; 0x2d
     47c:	be a7       	std	Y+46, r27	; 0x2e
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     47e:	6b a5       	ldd	r22, Y+43	; 0x2b
     480:	7c a5       	ldd	r23, Y+44	; 0x2c
     482:	8d a5       	ldd	r24, Y+45	; 0x2d
     484:	9e a5       	ldd	r25, Y+46	; 0x2e
     486:	20 e0       	ldi	r18, 0x00	; 0
     488:	30 e0       	ldi	r19, 0x00	; 0
     48a:	4a e7       	ldi	r20, 0x7A	; 122
     48c:	55 e4       	ldi	r21, 0x45	; 69
     48e:	0e 94 fa 06 	call	0xdf4	; 0xdf4 <__mulsf3>
     492:	dc 01       	movw	r26, r24
     494:	cb 01       	movw	r24, r22
     496:	8f a7       	std	Y+47, r24	; 0x2f
     498:	98 ab       	std	Y+48, r25	; 0x30
     49a:	a9 ab       	std	Y+49, r26	; 0x31
     49c:	ba ab       	std	Y+50, r27	; 0x32
	if (__tmp < 1.0)
     49e:	11 e0       	ldi	r17, 0x01	; 1
     4a0:	6f a5       	ldd	r22, Y+47	; 0x2f
     4a2:	78 a9       	ldd	r23, Y+48	; 0x30
     4a4:	89 a9       	ldd	r24, Y+49	; 0x31
     4a6:	9a a9       	ldd	r25, Y+50	; 0x32
     4a8:	20 e0       	ldi	r18, 0x00	; 0
     4aa:	30 e0       	ldi	r19, 0x00	; 0
     4ac:	40 e8       	ldi	r20, 0x80	; 128
     4ae:	5f e3       	ldi	r21, 0x3F	; 63
     4b0:	0e 94 54 08 	call	0x10a8	; 0x10a8 <__ltsf2>
     4b4:	88 23       	and	r24, r24
     4b6:	0c f0       	brlt	.+2      	; 0x4ba <__stack+0x5b>
     4b8:	10 e0       	ldi	r17, 0x00	; 0
     4ba:	11 23       	and	r17, r17
     4bc:	29 f0       	breq	.+10     	; 0x4c8 <__stack+0x69>
		__ticks = 1;
     4be:	81 e0       	ldi	r24, 0x01	; 1
     4c0:	90 e0       	ldi	r25, 0x00	; 0
     4c2:	9c ab       	std	Y+52, r25	; 0x34
     4c4:	8b ab       	std	Y+51, r24	; 0x33
     4c6:	46 c0       	rjmp	.+140    	; 0x554 <__stack+0xf5>
	else if (__tmp > 65535)
     4c8:	11 e0       	ldi	r17, 0x01	; 1
     4ca:	6f a5       	ldd	r22, Y+47	; 0x2f
     4cc:	78 a9       	ldd	r23, Y+48	; 0x30
     4ce:	89 a9       	ldd	r24, Y+49	; 0x31
     4d0:	9a a9       	ldd	r25, Y+50	; 0x32
     4d2:	20 e0       	ldi	r18, 0x00	; 0
     4d4:	3f ef       	ldi	r19, 0xFF	; 255
     4d6:	4f e7       	ldi	r20, 0x7F	; 127
     4d8:	57 e4       	ldi	r21, 0x47	; 71
     4da:	0e 94 f4 07 	call	0xfe8	; 0xfe8 <__gtsf2>
     4de:	18 16       	cp	r1, r24
     4e0:	0c f0       	brlt	.+2      	; 0x4e4 <__stack+0x85>
     4e2:	10 e0       	ldi	r17, 0x00	; 0
     4e4:	11 23       	and	r17, r17
     4e6:	61 f1       	breq	.+88     	; 0x540 <__stack+0xe1>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     4e8:	6b a5       	ldd	r22, Y+43	; 0x2b
     4ea:	7c a5       	ldd	r23, Y+44	; 0x2c
     4ec:	8d a5       	ldd	r24, Y+45	; 0x2d
     4ee:	9e a5       	ldd	r25, Y+46	; 0x2e
     4f0:	20 e0       	ldi	r18, 0x00	; 0
     4f2:	30 e0       	ldi	r19, 0x00	; 0
     4f4:	40 e2       	ldi	r20, 0x20	; 32
     4f6:	51 e4       	ldi	r21, 0x41	; 65
     4f8:	0e 94 fa 06 	call	0xdf4	; 0xdf4 <__mulsf3>
     4fc:	dc 01       	movw	r26, r24
     4fe:	cb 01       	movw	r24, r22
     500:	bc 01       	movw	r22, r24
     502:	cd 01       	movw	r24, r26
     504:	0e 94 26 05 	call	0xa4c	; 0xa4c <__fixunssfsi>
     508:	dc 01       	movw	r26, r24
     50a:	cb 01       	movw	r24, r22
     50c:	9c ab       	std	Y+52, r25	; 0x34
     50e:	8b ab       	std	Y+51, r24	; 0x33
     510:	12 c0       	rjmp	.+36     	; 0x536 <__stack+0xd7>
     512:	80 e9       	ldi	r24, 0x90	; 144
     514:	91 e0       	ldi	r25, 0x01	; 1
     516:	9e ab       	std	Y+54, r25	; 0x36
     518:	8d ab       	std	Y+53, r24	; 0x35
     51a:	8d a9       	ldd	r24, Y+53	; 0x35
     51c:	9e a9       	ldd	r25, Y+54	; 0x36
     51e:	8c 01       	movw	r16, r24
     520:	c8 01       	movw	r24, r16
     522:	01 97       	sbiw	r24, 0x01	; 1
     524:	f1 f7       	brne	.-4      	; 0x522 <__stack+0xc3>
     526:	8c 01       	movw	r16, r24
     528:	1e ab       	std	Y+54, r17	; 0x36
     52a:	0d ab       	std	Y+53, r16	; 0x35
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     52c:	8b a9       	ldd	r24, Y+51	; 0x33
     52e:	9c a9       	ldd	r25, Y+52	; 0x34
     530:	01 97       	sbiw	r24, 0x01	; 1
     532:	9c ab       	std	Y+52, r25	; 0x34
     534:	8b ab       	std	Y+51, r24	; 0x33
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     536:	8b a9       	ldd	r24, Y+51	; 0x33
     538:	9c a9       	ldd	r25, Y+52	; 0x34
     53a:	00 97       	sbiw	r24, 0x00	; 0
     53c:	51 f7       	brne	.-44     	; 0x512 <__stack+0xb3>
     53e:	17 c0       	rjmp	.+46     	; 0x56e <__stack+0x10f>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     540:	6f a5       	ldd	r22, Y+47	; 0x2f
     542:	78 a9       	ldd	r23, Y+48	; 0x30
     544:	89 a9       	ldd	r24, Y+49	; 0x31
     546:	9a a9       	ldd	r25, Y+50	; 0x32
     548:	0e 94 26 05 	call	0xa4c	; 0xa4c <__fixunssfsi>
     54c:	dc 01       	movw	r26, r24
     54e:	cb 01       	movw	r24, r22
     550:	9c ab       	std	Y+52, r25	; 0x34
     552:	8b ab       	std	Y+51, r24	; 0x33
     554:	8b a9       	ldd	r24, Y+51	; 0x33
     556:	9c a9       	ldd	r25, Y+52	; 0x34
     558:	98 af       	std	Y+56, r25	; 0x38
     55a:	8f ab       	std	Y+55, r24	; 0x37
     55c:	8f a9       	ldd	r24, Y+55	; 0x37
     55e:	98 ad       	ldd	r25, Y+56	; 0x38
     560:	8c 01       	movw	r16, r24
     562:	f8 01       	movw	r30, r16
     564:	31 97       	sbiw	r30, 0x01	; 1
     566:	f1 f7       	brne	.-4      	; 0x564 <__stack+0x105>
     568:	8f 01       	movw	r16, r30
     56a:	18 af       	std	Y+56, r17	; 0x38
     56c:	0f ab       	std	Y+55, r16	; 0x37
		_delay_ms(300);
		usart_transmit(0x1A); // is to finalise the commands, its like "over(walkie talky)" command
     56e:	8a e1       	ldi	r24, 0x1A	; 26
     570:	0e 94 5b 00 	call	0xb6	; 0xb6 <usart_transmit>
     574:	80 e0       	ldi	r24, 0x00	; 0
     576:	90 e4       	ldi	r25, 0x40	; 64
     578:	ac e9       	ldi	r26, 0x9C	; 156
     57a:	b5 e4       	ldi	r27, 0x45	; 69
     57c:	89 af       	std	Y+57, r24	; 0x39
     57e:	9a af       	std	Y+58, r25	; 0x3a
     580:	ab af       	std	Y+59, r26	; 0x3b
     582:	bc af       	std	Y+60, r27	; 0x3c
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     584:	69 ad       	ldd	r22, Y+57	; 0x39
     586:	7a ad       	ldd	r23, Y+58	; 0x3a
     588:	8b ad       	ldd	r24, Y+59	; 0x3b
     58a:	9c ad       	ldd	r25, Y+60	; 0x3c
     58c:	20 e0       	ldi	r18, 0x00	; 0
     58e:	30 e0       	ldi	r19, 0x00	; 0
     590:	4a e7       	ldi	r20, 0x7A	; 122
     592:	55 e4       	ldi	r21, 0x45	; 69
     594:	0e 94 fa 06 	call	0xdf4	; 0xdf4 <__mulsf3>
     598:	dc 01       	movw	r26, r24
     59a:	cb 01       	movw	r24, r22
     59c:	9e 01       	movw	r18, r28
     59e:	23 5c       	subi	r18, 0xC3	; 195
     5a0:	3f 4f       	sbci	r19, 0xFF	; 255
     5a2:	f9 01       	movw	r30, r18
     5a4:	80 83       	st	Z, r24
     5a6:	91 83       	std	Z+1, r25	; 0x01
     5a8:	a2 83       	std	Z+2, r26	; 0x02
     5aa:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     5ac:	11 e0       	ldi	r17, 0x01	; 1
     5ae:	ce 01       	movw	r24, r28
     5b0:	cd 96       	adiw	r24, 0x3d	; 61
     5b2:	fc 01       	movw	r30, r24
     5b4:	60 81       	ld	r22, Z
     5b6:	71 81       	ldd	r23, Z+1	; 0x01
     5b8:	82 81       	ldd	r24, Z+2	; 0x02
     5ba:	93 81       	ldd	r25, Z+3	; 0x03
     5bc:	20 e0       	ldi	r18, 0x00	; 0
     5be:	30 e0       	ldi	r19, 0x00	; 0
     5c0:	40 e8       	ldi	r20, 0x80	; 128
     5c2:	5f e3       	ldi	r21, 0x3F	; 63
     5c4:	0e 94 54 08 	call	0x10a8	; 0x10a8 <__ltsf2>
     5c8:	88 23       	and	r24, r24
     5ca:	0c f0       	brlt	.+2      	; 0x5ce <__stack+0x16f>
     5cc:	10 e0       	ldi	r17, 0x00	; 0
     5ce:	11 23       	and	r17, r17
     5d0:	49 f0       	breq	.+18     	; 0x5e4 <__stack+0x185>
		__ticks = 1;
     5d2:	ce 01       	movw	r24, r28
     5d4:	8f 5b       	subi	r24, 0xBF	; 191
     5d6:	9f 4f       	sbci	r25, 0xFF	; 255
     5d8:	21 e0       	ldi	r18, 0x01	; 1
     5da:	30 e0       	ldi	r19, 0x00	; 0
     5dc:	fc 01       	movw	r30, r24
     5de:	31 83       	std	Z+1, r19	; 0x01
     5e0:	20 83       	st	Z, r18
     5e2:	6e c0       	rjmp	.+220    	; 0x6c0 <__stack+0x261>
	else if (__tmp > 65535)
     5e4:	11 e0       	ldi	r17, 0x01	; 1
     5e6:	ce 01       	movw	r24, r28
     5e8:	cd 96       	adiw	r24, 0x3d	; 61
     5ea:	fc 01       	movw	r30, r24
     5ec:	60 81       	ld	r22, Z
     5ee:	71 81       	ldd	r23, Z+1	; 0x01
     5f0:	82 81       	ldd	r24, Z+2	; 0x02
     5f2:	93 81       	ldd	r25, Z+3	; 0x03
     5f4:	20 e0       	ldi	r18, 0x00	; 0
     5f6:	3f ef       	ldi	r19, 0xFF	; 255
     5f8:	4f e7       	ldi	r20, 0x7F	; 127
     5fa:	57 e4       	ldi	r21, 0x47	; 71
     5fc:	0e 94 f4 07 	call	0xfe8	; 0xfe8 <__gtsf2>
     600:	18 16       	cp	r1, r24
     602:	0c f0       	brlt	.+2      	; 0x606 <__stack+0x1a7>
     604:	10 e0       	ldi	r17, 0x00	; 0
     606:	11 23       	and	r17, r17
     608:	09 f4       	brne	.+2      	; 0x60c <__stack+0x1ad>
     60a:	49 c0       	rjmp	.+146    	; 0x69e <__stack+0x23f>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     60c:	69 ad       	ldd	r22, Y+57	; 0x39
     60e:	7a ad       	ldd	r23, Y+58	; 0x3a
     610:	8b ad       	ldd	r24, Y+59	; 0x3b
     612:	9c ad       	ldd	r25, Y+60	; 0x3c
     614:	20 e0       	ldi	r18, 0x00	; 0
     616:	30 e0       	ldi	r19, 0x00	; 0
     618:	40 e2       	ldi	r20, 0x20	; 32
     61a:	51 e4       	ldi	r21, 0x41	; 65
     61c:	0e 94 fa 06 	call	0xdf4	; 0xdf4 <__mulsf3>
     620:	dc 01       	movw	r26, r24
     622:	cb 01       	movw	r24, r22
     624:	8e 01       	movw	r16, r28
     626:	0f 5b       	subi	r16, 0xBF	; 191
     628:	1f 4f       	sbci	r17, 0xFF	; 255
     62a:	bc 01       	movw	r22, r24
     62c:	cd 01       	movw	r24, r26
     62e:	0e 94 26 05 	call	0xa4c	; 0xa4c <__fixunssfsi>
     632:	dc 01       	movw	r26, r24
     634:	cb 01       	movw	r24, r22
     636:	f8 01       	movw	r30, r16
     638:	91 83       	std	Z+1, r25	; 0x01
     63a:	80 83       	st	Z, r24
     63c:	27 c0       	rjmp	.+78     	; 0x68c <__stack+0x22d>
     63e:	ce 01       	movw	r24, r28
     640:	8d 5b       	subi	r24, 0xBD	; 189
     642:	9f 4f       	sbci	r25, 0xFF	; 255
     644:	20 e9       	ldi	r18, 0x90	; 144
     646:	31 e0       	ldi	r19, 0x01	; 1
     648:	fc 01       	movw	r30, r24
     64a:	31 83       	std	Z+1, r19	; 0x01
     64c:	20 83       	st	Z, r18
     64e:	ce 01       	movw	r24, r28
     650:	8d 5b       	subi	r24, 0xBD	; 189
     652:	9f 4f       	sbci	r25, 0xFF	; 255
     654:	fc 01       	movw	r30, r24
     656:	80 81       	ld	r24, Z
     658:	91 81       	ldd	r25, Z+1	; 0x01
     65a:	8c 01       	movw	r16, r24
     65c:	c8 01       	movw	r24, r16
     65e:	01 97       	sbiw	r24, 0x01	; 1
     660:	f1 f7       	brne	.-4      	; 0x65e <__stack+0x1ff>
     662:	8c 01       	movw	r16, r24
     664:	ce 01       	movw	r24, r28
     666:	8d 5b       	subi	r24, 0xBD	; 189
     668:	9f 4f       	sbci	r25, 0xFF	; 255
     66a:	fc 01       	movw	r30, r24
     66c:	11 83       	std	Z+1, r17	; 0x01
     66e:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     670:	ce 01       	movw	r24, r28
     672:	8f 5b       	subi	r24, 0xBF	; 191
     674:	9f 4f       	sbci	r25, 0xFF	; 255
     676:	9e 01       	movw	r18, r28
     678:	2f 5b       	subi	r18, 0xBF	; 191
     67a:	3f 4f       	sbci	r19, 0xFF	; 255
     67c:	f9 01       	movw	r30, r18
     67e:	20 81       	ld	r18, Z
     680:	31 81       	ldd	r19, Z+1	; 0x01
     682:	21 50       	subi	r18, 0x01	; 1
     684:	30 40       	sbci	r19, 0x00	; 0
     686:	fc 01       	movw	r30, r24
     688:	31 83       	std	Z+1, r19	; 0x01
     68a:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     68c:	ce 01       	movw	r24, r28
     68e:	8f 5b       	subi	r24, 0xBF	; 191
     690:	9f 4f       	sbci	r25, 0xFF	; 255
     692:	fc 01       	movw	r30, r24
     694:	80 81       	ld	r24, Z
     696:	91 81       	ldd	r25, Z+1	; 0x01
     698:	00 97       	sbiw	r24, 0x00	; 0
     69a:	89 f6       	brne	.-94     	; 0x63e <__stack+0x1df>
     69c:	2e c0       	rjmp	.+92     	; 0x6fa <__stack+0x29b>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     69e:	8e 01       	movw	r16, r28
     6a0:	0f 5b       	subi	r16, 0xBF	; 191
     6a2:	1f 4f       	sbci	r17, 0xFF	; 255
     6a4:	ce 01       	movw	r24, r28
     6a6:	cd 96       	adiw	r24, 0x3d	; 61
     6a8:	fc 01       	movw	r30, r24
     6aa:	60 81       	ld	r22, Z
     6ac:	71 81       	ldd	r23, Z+1	; 0x01
     6ae:	82 81       	ldd	r24, Z+2	; 0x02
     6b0:	93 81       	ldd	r25, Z+3	; 0x03
     6b2:	0e 94 26 05 	call	0xa4c	; 0xa4c <__fixunssfsi>
     6b6:	dc 01       	movw	r26, r24
     6b8:	cb 01       	movw	r24, r22
     6ba:	f8 01       	movw	r30, r16
     6bc:	91 83       	std	Z+1, r25	; 0x01
     6be:	80 83       	st	Z, r24
     6c0:	ce 01       	movw	r24, r28
     6c2:	8b 5b       	subi	r24, 0xBB	; 187
     6c4:	9f 4f       	sbci	r25, 0xFF	; 255
     6c6:	9e 01       	movw	r18, r28
     6c8:	2f 5b       	subi	r18, 0xBF	; 191
     6ca:	3f 4f       	sbci	r19, 0xFF	; 255
     6cc:	f9 01       	movw	r30, r18
     6ce:	20 81       	ld	r18, Z
     6d0:	31 81       	ldd	r19, Z+1	; 0x01
     6d2:	fc 01       	movw	r30, r24
     6d4:	31 83       	std	Z+1, r19	; 0x01
     6d6:	20 83       	st	Z, r18
     6d8:	ce 01       	movw	r24, r28
     6da:	8b 5b       	subi	r24, 0xBB	; 187
     6dc:	9f 4f       	sbci	r25, 0xFF	; 255
     6de:	fc 01       	movw	r30, r24
     6e0:	80 81       	ld	r24, Z
     6e2:	91 81       	ldd	r25, Z+1	; 0x01
     6e4:	8c 01       	movw	r16, r24
     6e6:	c8 01       	movw	r24, r16
     6e8:	01 97       	sbiw	r24, 0x01	; 1
     6ea:	f1 f7       	brne	.-4      	; 0x6e8 <__stack+0x289>
     6ec:	8c 01       	movw	r16, r24
     6ee:	ce 01       	movw	r24, r28
     6f0:	8b 5b       	subi	r24, 0xBB	; 187
     6f2:	9f 4f       	sbci	r25, 0xFF	; 255
     6f4:	fc 01       	movw	r30, r24
     6f6:	11 83       	std	Z+1, r17	; 0x01
     6f8:	00 83       	st	Z, r16
		_delay_ms(5000);
		usart_string("AT+CIPSHUT\r\n"); // it is the command to end connection like "over and out"
     6fa:	8a ef       	ldi	r24, 0xFA	; 250
     6fc:	90 e0       	ldi	r25, 0x00	; 0
     6fe:	0e 94 75 00 	call	0xea	; 0xea <usart_string>
     702:	9e 01       	movw	r18, r28
     704:	29 5b       	subi	r18, 0xB9	; 185
     706:	3f 4f       	sbci	r19, 0xFF	; 255
     708:	80 e0       	ldi	r24, 0x00	; 0
     70a:	90 e4       	ldi	r25, 0x40	; 64
     70c:	ac e9       	ldi	r26, 0x9C	; 156
     70e:	b5 e4       	ldi	r27, 0x45	; 69
     710:	f9 01       	movw	r30, r18
     712:	80 83       	st	Z, r24
     714:	91 83       	std	Z+1, r25	; 0x01
     716:	a2 83       	std	Z+2, r26	; 0x02
     718:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     71a:	8e 01       	movw	r16, r28
     71c:	05 5b       	subi	r16, 0xB5	; 181
     71e:	1f 4f       	sbci	r17, 0xFF	; 255
     720:	ce 01       	movw	r24, r28
     722:	89 5b       	subi	r24, 0xB9	; 185
     724:	9f 4f       	sbci	r25, 0xFF	; 255
     726:	fc 01       	movw	r30, r24
     728:	60 81       	ld	r22, Z
     72a:	71 81       	ldd	r23, Z+1	; 0x01
     72c:	82 81       	ldd	r24, Z+2	; 0x02
     72e:	93 81       	ldd	r25, Z+3	; 0x03
     730:	20 e0       	ldi	r18, 0x00	; 0
     732:	30 e0       	ldi	r19, 0x00	; 0
     734:	4a e7       	ldi	r20, 0x7A	; 122
     736:	55 e4       	ldi	r21, 0x45	; 69
     738:	0e 94 fa 06 	call	0xdf4	; 0xdf4 <__mulsf3>
     73c:	dc 01       	movw	r26, r24
     73e:	cb 01       	movw	r24, r22
     740:	f8 01       	movw	r30, r16
     742:	80 83       	st	Z, r24
     744:	91 83       	std	Z+1, r25	; 0x01
     746:	a2 83       	std	Z+2, r26	; 0x02
     748:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     74a:	ce 01       	movw	r24, r28
     74c:	85 5b       	subi	r24, 0xB5	; 181
     74e:	9f 4f       	sbci	r25, 0xFF	; 255
     750:	11 e0       	ldi	r17, 0x01	; 1
     752:	fc 01       	movw	r30, r24
     754:	60 81       	ld	r22, Z
     756:	71 81       	ldd	r23, Z+1	; 0x01
     758:	82 81       	ldd	r24, Z+2	; 0x02
     75a:	93 81       	ldd	r25, Z+3	; 0x03
     75c:	20 e0       	ldi	r18, 0x00	; 0
     75e:	30 e0       	ldi	r19, 0x00	; 0
     760:	40 e8       	ldi	r20, 0x80	; 128
     762:	5f e3       	ldi	r21, 0x3F	; 63
     764:	0e 94 54 08 	call	0x10a8	; 0x10a8 <__ltsf2>
     768:	88 23       	and	r24, r24
     76a:	0c f0       	brlt	.+2      	; 0x76e <__stack+0x30f>
     76c:	10 e0       	ldi	r17, 0x00	; 0
     76e:	11 23       	and	r17, r17
     770:	49 f0       	breq	.+18     	; 0x784 <__stack+0x325>
		__ticks = 1;
     772:	ce 01       	movw	r24, r28
     774:	81 5b       	subi	r24, 0xB1	; 177
     776:	9f 4f       	sbci	r25, 0xFF	; 255
     778:	21 e0       	ldi	r18, 0x01	; 1
     77a:	30 e0       	ldi	r19, 0x00	; 0
     77c:	fc 01       	movw	r30, r24
     77e:	31 83       	std	Z+1, r19	; 0x01
     780:	20 83       	st	Z, r18
     782:	74 c0       	rjmp	.+232    	; 0x86c <__stack+0x40d>
	else if (__tmp > 65535)
     784:	ce 01       	movw	r24, r28
     786:	85 5b       	subi	r24, 0xB5	; 181
     788:	9f 4f       	sbci	r25, 0xFF	; 255
     78a:	11 e0       	ldi	r17, 0x01	; 1
     78c:	fc 01       	movw	r30, r24
     78e:	60 81       	ld	r22, Z
     790:	71 81       	ldd	r23, Z+1	; 0x01
     792:	82 81       	ldd	r24, Z+2	; 0x02
     794:	93 81       	ldd	r25, Z+3	; 0x03
     796:	20 e0       	ldi	r18, 0x00	; 0
     798:	3f ef       	ldi	r19, 0xFF	; 255
     79a:	4f e7       	ldi	r20, 0x7F	; 127
     79c:	57 e4       	ldi	r21, 0x47	; 71
     79e:	0e 94 f4 07 	call	0xfe8	; 0xfe8 <__gtsf2>
     7a2:	18 16       	cp	r1, r24
     7a4:	0c f0       	brlt	.+2      	; 0x7a8 <__stack+0x349>
     7a6:	10 e0       	ldi	r17, 0x00	; 0
     7a8:	11 23       	and	r17, r17
     7aa:	09 f4       	brne	.+2      	; 0x7ae <__stack+0x34f>
     7ac:	4d c0       	rjmp	.+154    	; 0x848 <__stack+0x3e9>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     7ae:	ce 01       	movw	r24, r28
     7b0:	89 5b       	subi	r24, 0xB9	; 185
     7b2:	9f 4f       	sbci	r25, 0xFF	; 255
     7b4:	fc 01       	movw	r30, r24
     7b6:	60 81       	ld	r22, Z
     7b8:	71 81       	ldd	r23, Z+1	; 0x01
     7ba:	82 81       	ldd	r24, Z+2	; 0x02
     7bc:	93 81       	ldd	r25, Z+3	; 0x03
     7be:	20 e0       	ldi	r18, 0x00	; 0
     7c0:	30 e0       	ldi	r19, 0x00	; 0
     7c2:	40 e2       	ldi	r20, 0x20	; 32
     7c4:	51 e4       	ldi	r21, 0x41	; 65
     7c6:	0e 94 fa 06 	call	0xdf4	; 0xdf4 <__mulsf3>
     7ca:	dc 01       	movw	r26, r24
     7cc:	cb 01       	movw	r24, r22
     7ce:	8e 01       	movw	r16, r28
     7d0:	01 5b       	subi	r16, 0xB1	; 177
     7d2:	1f 4f       	sbci	r17, 0xFF	; 255
     7d4:	bc 01       	movw	r22, r24
     7d6:	cd 01       	movw	r24, r26
     7d8:	0e 94 26 05 	call	0xa4c	; 0xa4c <__fixunssfsi>
     7dc:	dc 01       	movw	r26, r24
     7de:	cb 01       	movw	r24, r22
     7e0:	f8 01       	movw	r30, r16
     7e2:	91 83       	std	Z+1, r25	; 0x01
     7e4:	80 83       	st	Z, r24
     7e6:	27 c0       	rjmp	.+78     	; 0x836 <__stack+0x3d7>
     7e8:	ce 01       	movw	r24, r28
     7ea:	8f 5a       	subi	r24, 0xAF	; 175
     7ec:	9f 4f       	sbci	r25, 0xFF	; 255
     7ee:	20 e9       	ldi	r18, 0x90	; 144
     7f0:	31 e0       	ldi	r19, 0x01	; 1
     7f2:	fc 01       	movw	r30, r24
     7f4:	31 83       	std	Z+1, r19	; 0x01
     7f6:	20 83       	st	Z, r18
     7f8:	ce 01       	movw	r24, r28
     7fa:	8f 5a       	subi	r24, 0xAF	; 175
     7fc:	9f 4f       	sbci	r25, 0xFF	; 255
     7fe:	fc 01       	movw	r30, r24
     800:	80 81       	ld	r24, Z
     802:	91 81       	ldd	r25, Z+1	; 0x01
     804:	8c 01       	movw	r16, r24
     806:	c8 01       	movw	r24, r16
     808:	01 97       	sbiw	r24, 0x01	; 1
     80a:	f1 f7       	brne	.-4      	; 0x808 <__stack+0x3a9>
     80c:	8c 01       	movw	r16, r24
     80e:	ce 01       	movw	r24, r28
     810:	8f 5a       	subi	r24, 0xAF	; 175
     812:	9f 4f       	sbci	r25, 0xFF	; 255
     814:	fc 01       	movw	r30, r24
     816:	11 83       	std	Z+1, r17	; 0x01
     818:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     81a:	ce 01       	movw	r24, r28
     81c:	81 5b       	subi	r24, 0xB1	; 177
     81e:	9f 4f       	sbci	r25, 0xFF	; 255
     820:	9e 01       	movw	r18, r28
     822:	21 5b       	subi	r18, 0xB1	; 177
     824:	3f 4f       	sbci	r19, 0xFF	; 255
     826:	f9 01       	movw	r30, r18
     828:	20 81       	ld	r18, Z
     82a:	31 81       	ldd	r19, Z+1	; 0x01
     82c:	21 50       	subi	r18, 0x01	; 1
     82e:	30 40       	sbci	r19, 0x00	; 0
     830:	fc 01       	movw	r30, r24
     832:	31 83       	std	Z+1, r19	; 0x01
     834:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     836:	ce 01       	movw	r24, r28
     838:	81 5b       	subi	r24, 0xB1	; 177
     83a:	9f 4f       	sbci	r25, 0xFF	; 255
     83c:	fc 01       	movw	r30, r24
     83e:	80 81       	ld	r24, Z
     840:	91 81       	ldd	r25, Z+1	; 0x01
     842:	00 97       	sbiw	r24, 0x00	; 0
     844:	89 f6       	brne	.-94     	; 0x7e8 <__stack+0x389>
     846:	2f c0       	rjmp	.+94     	; 0x8a6 <__stack+0x447>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     848:	8e 01       	movw	r16, r28
     84a:	01 5b       	subi	r16, 0xB1	; 177
     84c:	1f 4f       	sbci	r17, 0xFF	; 255
     84e:	ce 01       	movw	r24, r28
     850:	85 5b       	subi	r24, 0xB5	; 181
     852:	9f 4f       	sbci	r25, 0xFF	; 255
     854:	fc 01       	movw	r30, r24
     856:	60 81       	ld	r22, Z
     858:	71 81       	ldd	r23, Z+1	; 0x01
     85a:	82 81       	ldd	r24, Z+2	; 0x02
     85c:	93 81       	ldd	r25, Z+3	; 0x03
     85e:	0e 94 26 05 	call	0xa4c	; 0xa4c <__fixunssfsi>
     862:	dc 01       	movw	r26, r24
     864:	cb 01       	movw	r24, r22
     866:	f8 01       	movw	r30, r16
     868:	91 83       	std	Z+1, r25	; 0x01
     86a:	80 83       	st	Z, r24
     86c:	ce 01       	movw	r24, r28
     86e:	8d 5a       	subi	r24, 0xAD	; 173
     870:	9f 4f       	sbci	r25, 0xFF	; 255
     872:	9e 01       	movw	r18, r28
     874:	21 5b       	subi	r18, 0xB1	; 177
     876:	3f 4f       	sbci	r19, 0xFF	; 255
     878:	f9 01       	movw	r30, r18
     87a:	20 81       	ld	r18, Z
     87c:	31 81       	ldd	r19, Z+1	; 0x01
     87e:	fc 01       	movw	r30, r24
     880:	31 83       	std	Z+1, r19	; 0x01
     882:	20 83       	st	Z, r18
     884:	ce 01       	movw	r24, r28
     886:	8d 5a       	subi	r24, 0xAD	; 173
     888:	9f 4f       	sbci	r25, 0xFF	; 255
     88a:	fc 01       	movw	r30, r24
     88c:	80 81       	ld	r24, Z
     88e:	91 81       	ldd	r25, Z+1	; 0x01
     890:	8c 01       	movw	r16, r24
     892:	c8 01       	movw	r24, r16
     894:	01 97       	sbiw	r24, 0x01	; 1
     896:	f1 f7       	brne	.-4      	; 0x894 <__stack+0x435>
     898:	8c 01       	movw	r16, r24
     89a:	ce 01       	movw	r24, r28
     89c:	8d 5a       	subi	r24, 0xAD	; 173
     89e:	9f 4f       	sbci	r25, 0xFF	; 255
     8a0:	fc 01       	movw	r30, r24
     8a2:	11 83       	std	Z+1, r17	; 0x01
     8a4:	00 83       	st	Z, r16
     8a6:	9e 01       	movw	r18, r28
     8a8:	2b 5a       	subi	r18, 0xAB	; 171
     8aa:	3f 4f       	sbci	r19, 0xFF	; 255
     8ac:	80 e0       	ldi	r24, 0x00	; 0
     8ae:	90 e4       	ldi	r25, 0x40	; 64
     8b0:	ac e9       	ldi	r26, 0x9C	; 156
     8b2:	b5 e4       	ldi	r27, 0x45	; 69
     8b4:	f9 01       	movw	r30, r18
     8b6:	80 83       	st	Z, r24
     8b8:	91 83       	std	Z+1, r25	; 0x01
     8ba:	a2 83       	std	Z+2, r26	; 0x02
     8bc:	b3 83       	std	Z+3, r27	; 0x03
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     8be:	8e 01       	movw	r16, r28
     8c0:	07 5a       	subi	r16, 0xA7	; 167
     8c2:	1f 4f       	sbci	r17, 0xFF	; 255
     8c4:	ce 01       	movw	r24, r28
     8c6:	8b 5a       	subi	r24, 0xAB	; 171
     8c8:	9f 4f       	sbci	r25, 0xFF	; 255
     8ca:	fc 01       	movw	r30, r24
     8cc:	60 81       	ld	r22, Z
     8ce:	71 81       	ldd	r23, Z+1	; 0x01
     8d0:	82 81       	ldd	r24, Z+2	; 0x02
     8d2:	93 81       	ldd	r25, Z+3	; 0x03
     8d4:	20 e0       	ldi	r18, 0x00	; 0
     8d6:	30 e0       	ldi	r19, 0x00	; 0
     8d8:	4a e7       	ldi	r20, 0x7A	; 122
     8da:	55 e4       	ldi	r21, 0x45	; 69
     8dc:	0e 94 fa 06 	call	0xdf4	; 0xdf4 <__mulsf3>
     8e0:	dc 01       	movw	r26, r24
     8e2:	cb 01       	movw	r24, r22
     8e4:	f8 01       	movw	r30, r16
     8e6:	80 83       	st	Z, r24
     8e8:	91 83       	std	Z+1, r25	; 0x01
     8ea:	a2 83       	std	Z+2, r26	; 0x02
     8ec:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     8ee:	ce 01       	movw	r24, r28
     8f0:	87 5a       	subi	r24, 0xA7	; 167
     8f2:	9f 4f       	sbci	r25, 0xFF	; 255
     8f4:	11 e0       	ldi	r17, 0x01	; 1
     8f6:	fc 01       	movw	r30, r24
     8f8:	60 81       	ld	r22, Z
     8fa:	71 81       	ldd	r23, Z+1	; 0x01
     8fc:	82 81       	ldd	r24, Z+2	; 0x02
     8fe:	93 81       	ldd	r25, Z+3	; 0x03
     900:	20 e0       	ldi	r18, 0x00	; 0
     902:	30 e0       	ldi	r19, 0x00	; 0
     904:	40 e8       	ldi	r20, 0x80	; 128
     906:	5f e3       	ldi	r21, 0x3F	; 63
     908:	0e 94 54 08 	call	0x10a8	; 0x10a8 <__ltsf2>
     90c:	88 23       	and	r24, r24
     90e:	0c f0       	brlt	.+2      	; 0x912 <__stack+0x4b3>
     910:	10 e0       	ldi	r17, 0x00	; 0
     912:	11 23       	and	r17, r17
     914:	49 f0       	breq	.+18     	; 0x928 <__stack+0x4c9>
		__ticks = 1;
     916:	ce 01       	movw	r24, r28
     918:	83 5a       	subi	r24, 0xA3	; 163
     91a:	9f 4f       	sbci	r25, 0xFF	; 255
     91c:	21 e0       	ldi	r18, 0x01	; 1
     91e:	30 e0       	ldi	r19, 0x00	; 0
     920:	fc 01       	movw	r30, r24
     922:	31 83       	std	Z+1, r19	; 0x01
     924:	20 83       	st	Z, r18
     926:	74 c0       	rjmp	.+232    	; 0xa10 <__stack+0x5b1>
	else if (__tmp > 65535)
     928:	ce 01       	movw	r24, r28
     92a:	87 5a       	subi	r24, 0xA7	; 167
     92c:	9f 4f       	sbci	r25, 0xFF	; 255
     92e:	11 e0       	ldi	r17, 0x01	; 1
     930:	fc 01       	movw	r30, r24
     932:	60 81       	ld	r22, Z
     934:	71 81       	ldd	r23, Z+1	; 0x01
     936:	82 81       	ldd	r24, Z+2	; 0x02
     938:	93 81       	ldd	r25, Z+3	; 0x03
     93a:	20 e0       	ldi	r18, 0x00	; 0
     93c:	3f ef       	ldi	r19, 0xFF	; 255
     93e:	4f e7       	ldi	r20, 0x7F	; 127
     940:	57 e4       	ldi	r21, 0x47	; 71
     942:	0e 94 f4 07 	call	0xfe8	; 0xfe8 <__gtsf2>
     946:	18 16       	cp	r1, r24
     948:	0c f0       	brlt	.+2      	; 0x94c <__stack+0x4ed>
     94a:	10 e0       	ldi	r17, 0x00	; 0
     94c:	11 23       	and	r17, r17
     94e:	09 f4       	brne	.+2      	; 0x952 <__stack+0x4f3>
     950:	4d c0       	rjmp	.+154    	; 0x9ec <__stack+0x58d>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     952:	ce 01       	movw	r24, r28
     954:	8b 5a       	subi	r24, 0xAB	; 171
     956:	9f 4f       	sbci	r25, 0xFF	; 255
     958:	fc 01       	movw	r30, r24
     95a:	60 81       	ld	r22, Z
     95c:	71 81       	ldd	r23, Z+1	; 0x01
     95e:	82 81       	ldd	r24, Z+2	; 0x02
     960:	93 81       	ldd	r25, Z+3	; 0x03
     962:	20 e0       	ldi	r18, 0x00	; 0
     964:	30 e0       	ldi	r19, 0x00	; 0
     966:	40 e2       	ldi	r20, 0x20	; 32
     968:	51 e4       	ldi	r21, 0x41	; 65
     96a:	0e 94 fa 06 	call	0xdf4	; 0xdf4 <__mulsf3>
     96e:	dc 01       	movw	r26, r24
     970:	cb 01       	movw	r24, r22
     972:	8e 01       	movw	r16, r28
     974:	03 5a       	subi	r16, 0xA3	; 163
     976:	1f 4f       	sbci	r17, 0xFF	; 255
     978:	bc 01       	movw	r22, r24
     97a:	cd 01       	movw	r24, r26
     97c:	0e 94 26 05 	call	0xa4c	; 0xa4c <__fixunssfsi>
     980:	dc 01       	movw	r26, r24
     982:	cb 01       	movw	r24, r22
     984:	f8 01       	movw	r30, r16
     986:	91 83       	std	Z+1, r25	; 0x01
     988:	80 83       	st	Z, r24
     98a:	27 c0       	rjmp	.+78     	; 0x9da <__stack+0x57b>
     98c:	ce 01       	movw	r24, r28
     98e:	81 5a       	subi	r24, 0xA1	; 161
     990:	9f 4f       	sbci	r25, 0xFF	; 255
     992:	20 e9       	ldi	r18, 0x90	; 144
     994:	31 e0       	ldi	r19, 0x01	; 1
     996:	fc 01       	movw	r30, r24
     998:	31 83       	std	Z+1, r19	; 0x01
     99a:	20 83       	st	Z, r18
     99c:	ce 01       	movw	r24, r28
     99e:	81 5a       	subi	r24, 0xA1	; 161
     9a0:	9f 4f       	sbci	r25, 0xFF	; 255
     9a2:	fc 01       	movw	r30, r24
     9a4:	80 81       	ld	r24, Z
     9a6:	91 81       	ldd	r25, Z+1	; 0x01
     9a8:	8c 01       	movw	r16, r24
     9aa:	c8 01       	movw	r24, r16
     9ac:	01 97       	sbiw	r24, 0x01	; 1
     9ae:	f1 f7       	brne	.-4      	; 0x9ac <__stack+0x54d>
     9b0:	8c 01       	movw	r16, r24
     9b2:	ce 01       	movw	r24, r28
     9b4:	81 5a       	subi	r24, 0xA1	; 161
     9b6:	9f 4f       	sbci	r25, 0xFF	; 255
     9b8:	fc 01       	movw	r30, r24
     9ba:	11 83       	std	Z+1, r17	; 0x01
     9bc:	00 83       	st	Z, r16
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     9be:	ce 01       	movw	r24, r28
     9c0:	83 5a       	subi	r24, 0xA3	; 163
     9c2:	9f 4f       	sbci	r25, 0xFF	; 255
     9c4:	9e 01       	movw	r18, r28
     9c6:	23 5a       	subi	r18, 0xA3	; 163
     9c8:	3f 4f       	sbci	r19, 0xFF	; 255
     9ca:	f9 01       	movw	r30, r18
     9cc:	20 81       	ld	r18, Z
     9ce:	31 81       	ldd	r19, Z+1	; 0x01
     9d0:	21 50       	subi	r18, 0x01	; 1
     9d2:	30 40       	sbci	r19, 0x00	; 0
     9d4:	fc 01       	movw	r30, r24
     9d6:	31 83       	std	Z+1, r19	; 0x01
     9d8:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     9da:	ce 01       	movw	r24, r28
     9dc:	83 5a       	subi	r24, 0xA3	; 163
     9de:	9f 4f       	sbci	r25, 0xFF	; 255
     9e0:	fc 01       	movw	r30, r24
     9e2:	80 81       	ld	r24, Z
     9e4:	91 81       	ldd	r25, Z+1	; 0x01
     9e6:	00 97       	sbiw	r24, 0x00	; 0
     9e8:	89 f6       	brne	.-94     	; 0x98c <__stack+0x52d>
		_delay_ms(5000);
		_delay_ms(5000);
	}
     9ea:	ad cb       	rjmp	.-2214   	; 0x146 <main+0x1e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     9ec:	8e 01       	movw	r16, r28
     9ee:	03 5a       	subi	r16, 0xA3	; 163
     9f0:	1f 4f       	sbci	r17, 0xFF	; 255
     9f2:	ce 01       	movw	r24, r28
     9f4:	87 5a       	subi	r24, 0xA7	; 167
     9f6:	9f 4f       	sbci	r25, 0xFF	; 255
     9f8:	fc 01       	movw	r30, r24
     9fa:	60 81       	ld	r22, Z
     9fc:	71 81       	ldd	r23, Z+1	; 0x01
     9fe:	82 81       	ldd	r24, Z+2	; 0x02
     a00:	93 81       	ldd	r25, Z+3	; 0x03
     a02:	0e 94 26 05 	call	0xa4c	; 0xa4c <__fixunssfsi>
     a06:	dc 01       	movw	r26, r24
     a08:	cb 01       	movw	r24, r22
     a0a:	f8 01       	movw	r30, r16
     a0c:	91 83       	std	Z+1, r25	; 0x01
     a0e:	80 83       	st	Z, r24
     a10:	ce 01       	movw	r24, r28
     a12:	8f 59       	subi	r24, 0x9F	; 159
     a14:	9f 4f       	sbci	r25, 0xFF	; 255
     a16:	9e 01       	movw	r18, r28
     a18:	23 5a       	subi	r18, 0xA3	; 163
     a1a:	3f 4f       	sbci	r19, 0xFF	; 255
     a1c:	f9 01       	movw	r30, r18
     a1e:	20 81       	ld	r18, Z
     a20:	31 81       	ldd	r19, Z+1	; 0x01
     a22:	fc 01       	movw	r30, r24
     a24:	31 83       	std	Z+1, r19	; 0x01
     a26:	20 83       	st	Z, r18
     a28:	ce 01       	movw	r24, r28
     a2a:	8f 59       	subi	r24, 0x9F	; 159
     a2c:	9f 4f       	sbci	r25, 0xFF	; 255
     a2e:	fc 01       	movw	r30, r24
     a30:	80 81       	ld	r24, Z
     a32:	91 81       	ldd	r25, Z+1	; 0x01
     a34:	8c 01       	movw	r16, r24
     a36:	c8 01       	movw	r24, r16
     a38:	01 97       	sbiw	r24, 0x01	; 1
     a3a:	f1 f7       	brne	.-4      	; 0xa38 <__stack+0x5d9>
     a3c:	8c 01       	movw	r16, r24
     a3e:	ce 01       	movw	r24, r28
     a40:	8f 59       	subi	r24, 0x9F	; 159
     a42:	9f 4f       	sbci	r25, 0xFF	; 255
     a44:	fc 01       	movw	r30, r24
     a46:	11 83       	std	Z+1, r17	; 0x01
     a48:	00 83       	st	Z, r16
     a4a:	7d cb       	rjmp	.-2310   	; 0x146 <main+0x1e>

00000a4c <__fixunssfsi>:
     a4c:	ef 92       	push	r14
     a4e:	ff 92       	push	r15
     a50:	0f 93       	push	r16
     a52:	1f 93       	push	r17
     a54:	7b 01       	movw	r14, r22
     a56:	8c 01       	movw	r16, r24
     a58:	20 e0       	ldi	r18, 0x00	; 0
     a5a:	30 e0       	ldi	r19, 0x00	; 0
     a5c:	40 e0       	ldi	r20, 0x00	; 0
     a5e:	5f e4       	ldi	r21, 0x4F	; 79
     a60:	0e 94 24 08 	call	0x1048	; 0x1048 <__gesf2>
     a64:	87 fd       	sbrc	r24, 7
     a66:	11 c0       	rjmp	.+34     	; 0xa8a <__fixunssfsi+0x3e>
     a68:	c8 01       	movw	r24, r16
     a6a:	b7 01       	movw	r22, r14
     a6c:	20 e0       	ldi	r18, 0x00	; 0
     a6e:	30 e0       	ldi	r19, 0x00	; 0
     a70:	40 e0       	ldi	r20, 0x00	; 0
     a72:	5f e4       	ldi	r21, 0x4F	; 79
     a74:	0e 94 c9 06 	call	0xd92	; 0xd92 <__subsf3>
     a78:	0e 94 84 08 	call	0x1108	; 0x1108 <__fixsfsi>
     a7c:	9b 01       	movw	r18, r22
     a7e:	ac 01       	movw	r20, r24
     a80:	20 50       	subi	r18, 0x00	; 0
     a82:	30 40       	sbci	r19, 0x00	; 0
     a84:	40 40       	sbci	r20, 0x00	; 0
     a86:	50 48       	sbci	r21, 0x80	; 128
     a88:	06 c0       	rjmp	.+12     	; 0xa96 <__fixunssfsi+0x4a>
     a8a:	c8 01       	movw	r24, r16
     a8c:	b7 01       	movw	r22, r14
     a8e:	0e 94 84 08 	call	0x1108	; 0x1108 <__fixsfsi>
     a92:	9b 01       	movw	r18, r22
     a94:	ac 01       	movw	r20, r24
     a96:	b9 01       	movw	r22, r18
     a98:	ca 01       	movw	r24, r20
     a9a:	1f 91       	pop	r17
     a9c:	0f 91       	pop	r16
     a9e:	ff 90       	pop	r15
     aa0:	ef 90       	pop	r14
     aa2:	08 95       	ret

00000aa4 <_fpadd_parts>:
     aa4:	a0 e0       	ldi	r26, 0x00	; 0
     aa6:	b0 e0       	ldi	r27, 0x00	; 0
     aa8:	e8 e5       	ldi	r30, 0x58	; 88
     aaa:	f5 e0       	ldi	r31, 0x05	; 5
     aac:	0c 94 6a 0a 	jmp	0x14d4	; 0x14d4 <__prologue_saves__+0x8>
     ab0:	fc 01       	movw	r30, r24
     ab2:	ea 01       	movw	r28, r20
     ab4:	80 81       	ld	r24, Z
     ab6:	82 30       	cpi	r24, 0x02	; 2
     ab8:	08 f4       	brcc	.+2      	; 0xabc <_fpadd_parts+0x18>
     aba:	38 c1       	rjmp	.+624    	; 0xd2c <_fpadd_parts+0x288>
     abc:	db 01       	movw	r26, r22
     abe:	9c 91       	ld	r25, X
     ac0:	92 30       	cpi	r25, 0x02	; 2
     ac2:	08 f4       	brcc	.+2      	; 0xac6 <_fpadd_parts+0x22>
     ac4:	30 c1       	rjmp	.+608    	; 0xd26 <_fpadd_parts+0x282>
     ac6:	84 30       	cpi	r24, 0x04	; 4
     ac8:	59 f4       	brne	.+22     	; 0xae0 <_fpadd_parts+0x3c>
     aca:	94 30       	cpi	r25, 0x04	; 4
     acc:	09 f0       	breq	.+2      	; 0xad0 <_fpadd_parts+0x2c>
     ace:	2e c1       	rjmp	.+604    	; 0xd2c <_fpadd_parts+0x288>
     ad0:	91 81       	ldd	r25, Z+1	; 0x01
     ad2:	11 96       	adiw	r26, 0x01	; 1
     ad4:	8c 91       	ld	r24, X
     ad6:	11 97       	sbiw	r26, 0x01	; 1
     ad8:	98 17       	cp	r25, r24
     ada:	09 f0       	breq	.+2      	; 0xade <_fpadd_parts+0x3a>
     adc:	21 c1       	rjmp	.+578    	; 0xd20 <_fpadd_parts+0x27c>
     ade:	26 c1       	rjmp	.+588    	; 0xd2c <_fpadd_parts+0x288>
     ae0:	94 30       	cpi	r25, 0x04	; 4
     ae2:	09 f4       	brne	.+2      	; 0xae6 <_fpadd_parts+0x42>
     ae4:	20 c1       	rjmp	.+576    	; 0xd26 <_fpadd_parts+0x282>
     ae6:	92 30       	cpi	r25, 0x02	; 2
     ae8:	b1 f4       	brne	.+44     	; 0xb16 <_fpadd_parts+0x72>
     aea:	82 30       	cpi	r24, 0x02	; 2
     aec:	09 f0       	breq	.+2      	; 0xaf0 <_fpadd_parts+0x4c>
     aee:	1e c1       	rjmp	.+572    	; 0xd2c <_fpadd_parts+0x288>
     af0:	ca 01       	movw	r24, r20
     af2:	af 01       	movw	r20, r30
     af4:	28 e0       	ldi	r18, 0x08	; 8
     af6:	da 01       	movw	r26, r20
     af8:	0d 90       	ld	r0, X+
     afa:	ad 01       	movw	r20, r26
     afc:	dc 01       	movw	r26, r24
     afe:	0d 92       	st	X+, r0
     b00:	cd 01       	movw	r24, r26
     b02:	21 50       	subi	r18, 0x01	; 1
     b04:	c1 f7       	brne	.-16     	; 0xaf6 <_fpadd_parts+0x52>
     b06:	db 01       	movw	r26, r22
     b08:	11 96       	adiw	r26, 0x01	; 1
     b0a:	8c 91       	ld	r24, X
     b0c:	11 97       	sbiw	r26, 0x01	; 1
     b0e:	91 81       	ldd	r25, Z+1	; 0x01
     b10:	89 23       	and	r24, r25
     b12:	89 83       	std	Y+1, r24	; 0x01
     b14:	0a c1       	rjmp	.+532    	; 0xd2a <_fpadd_parts+0x286>
     b16:	82 30       	cpi	r24, 0x02	; 2
     b18:	09 f4       	brne	.+2      	; 0xb1c <_fpadd_parts+0x78>
     b1a:	05 c1       	rjmp	.+522    	; 0xd26 <_fpadd_parts+0x282>
     b1c:	c2 80       	ldd	r12, Z+2	; 0x02
     b1e:	d3 80       	ldd	r13, Z+3	; 0x03
     b20:	db 01       	movw	r26, r22
     b22:	12 96       	adiw	r26, 0x02	; 2
     b24:	6d 90       	ld	r6, X+
     b26:	7c 90       	ld	r7, X
     b28:	13 97       	sbiw	r26, 0x03	; 3
     b2a:	24 81       	ldd	r18, Z+4	; 0x04
     b2c:	35 81       	ldd	r19, Z+5	; 0x05
     b2e:	46 81       	ldd	r20, Z+6	; 0x06
     b30:	57 81       	ldd	r21, Z+7	; 0x07
     b32:	14 96       	adiw	r26, 0x04	; 4
     b34:	ed 90       	ld	r14, X+
     b36:	fd 90       	ld	r15, X+
     b38:	0d 91       	ld	r16, X+
     b3a:	1c 91       	ld	r17, X
     b3c:	17 97       	sbiw	r26, 0x07	; 7
     b3e:	c6 01       	movw	r24, r12
     b40:	86 19       	sub	r24, r6
     b42:	97 09       	sbc	r25, r7
     b44:	5c 01       	movw	r10, r24
     b46:	97 ff       	sbrs	r25, 7
     b48:	04 c0       	rjmp	.+8      	; 0xb52 <_fpadd_parts+0xae>
     b4a:	aa 24       	eor	r10, r10
     b4c:	bb 24       	eor	r11, r11
     b4e:	a8 1a       	sub	r10, r24
     b50:	b9 0a       	sbc	r11, r25
     b52:	b0 e2       	ldi	r27, 0x20	; 32
     b54:	ab 16       	cp	r10, r27
     b56:	b1 04       	cpc	r11, r1
     b58:	0c f0       	brlt	.+2      	; 0xb5c <_fpadd_parts+0xb8>
     b5a:	61 c0       	rjmp	.+194    	; 0xc1e <_fpadd_parts+0x17a>
     b5c:	18 16       	cp	r1, r24
     b5e:	19 06       	cpc	r1, r25
     b60:	6c f5       	brge	.+90     	; 0xbbc <_fpadd_parts+0x118>
     b62:	37 01       	movw	r6, r14
     b64:	48 01       	movw	r8, r16
     b66:	0a 2c       	mov	r0, r10
     b68:	04 c0       	rjmp	.+8      	; 0xb72 <_fpadd_parts+0xce>
     b6a:	96 94       	lsr	r9
     b6c:	87 94       	ror	r8
     b6e:	77 94       	ror	r7
     b70:	67 94       	ror	r6
     b72:	0a 94       	dec	r0
     b74:	d2 f7       	brpl	.-12     	; 0xb6a <_fpadd_parts+0xc6>
     b76:	81 e0       	ldi	r24, 0x01	; 1
     b78:	90 e0       	ldi	r25, 0x00	; 0
     b7a:	a0 e0       	ldi	r26, 0x00	; 0
     b7c:	b0 e0       	ldi	r27, 0x00	; 0
     b7e:	0a 2c       	mov	r0, r10
     b80:	04 c0       	rjmp	.+8      	; 0xb8a <_fpadd_parts+0xe6>
     b82:	88 0f       	add	r24, r24
     b84:	99 1f       	adc	r25, r25
     b86:	aa 1f       	adc	r26, r26
     b88:	bb 1f       	adc	r27, r27
     b8a:	0a 94       	dec	r0
     b8c:	d2 f7       	brpl	.-12     	; 0xb82 <_fpadd_parts+0xde>
     b8e:	01 97       	sbiw	r24, 0x01	; 1
     b90:	a1 09       	sbc	r26, r1
     b92:	b1 09       	sbc	r27, r1
     b94:	8e 21       	and	r24, r14
     b96:	9f 21       	and	r25, r15
     b98:	a0 23       	and	r26, r16
     b9a:	b1 23       	and	r27, r17
     b9c:	ee 24       	eor	r14, r14
     b9e:	ff 24       	eor	r15, r15
     ba0:	87 01       	movw	r16, r14
     ba2:	e3 94       	inc	r14
     ba4:	00 97       	sbiw	r24, 0x00	; 0
     ba6:	a1 05       	cpc	r26, r1
     ba8:	b1 05       	cpc	r27, r1
     baa:	19 f4       	brne	.+6      	; 0xbb2 <_fpadd_parts+0x10e>
     bac:	ee 24       	eor	r14, r14
     bae:	ff 24       	eor	r15, r15
     bb0:	87 01       	movw	r16, r14
     bb2:	e6 28       	or	r14, r6
     bb4:	f7 28       	or	r15, r7
     bb6:	08 29       	or	r16, r8
     bb8:	19 29       	or	r17, r9
     bba:	3c c0       	rjmp	.+120    	; 0xc34 <_fpadd_parts+0x190>
     bbc:	00 97       	sbiw	r24, 0x00	; 0
     bbe:	d1 f1       	breq	.+116    	; 0xc34 <_fpadd_parts+0x190>
     bc0:	ca 0c       	add	r12, r10
     bc2:	db 1c       	adc	r13, r11
     bc4:	39 01       	movw	r6, r18
     bc6:	4a 01       	movw	r8, r20
     bc8:	0a 2c       	mov	r0, r10
     bca:	04 c0       	rjmp	.+8      	; 0xbd4 <_fpadd_parts+0x130>
     bcc:	96 94       	lsr	r9
     bce:	87 94       	ror	r8
     bd0:	77 94       	ror	r7
     bd2:	67 94       	ror	r6
     bd4:	0a 94       	dec	r0
     bd6:	d2 f7       	brpl	.-12     	; 0xbcc <_fpadd_parts+0x128>
     bd8:	81 e0       	ldi	r24, 0x01	; 1
     bda:	90 e0       	ldi	r25, 0x00	; 0
     bdc:	a0 e0       	ldi	r26, 0x00	; 0
     bde:	b0 e0       	ldi	r27, 0x00	; 0
     be0:	0a 2c       	mov	r0, r10
     be2:	04 c0       	rjmp	.+8      	; 0xbec <_fpadd_parts+0x148>
     be4:	88 0f       	add	r24, r24
     be6:	99 1f       	adc	r25, r25
     be8:	aa 1f       	adc	r26, r26
     bea:	bb 1f       	adc	r27, r27
     bec:	0a 94       	dec	r0
     bee:	d2 f7       	brpl	.-12     	; 0xbe4 <_fpadd_parts+0x140>
     bf0:	01 97       	sbiw	r24, 0x01	; 1
     bf2:	a1 09       	sbc	r26, r1
     bf4:	b1 09       	sbc	r27, r1
     bf6:	82 23       	and	r24, r18
     bf8:	93 23       	and	r25, r19
     bfa:	a4 23       	and	r26, r20
     bfc:	b5 23       	and	r27, r21
     bfe:	21 e0       	ldi	r18, 0x01	; 1
     c00:	30 e0       	ldi	r19, 0x00	; 0
     c02:	40 e0       	ldi	r20, 0x00	; 0
     c04:	50 e0       	ldi	r21, 0x00	; 0
     c06:	00 97       	sbiw	r24, 0x00	; 0
     c08:	a1 05       	cpc	r26, r1
     c0a:	b1 05       	cpc	r27, r1
     c0c:	19 f4       	brne	.+6      	; 0xc14 <_fpadd_parts+0x170>
     c0e:	20 e0       	ldi	r18, 0x00	; 0
     c10:	30 e0       	ldi	r19, 0x00	; 0
     c12:	a9 01       	movw	r20, r18
     c14:	26 29       	or	r18, r6
     c16:	37 29       	or	r19, r7
     c18:	48 29       	or	r20, r8
     c1a:	59 29       	or	r21, r9
     c1c:	0b c0       	rjmp	.+22     	; 0xc34 <_fpadd_parts+0x190>
     c1e:	6c 14       	cp	r6, r12
     c20:	7d 04       	cpc	r7, r13
     c22:	24 f4       	brge	.+8      	; 0xc2c <_fpadd_parts+0x188>
     c24:	ee 24       	eor	r14, r14
     c26:	ff 24       	eor	r15, r15
     c28:	87 01       	movw	r16, r14
     c2a:	04 c0       	rjmp	.+8      	; 0xc34 <_fpadd_parts+0x190>
     c2c:	63 01       	movw	r12, r6
     c2e:	20 e0       	ldi	r18, 0x00	; 0
     c30:	30 e0       	ldi	r19, 0x00	; 0
     c32:	a9 01       	movw	r20, r18
     c34:	81 81       	ldd	r24, Z+1	; 0x01
     c36:	fb 01       	movw	r30, r22
     c38:	91 81       	ldd	r25, Z+1	; 0x01
     c3a:	89 17       	cp	r24, r25
     c3c:	09 f4       	brne	.+2      	; 0xc40 <_fpadd_parts+0x19c>
     c3e:	45 c0       	rjmp	.+138    	; 0xcca <_fpadd_parts+0x226>
     c40:	88 23       	and	r24, r24
     c42:	49 f0       	breq	.+18     	; 0xc56 <_fpadd_parts+0x1b2>
     c44:	d8 01       	movw	r26, r16
     c46:	c7 01       	movw	r24, r14
     c48:	82 1b       	sub	r24, r18
     c4a:	93 0b       	sbc	r25, r19
     c4c:	a4 0b       	sbc	r26, r20
     c4e:	b5 0b       	sbc	r27, r21
     c50:	9c 01       	movw	r18, r24
     c52:	ad 01       	movw	r20, r26
     c54:	04 c0       	rjmp	.+8      	; 0xc5e <_fpadd_parts+0x1ba>
     c56:	2e 19       	sub	r18, r14
     c58:	3f 09       	sbc	r19, r15
     c5a:	40 0b       	sbc	r20, r16
     c5c:	51 0b       	sbc	r21, r17
     c5e:	57 fd       	sbrc	r21, 7
     c60:	04 c0       	rjmp	.+8      	; 0xc6a <_fpadd_parts+0x1c6>
     c62:	19 82       	std	Y+1, r1	; 0x01
     c64:	db 82       	std	Y+3, r13	; 0x03
     c66:	ca 82       	std	Y+2, r12	; 0x02
     c68:	0b c0       	rjmp	.+22     	; 0xc80 <_fpadd_parts+0x1dc>
     c6a:	81 e0       	ldi	r24, 0x01	; 1
     c6c:	89 83       	std	Y+1, r24	; 0x01
     c6e:	db 82       	std	Y+3, r13	; 0x03
     c70:	ca 82       	std	Y+2, r12	; 0x02
     c72:	50 95       	com	r21
     c74:	40 95       	com	r20
     c76:	30 95       	com	r19
     c78:	21 95       	neg	r18
     c7a:	3f 4f       	sbci	r19, 0xFF	; 255
     c7c:	4f 4f       	sbci	r20, 0xFF	; 255
     c7e:	5f 4f       	sbci	r21, 0xFF	; 255
     c80:	2c 83       	std	Y+4, r18	; 0x04
     c82:	3d 83       	std	Y+5, r19	; 0x05
     c84:	4e 83       	std	Y+6, r20	; 0x06
     c86:	5f 83       	std	Y+7, r21	; 0x07
     c88:	0d c0       	rjmp	.+26     	; 0xca4 <_fpadd_parts+0x200>
     c8a:	88 0f       	add	r24, r24
     c8c:	99 1f       	adc	r25, r25
     c8e:	aa 1f       	adc	r26, r26
     c90:	bb 1f       	adc	r27, r27
     c92:	8c 83       	std	Y+4, r24	; 0x04
     c94:	9d 83       	std	Y+5, r25	; 0x05
     c96:	ae 83       	std	Y+6, r26	; 0x06
     c98:	bf 83       	std	Y+7, r27	; 0x07
     c9a:	8a 81       	ldd	r24, Y+2	; 0x02
     c9c:	9b 81       	ldd	r25, Y+3	; 0x03
     c9e:	01 97       	sbiw	r24, 0x01	; 1
     ca0:	9b 83       	std	Y+3, r25	; 0x03
     ca2:	8a 83       	std	Y+2, r24	; 0x02
     ca4:	8c 81       	ldd	r24, Y+4	; 0x04
     ca6:	9d 81       	ldd	r25, Y+5	; 0x05
     ca8:	ae 81       	ldd	r26, Y+6	; 0x06
     caa:	bf 81       	ldd	r27, Y+7	; 0x07
     cac:	9c 01       	movw	r18, r24
     cae:	ad 01       	movw	r20, r26
     cb0:	21 50       	subi	r18, 0x01	; 1
     cb2:	30 40       	sbci	r19, 0x00	; 0
     cb4:	40 40       	sbci	r20, 0x00	; 0
     cb6:	50 40       	sbci	r21, 0x00	; 0
     cb8:	2f 3f       	cpi	r18, 0xFF	; 255
     cba:	ef ef       	ldi	r30, 0xFF	; 255
     cbc:	3e 07       	cpc	r19, r30
     cbe:	ef ef       	ldi	r30, 0xFF	; 255
     cc0:	4e 07       	cpc	r20, r30
     cc2:	ef e3       	ldi	r30, 0x3F	; 63
     cc4:	5e 07       	cpc	r21, r30
     cc6:	08 f3       	brcs	.-62     	; 0xc8a <_fpadd_parts+0x1e6>
     cc8:	0b c0       	rjmp	.+22     	; 0xce0 <_fpadd_parts+0x23c>
     cca:	89 83       	std	Y+1, r24	; 0x01
     ccc:	db 82       	std	Y+3, r13	; 0x03
     cce:	ca 82       	std	Y+2, r12	; 0x02
     cd0:	2e 0d       	add	r18, r14
     cd2:	3f 1d       	adc	r19, r15
     cd4:	40 1f       	adc	r20, r16
     cd6:	51 1f       	adc	r21, r17
     cd8:	2c 83       	std	Y+4, r18	; 0x04
     cda:	3d 83       	std	Y+5, r19	; 0x05
     cdc:	4e 83       	std	Y+6, r20	; 0x06
     cde:	5f 83       	std	Y+7, r21	; 0x07
     ce0:	83 e0       	ldi	r24, 0x03	; 3
     ce2:	88 83       	st	Y, r24
     ce4:	2c 81       	ldd	r18, Y+4	; 0x04
     ce6:	3d 81       	ldd	r19, Y+5	; 0x05
     ce8:	4e 81       	ldd	r20, Y+6	; 0x06
     cea:	5f 81       	ldd	r21, Y+7	; 0x07
     cec:	57 ff       	sbrs	r21, 7
     cee:	1d c0       	rjmp	.+58     	; 0xd2a <_fpadd_parts+0x286>
     cf0:	da 01       	movw	r26, r20
     cf2:	c9 01       	movw	r24, r18
     cf4:	81 70       	andi	r24, 0x01	; 1
     cf6:	90 70       	andi	r25, 0x00	; 0
     cf8:	a0 70       	andi	r26, 0x00	; 0
     cfa:	b0 70       	andi	r27, 0x00	; 0
     cfc:	56 95       	lsr	r21
     cfe:	47 95       	ror	r20
     d00:	37 95       	ror	r19
     d02:	27 95       	ror	r18
     d04:	82 2b       	or	r24, r18
     d06:	93 2b       	or	r25, r19
     d08:	a4 2b       	or	r26, r20
     d0a:	b5 2b       	or	r27, r21
     d0c:	8c 83       	std	Y+4, r24	; 0x04
     d0e:	9d 83       	std	Y+5, r25	; 0x05
     d10:	ae 83       	std	Y+6, r26	; 0x06
     d12:	bf 83       	std	Y+7, r27	; 0x07
     d14:	8a 81       	ldd	r24, Y+2	; 0x02
     d16:	9b 81       	ldd	r25, Y+3	; 0x03
     d18:	01 96       	adiw	r24, 0x01	; 1
     d1a:	9b 83       	std	Y+3, r25	; 0x03
     d1c:	8a 83       	std	Y+2, r24	; 0x02
     d1e:	05 c0       	rjmp	.+10     	; 0xd2a <_fpadd_parts+0x286>
     d20:	e7 e0       	ldi	r30, 0x07	; 7
     d22:	f1 e0       	ldi	r31, 0x01	; 1
     d24:	03 c0       	rjmp	.+6      	; 0xd2c <_fpadd_parts+0x288>
     d26:	fb 01       	movw	r30, r22
     d28:	01 c0       	rjmp	.+2      	; 0xd2c <_fpadd_parts+0x288>
     d2a:	fe 01       	movw	r30, r28
     d2c:	cf 01       	movw	r24, r30
     d2e:	cd b7       	in	r28, 0x3d	; 61
     d30:	de b7       	in	r29, 0x3e	; 62
     d32:	ee e0       	ldi	r30, 0x0E	; 14
     d34:	0c 94 86 0a 	jmp	0x150c	; 0x150c <__epilogue_restores__+0x8>

00000d38 <__addsf3>:
     d38:	a0 e2       	ldi	r26, 0x20	; 32
     d3a:	b0 e0       	ldi	r27, 0x00	; 0
     d3c:	e2 ea       	ldi	r30, 0xA2	; 162
     d3e:	f6 e0       	ldi	r31, 0x06	; 6
     d40:	0c 94 72 0a 	jmp	0x14e4	; 0x14e4 <__prologue_saves__+0x18>
     d44:	69 83       	std	Y+1, r22	; 0x01
     d46:	7a 83       	std	Y+2, r23	; 0x02
     d48:	8b 83       	std	Y+3, r24	; 0x03
     d4a:	9c 83       	std	Y+4, r25	; 0x04
     d4c:	2d 83       	std	Y+5, r18	; 0x05
     d4e:	3e 83       	std	Y+6, r19	; 0x06
     d50:	4f 83       	std	Y+7, r20	; 0x07
     d52:	58 87       	std	Y+8, r21	; 0x08
     d54:	89 e0       	ldi	r24, 0x09	; 9
     d56:	e8 2e       	mov	r14, r24
     d58:	f1 2c       	mov	r15, r1
     d5a:	ec 0e       	add	r14, r28
     d5c:	fd 1e       	adc	r15, r29
     d5e:	ce 01       	movw	r24, r28
     d60:	01 96       	adiw	r24, 0x01	; 1
     d62:	b7 01       	movw	r22, r14
     d64:	0e 94 a4 09 	call	0x1348	; 0x1348 <__unpack_f>
     d68:	8e 01       	movw	r16, r28
     d6a:	0f 5e       	subi	r16, 0xEF	; 239
     d6c:	1f 4f       	sbci	r17, 0xFF	; 255
     d6e:	ce 01       	movw	r24, r28
     d70:	05 96       	adiw	r24, 0x05	; 5
     d72:	b8 01       	movw	r22, r16
     d74:	0e 94 a4 09 	call	0x1348	; 0x1348 <__unpack_f>
     d78:	c7 01       	movw	r24, r14
     d7a:	b8 01       	movw	r22, r16
     d7c:	ae 01       	movw	r20, r28
     d7e:	47 5e       	subi	r20, 0xE7	; 231
     d80:	5f 4f       	sbci	r21, 0xFF	; 255
     d82:	0e 94 52 05 	call	0xaa4	; 0xaa4 <_fpadd_parts>
     d86:	0e 94 d6 08 	call	0x11ac	; 0x11ac <__pack_f>
     d8a:	a0 96       	adiw	r28, 0x20	; 32
     d8c:	e6 e0       	ldi	r30, 0x06	; 6
     d8e:	0c 94 8e 0a 	jmp	0x151c	; 0x151c <__epilogue_restores__+0x18>

00000d92 <__subsf3>:
     d92:	a0 e2       	ldi	r26, 0x20	; 32
     d94:	b0 e0       	ldi	r27, 0x00	; 0
     d96:	ef ec       	ldi	r30, 0xCF	; 207
     d98:	f6 e0       	ldi	r31, 0x06	; 6
     d9a:	0c 94 72 0a 	jmp	0x14e4	; 0x14e4 <__prologue_saves__+0x18>
     d9e:	69 83       	std	Y+1, r22	; 0x01
     da0:	7a 83       	std	Y+2, r23	; 0x02
     da2:	8b 83       	std	Y+3, r24	; 0x03
     da4:	9c 83       	std	Y+4, r25	; 0x04
     da6:	2d 83       	std	Y+5, r18	; 0x05
     da8:	3e 83       	std	Y+6, r19	; 0x06
     daa:	4f 83       	std	Y+7, r20	; 0x07
     dac:	58 87       	std	Y+8, r21	; 0x08
     dae:	8e 01       	movw	r16, r28
     db0:	07 5f       	subi	r16, 0xF7	; 247
     db2:	1f 4f       	sbci	r17, 0xFF	; 255
     db4:	ce 01       	movw	r24, r28
     db6:	01 96       	adiw	r24, 0x01	; 1
     db8:	b8 01       	movw	r22, r16
     dba:	0e 94 a4 09 	call	0x1348	; 0x1348 <__unpack_f>
     dbe:	91 e1       	ldi	r25, 0x11	; 17
     dc0:	e9 2e       	mov	r14, r25
     dc2:	f1 2c       	mov	r15, r1
     dc4:	ec 0e       	add	r14, r28
     dc6:	fd 1e       	adc	r15, r29
     dc8:	ce 01       	movw	r24, r28
     dca:	05 96       	adiw	r24, 0x05	; 5
     dcc:	b7 01       	movw	r22, r14
     dce:	0e 94 a4 09 	call	0x1348	; 0x1348 <__unpack_f>
     dd2:	8a 89       	ldd	r24, Y+18	; 0x12
     dd4:	91 e0       	ldi	r25, 0x01	; 1
     dd6:	89 27       	eor	r24, r25
     dd8:	8a 8b       	std	Y+18, r24	; 0x12
     dda:	c8 01       	movw	r24, r16
     ddc:	b7 01       	movw	r22, r14
     dde:	ae 01       	movw	r20, r28
     de0:	47 5e       	subi	r20, 0xE7	; 231
     de2:	5f 4f       	sbci	r21, 0xFF	; 255
     de4:	0e 94 52 05 	call	0xaa4	; 0xaa4 <_fpadd_parts>
     de8:	0e 94 d6 08 	call	0x11ac	; 0x11ac <__pack_f>
     dec:	a0 96       	adiw	r28, 0x20	; 32
     dee:	e6 e0       	ldi	r30, 0x06	; 6
     df0:	0c 94 8e 0a 	jmp	0x151c	; 0x151c <__epilogue_restores__+0x18>

00000df4 <__mulsf3>:
     df4:	a0 e2       	ldi	r26, 0x20	; 32
     df6:	b0 e0       	ldi	r27, 0x00	; 0
     df8:	e0 e0       	ldi	r30, 0x00	; 0
     dfa:	f7 e0       	ldi	r31, 0x07	; 7
     dfc:	0c 94 66 0a 	jmp	0x14cc	; 0x14cc <__prologue_saves__>
     e00:	69 83       	std	Y+1, r22	; 0x01
     e02:	7a 83       	std	Y+2, r23	; 0x02
     e04:	8b 83       	std	Y+3, r24	; 0x03
     e06:	9c 83       	std	Y+4, r25	; 0x04
     e08:	2d 83       	std	Y+5, r18	; 0x05
     e0a:	3e 83       	std	Y+6, r19	; 0x06
     e0c:	4f 83       	std	Y+7, r20	; 0x07
     e0e:	58 87       	std	Y+8, r21	; 0x08
     e10:	ce 01       	movw	r24, r28
     e12:	01 96       	adiw	r24, 0x01	; 1
     e14:	be 01       	movw	r22, r28
     e16:	67 5f       	subi	r22, 0xF7	; 247
     e18:	7f 4f       	sbci	r23, 0xFF	; 255
     e1a:	0e 94 a4 09 	call	0x1348	; 0x1348 <__unpack_f>
     e1e:	ce 01       	movw	r24, r28
     e20:	05 96       	adiw	r24, 0x05	; 5
     e22:	be 01       	movw	r22, r28
     e24:	6f 5e       	subi	r22, 0xEF	; 239
     e26:	7f 4f       	sbci	r23, 0xFF	; 255
     e28:	0e 94 a4 09 	call	0x1348	; 0x1348 <__unpack_f>
     e2c:	99 85       	ldd	r25, Y+9	; 0x09
     e2e:	92 30       	cpi	r25, 0x02	; 2
     e30:	78 f0       	brcs	.+30     	; 0xe50 <__mulsf3+0x5c>
     e32:	89 89       	ldd	r24, Y+17	; 0x11
     e34:	82 30       	cpi	r24, 0x02	; 2
     e36:	c0 f0       	brcs	.+48     	; 0xe68 <__mulsf3+0x74>
     e38:	94 30       	cpi	r25, 0x04	; 4
     e3a:	19 f4       	brne	.+6      	; 0xe42 <__mulsf3+0x4e>
     e3c:	82 30       	cpi	r24, 0x02	; 2
     e3e:	41 f4       	brne	.+16     	; 0xe50 <__mulsf3+0x5c>
     e40:	cb c0       	rjmp	.+406    	; 0xfd8 <__mulsf3+0x1e4>
     e42:	84 30       	cpi	r24, 0x04	; 4
     e44:	19 f4       	brne	.+6      	; 0xe4c <__mulsf3+0x58>
     e46:	92 30       	cpi	r25, 0x02	; 2
     e48:	79 f4       	brne	.+30     	; 0xe68 <__mulsf3+0x74>
     e4a:	c6 c0       	rjmp	.+396    	; 0xfd8 <__mulsf3+0x1e4>
     e4c:	92 30       	cpi	r25, 0x02	; 2
     e4e:	51 f4       	brne	.+20     	; 0xe64 <__mulsf3+0x70>
     e50:	81 e0       	ldi	r24, 0x01	; 1
     e52:	2a 85       	ldd	r18, Y+10	; 0x0a
     e54:	9a 89       	ldd	r25, Y+18	; 0x12
     e56:	29 17       	cp	r18, r25
     e58:	09 f4       	brne	.+2      	; 0xe5c <__mulsf3+0x68>
     e5a:	80 e0       	ldi	r24, 0x00	; 0
     e5c:	8a 87       	std	Y+10, r24	; 0x0a
     e5e:	ce 01       	movw	r24, r28
     e60:	09 96       	adiw	r24, 0x09	; 9
     e62:	bc c0       	rjmp	.+376    	; 0xfdc <__mulsf3+0x1e8>
     e64:	82 30       	cpi	r24, 0x02	; 2
     e66:	51 f4       	brne	.+20     	; 0xe7c <__mulsf3+0x88>
     e68:	81 e0       	ldi	r24, 0x01	; 1
     e6a:	2a 85       	ldd	r18, Y+10	; 0x0a
     e6c:	9a 89       	ldd	r25, Y+18	; 0x12
     e6e:	29 17       	cp	r18, r25
     e70:	09 f4       	brne	.+2      	; 0xe74 <__mulsf3+0x80>
     e72:	80 e0       	ldi	r24, 0x00	; 0
     e74:	8a 8b       	std	Y+18, r24	; 0x12
     e76:	ce 01       	movw	r24, r28
     e78:	41 96       	adiw	r24, 0x11	; 17
     e7a:	b0 c0       	rjmp	.+352    	; 0xfdc <__mulsf3+0x1e8>
     e7c:	6d 84       	ldd	r6, Y+13	; 0x0d
     e7e:	7e 84       	ldd	r7, Y+14	; 0x0e
     e80:	8f 84       	ldd	r8, Y+15	; 0x0f
     e82:	98 88       	ldd	r9, Y+16	; 0x10
     e84:	ed 88       	ldd	r14, Y+21	; 0x15
     e86:	fe 88       	ldd	r15, Y+22	; 0x16
     e88:	0f 89       	ldd	r16, Y+23	; 0x17
     e8a:	18 8d       	ldd	r17, Y+24	; 0x18
     e8c:	e0 e2       	ldi	r30, 0x20	; 32
     e8e:	f0 e0       	ldi	r31, 0x00	; 0
     e90:	80 e0       	ldi	r24, 0x00	; 0
     e92:	90 e0       	ldi	r25, 0x00	; 0
     e94:	dc 01       	movw	r26, r24
     e96:	aa 24       	eor	r10, r10
     e98:	bb 24       	eor	r11, r11
     e9a:	65 01       	movw	r12, r10
     e9c:	20 e0       	ldi	r18, 0x00	; 0
     e9e:	30 e0       	ldi	r19, 0x00	; 0
     ea0:	a9 01       	movw	r20, r18
     ea2:	b3 01       	movw	r22, r6
     ea4:	61 70       	andi	r22, 0x01	; 1
     ea6:	70 70       	andi	r23, 0x00	; 0
     ea8:	61 15       	cp	r22, r1
     eaa:	71 05       	cpc	r23, r1
     eac:	d1 f0       	breq	.+52     	; 0xee2 <__mulsf3+0xee>
     eae:	2e 0d       	add	r18, r14
     eb0:	3f 1d       	adc	r19, r15
     eb2:	40 1f       	adc	r20, r16
     eb4:	51 1f       	adc	r21, r17
     eb6:	15 01       	movw	r2, r10
     eb8:	26 01       	movw	r4, r12
     eba:	28 0e       	add	r2, r24
     ebc:	39 1e       	adc	r3, r25
     ebe:	4a 1e       	adc	r4, r26
     ec0:	5b 1e       	adc	r5, r27
     ec2:	81 e0       	ldi	r24, 0x01	; 1
     ec4:	90 e0       	ldi	r25, 0x00	; 0
     ec6:	a0 e0       	ldi	r26, 0x00	; 0
     ec8:	b0 e0       	ldi	r27, 0x00	; 0
     eca:	2e 15       	cp	r18, r14
     ecc:	3f 05       	cpc	r19, r15
     ece:	40 07       	cpc	r20, r16
     ed0:	51 07       	cpc	r21, r17
     ed2:	18 f0       	brcs	.+6      	; 0xeda <__mulsf3+0xe6>
     ed4:	80 e0       	ldi	r24, 0x00	; 0
     ed6:	90 e0       	ldi	r25, 0x00	; 0
     ed8:	dc 01       	movw	r26, r24
     eda:	82 0d       	add	r24, r2
     edc:	93 1d       	adc	r25, r3
     ede:	a4 1d       	adc	r26, r4
     ee0:	b5 1d       	adc	r27, r5
     ee2:	aa 0c       	add	r10, r10
     ee4:	bb 1c       	adc	r11, r11
     ee6:	cc 1c       	adc	r12, r12
     ee8:	dd 1c       	adc	r13, r13
     eea:	17 ff       	sbrs	r17, 7
     eec:	09 c0       	rjmp	.+18     	; 0xf00 <__mulsf3+0x10c>
     eee:	61 e0       	ldi	r22, 0x01	; 1
     ef0:	26 2e       	mov	r2, r22
     ef2:	31 2c       	mov	r3, r1
     ef4:	41 2c       	mov	r4, r1
     ef6:	51 2c       	mov	r5, r1
     ef8:	a2 28       	or	r10, r2
     efa:	b3 28       	or	r11, r3
     efc:	c4 28       	or	r12, r4
     efe:	d5 28       	or	r13, r5
     f00:	31 97       	sbiw	r30, 0x01	; 1
     f02:	49 f0       	breq	.+18     	; 0xf16 <__mulsf3+0x122>
     f04:	ee 0c       	add	r14, r14
     f06:	ff 1c       	adc	r15, r15
     f08:	00 1f       	adc	r16, r16
     f0a:	11 1f       	adc	r17, r17
     f0c:	96 94       	lsr	r9
     f0e:	87 94       	ror	r8
     f10:	77 94       	ror	r7
     f12:	67 94       	ror	r6
     f14:	c6 cf       	rjmp	.-116    	; 0xea2 <__mulsf3+0xae>
     f16:	6b 89       	ldd	r22, Y+19	; 0x13
     f18:	7c 89       	ldd	r23, Y+20	; 0x14
     f1a:	eb 85       	ldd	r30, Y+11	; 0x0b
     f1c:	fc 85       	ldd	r31, Y+12	; 0x0c
     f1e:	6e 0f       	add	r22, r30
     f20:	7f 1f       	adc	r23, r31
     f22:	6e 5f       	subi	r22, 0xFE	; 254
     f24:	7f 4f       	sbci	r23, 0xFF	; 255
     f26:	7c 8f       	std	Y+28, r23	; 0x1c
     f28:	6b 8f       	std	Y+27, r22	; 0x1b
     f2a:	61 e0       	ldi	r22, 0x01	; 1
     f2c:	ea 85       	ldd	r30, Y+10	; 0x0a
     f2e:	7a 89       	ldd	r23, Y+18	; 0x12
     f30:	e7 17       	cp	r30, r23
     f32:	09 f4       	brne	.+2      	; 0xf36 <__mulsf3+0x142>
     f34:	60 e0       	ldi	r22, 0x00	; 0
     f36:	6a 8f       	std	Y+26, r22	; 0x1a
     f38:	6b 8d       	ldd	r22, Y+27	; 0x1b
     f3a:	7c 8d       	ldd	r23, Y+28	; 0x1c
     f3c:	10 c0       	rjmp	.+32     	; 0xf5e <__mulsf3+0x16a>
     f3e:	fc 01       	movw	r30, r24
     f40:	e1 70       	andi	r30, 0x01	; 1
     f42:	f0 70       	andi	r31, 0x00	; 0
     f44:	30 97       	sbiw	r30, 0x00	; 0
     f46:	29 f0       	breq	.+10     	; 0xf52 <__mulsf3+0x15e>
     f48:	56 95       	lsr	r21
     f4a:	47 95       	ror	r20
     f4c:	37 95       	ror	r19
     f4e:	27 95       	ror	r18
     f50:	50 68       	ori	r21, 0x80	; 128
     f52:	b6 95       	lsr	r27
     f54:	a7 95       	ror	r26
     f56:	97 95       	ror	r25
     f58:	87 95       	ror	r24
     f5a:	6f 5f       	subi	r22, 0xFF	; 255
     f5c:	7f 4f       	sbci	r23, 0xFF	; 255
     f5e:	b7 fd       	sbrc	r27, 7
     f60:	ee cf       	rjmp	.-36     	; 0xf3e <__mulsf3+0x14a>
     f62:	0c c0       	rjmp	.+24     	; 0xf7c <__mulsf3+0x188>
     f64:	88 0f       	add	r24, r24
     f66:	99 1f       	adc	r25, r25
     f68:	aa 1f       	adc	r26, r26
     f6a:	bb 1f       	adc	r27, r27
     f6c:	57 fd       	sbrc	r21, 7
     f6e:	81 60       	ori	r24, 0x01	; 1
     f70:	22 0f       	add	r18, r18
     f72:	33 1f       	adc	r19, r19
     f74:	44 1f       	adc	r20, r20
     f76:	55 1f       	adc	r21, r21
     f78:	61 50       	subi	r22, 0x01	; 1
     f7a:	70 40       	sbci	r23, 0x00	; 0
     f7c:	80 30       	cpi	r24, 0x00	; 0
     f7e:	e0 e0       	ldi	r30, 0x00	; 0
     f80:	9e 07       	cpc	r25, r30
     f82:	e0 e0       	ldi	r30, 0x00	; 0
     f84:	ae 07       	cpc	r26, r30
     f86:	e0 e4       	ldi	r30, 0x40	; 64
     f88:	be 07       	cpc	r27, r30
     f8a:	60 f3       	brcs	.-40     	; 0xf64 <__mulsf3+0x170>
     f8c:	6b 8f       	std	Y+27, r22	; 0x1b
     f8e:	7c 8f       	std	Y+28, r23	; 0x1c
     f90:	6f e7       	ldi	r22, 0x7F	; 127
     f92:	e6 2e       	mov	r14, r22
     f94:	f1 2c       	mov	r15, r1
     f96:	01 2d       	mov	r16, r1
     f98:	11 2d       	mov	r17, r1
     f9a:	e8 22       	and	r14, r24
     f9c:	f9 22       	and	r15, r25
     f9e:	0a 23       	and	r16, r26
     fa0:	1b 23       	and	r17, r27
     fa2:	60 e4       	ldi	r22, 0x40	; 64
     fa4:	e6 16       	cp	r14, r22
     fa6:	f1 04       	cpc	r15, r1
     fa8:	01 05       	cpc	r16, r1
     faa:	11 05       	cpc	r17, r1
     fac:	61 f4       	brne	.+24     	; 0xfc6 <__mulsf3+0x1d2>
     fae:	87 fd       	sbrc	r24, 7
     fb0:	0a c0       	rjmp	.+20     	; 0xfc6 <__mulsf3+0x1d2>
     fb2:	21 15       	cp	r18, r1
     fb4:	31 05       	cpc	r19, r1
     fb6:	41 05       	cpc	r20, r1
     fb8:	51 05       	cpc	r21, r1
     fba:	29 f0       	breq	.+10     	; 0xfc6 <__mulsf3+0x1d2>
     fbc:	80 5c       	subi	r24, 0xC0	; 192
     fbe:	9f 4f       	sbci	r25, 0xFF	; 255
     fc0:	af 4f       	sbci	r26, 0xFF	; 255
     fc2:	bf 4f       	sbci	r27, 0xFF	; 255
     fc4:	80 78       	andi	r24, 0x80	; 128
     fc6:	8d 8f       	std	Y+29, r24	; 0x1d
     fc8:	9e 8f       	std	Y+30, r25	; 0x1e
     fca:	af 8f       	std	Y+31, r26	; 0x1f
     fcc:	b8 a3       	std	Y+32, r27	; 0x20
     fce:	83 e0       	ldi	r24, 0x03	; 3
     fd0:	89 8f       	std	Y+25, r24	; 0x19
     fd2:	ce 01       	movw	r24, r28
     fd4:	49 96       	adiw	r24, 0x19	; 25
     fd6:	02 c0       	rjmp	.+4      	; 0xfdc <__mulsf3+0x1e8>
     fd8:	87 e0       	ldi	r24, 0x07	; 7
     fda:	91 e0       	ldi	r25, 0x01	; 1
     fdc:	0e 94 d6 08 	call	0x11ac	; 0x11ac <__pack_f>
     fe0:	a0 96       	adiw	r28, 0x20	; 32
     fe2:	e2 e1       	ldi	r30, 0x12	; 18
     fe4:	0c 94 82 0a 	jmp	0x1504	; 0x1504 <__epilogue_restores__>

00000fe8 <__gtsf2>:
     fe8:	a8 e1       	ldi	r26, 0x18	; 24
     fea:	b0 e0       	ldi	r27, 0x00	; 0
     fec:	ea ef       	ldi	r30, 0xFA	; 250
     fee:	f7 e0       	ldi	r31, 0x07	; 7
     ff0:	0c 94 72 0a 	jmp	0x14e4	; 0x14e4 <__prologue_saves__+0x18>
     ff4:	69 83       	std	Y+1, r22	; 0x01
     ff6:	7a 83       	std	Y+2, r23	; 0x02
     ff8:	8b 83       	std	Y+3, r24	; 0x03
     ffa:	9c 83       	std	Y+4, r25	; 0x04
     ffc:	2d 83       	std	Y+5, r18	; 0x05
     ffe:	3e 83       	std	Y+6, r19	; 0x06
    1000:	4f 83       	std	Y+7, r20	; 0x07
    1002:	58 87       	std	Y+8, r21	; 0x08
    1004:	8e 01       	movw	r16, r28
    1006:	07 5f       	subi	r16, 0xF7	; 247
    1008:	1f 4f       	sbci	r17, 0xFF	; 255
    100a:	ce 01       	movw	r24, r28
    100c:	01 96       	adiw	r24, 0x01	; 1
    100e:	b8 01       	movw	r22, r16
    1010:	0e 94 a4 09 	call	0x1348	; 0x1348 <__unpack_f>
    1014:	81 e1       	ldi	r24, 0x11	; 17
    1016:	e8 2e       	mov	r14, r24
    1018:	f1 2c       	mov	r15, r1
    101a:	ec 0e       	add	r14, r28
    101c:	fd 1e       	adc	r15, r29
    101e:	ce 01       	movw	r24, r28
    1020:	05 96       	adiw	r24, 0x05	; 5
    1022:	b7 01       	movw	r22, r14
    1024:	0e 94 a4 09 	call	0x1348	; 0x1348 <__unpack_f>
    1028:	89 85       	ldd	r24, Y+9	; 0x09
    102a:	82 30       	cpi	r24, 0x02	; 2
    102c:	40 f0       	brcs	.+16     	; 0x103e <__gtsf2+0x56>
    102e:	89 89       	ldd	r24, Y+17	; 0x11
    1030:	82 30       	cpi	r24, 0x02	; 2
    1032:	28 f0       	brcs	.+10     	; 0x103e <__gtsf2+0x56>
    1034:	c8 01       	movw	r24, r16
    1036:	b7 01       	movw	r22, r14
    1038:	0e 94 0d 0a 	call	0x141a	; 0x141a <__fpcmp_parts_f>
    103c:	01 c0       	rjmp	.+2      	; 0x1040 <__gtsf2+0x58>
    103e:	8f ef       	ldi	r24, 0xFF	; 255
    1040:	68 96       	adiw	r28, 0x18	; 24
    1042:	e6 e0       	ldi	r30, 0x06	; 6
    1044:	0c 94 8e 0a 	jmp	0x151c	; 0x151c <__epilogue_restores__+0x18>

00001048 <__gesf2>:
    1048:	a8 e1       	ldi	r26, 0x18	; 24
    104a:	b0 e0       	ldi	r27, 0x00	; 0
    104c:	ea e2       	ldi	r30, 0x2A	; 42
    104e:	f8 e0       	ldi	r31, 0x08	; 8
    1050:	0c 94 72 0a 	jmp	0x14e4	; 0x14e4 <__prologue_saves__+0x18>
    1054:	69 83       	std	Y+1, r22	; 0x01
    1056:	7a 83       	std	Y+2, r23	; 0x02
    1058:	8b 83       	std	Y+3, r24	; 0x03
    105a:	9c 83       	std	Y+4, r25	; 0x04
    105c:	2d 83       	std	Y+5, r18	; 0x05
    105e:	3e 83       	std	Y+6, r19	; 0x06
    1060:	4f 83       	std	Y+7, r20	; 0x07
    1062:	58 87       	std	Y+8, r21	; 0x08
    1064:	8e 01       	movw	r16, r28
    1066:	07 5f       	subi	r16, 0xF7	; 247
    1068:	1f 4f       	sbci	r17, 0xFF	; 255
    106a:	ce 01       	movw	r24, r28
    106c:	01 96       	adiw	r24, 0x01	; 1
    106e:	b8 01       	movw	r22, r16
    1070:	0e 94 a4 09 	call	0x1348	; 0x1348 <__unpack_f>
    1074:	81 e1       	ldi	r24, 0x11	; 17
    1076:	e8 2e       	mov	r14, r24
    1078:	f1 2c       	mov	r15, r1
    107a:	ec 0e       	add	r14, r28
    107c:	fd 1e       	adc	r15, r29
    107e:	ce 01       	movw	r24, r28
    1080:	05 96       	adiw	r24, 0x05	; 5
    1082:	b7 01       	movw	r22, r14
    1084:	0e 94 a4 09 	call	0x1348	; 0x1348 <__unpack_f>
    1088:	89 85       	ldd	r24, Y+9	; 0x09
    108a:	82 30       	cpi	r24, 0x02	; 2
    108c:	40 f0       	brcs	.+16     	; 0x109e <__gesf2+0x56>
    108e:	89 89       	ldd	r24, Y+17	; 0x11
    1090:	82 30       	cpi	r24, 0x02	; 2
    1092:	28 f0       	brcs	.+10     	; 0x109e <__gesf2+0x56>
    1094:	c8 01       	movw	r24, r16
    1096:	b7 01       	movw	r22, r14
    1098:	0e 94 0d 0a 	call	0x141a	; 0x141a <__fpcmp_parts_f>
    109c:	01 c0       	rjmp	.+2      	; 0x10a0 <__gesf2+0x58>
    109e:	8f ef       	ldi	r24, 0xFF	; 255
    10a0:	68 96       	adiw	r28, 0x18	; 24
    10a2:	e6 e0       	ldi	r30, 0x06	; 6
    10a4:	0c 94 8e 0a 	jmp	0x151c	; 0x151c <__epilogue_restores__+0x18>

000010a8 <__ltsf2>:
    10a8:	a8 e1       	ldi	r26, 0x18	; 24
    10aa:	b0 e0       	ldi	r27, 0x00	; 0
    10ac:	ea e5       	ldi	r30, 0x5A	; 90
    10ae:	f8 e0       	ldi	r31, 0x08	; 8
    10b0:	0c 94 72 0a 	jmp	0x14e4	; 0x14e4 <__prologue_saves__+0x18>
    10b4:	69 83       	std	Y+1, r22	; 0x01
    10b6:	7a 83       	std	Y+2, r23	; 0x02
    10b8:	8b 83       	std	Y+3, r24	; 0x03
    10ba:	9c 83       	std	Y+4, r25	; 0x04
    10bc:	2d 83       	std	Y+5, r18	; 0x05
    10be:	3e 83       	std	Y+6, r19	; 0x06
    10c0:	4f 83       	std	Y+7, r20	; 0x07
    10c2:	58 87       	std	Y+8, r21	; 0x08
    10c4:	8e 01       	movw	r16, r28
    10c6:	07 5f       	subi	r16, 0xF7	; 247
    10c8:	1f 4f       	sbci	r17, 0xFF	; 255
    10ca:	ce 01       	movw	r24, r28
    10cc:	01 96       	adiw	r24, 0x01	; 1
    10ce:	b8 01       	movw	r22, r16
    10d0:	0e 94 a4 09 	call	0x1348	; 0x1348 <__unpack_f>
    10d4:	81 e1       	ldi	r24, 0x11	; 17
    10d6:	e8 2e       	mov	r14, r24
    10d8:	f1 2c       	mov	r15, r1
    10da:	ec 0e       	add	r14, r28
    10dc:	fd 1e       	adc	r15, r29
    10de:	ce 01       	movw	r24, r28
    10e0:	05 96       	adiw	r24, 0x05	; 5
    10e2:	b7 01       	movw	r22, r14
    10e4:	0e 94 a4 09 	call	0x1348	; 0x1348 <__unpack_f>
    10e8:	89 85       	ldd	r24, Y+9	; 0x09
    10ea:	82 30       	cpi	r24, 0x02	; 2
    10ec:	40 f0       	brcs	.+16     	; 0x10fe <__ltsf2+0x56>
    10ee:	89 89       	ldd	r24, Y+17	; 0x11
    10f0:	82 30       	cpi	r24, 0x02	; 2
    10f2:	28 f0       	brcs	.+10     	; 0x10fe <__ltsf2+0x56>
    10f4:	c8 01       	movw	r24, r16
    10f6:	b7 01       	movw	r22, r14
    10f8:	0e 94 0d 0a 	call	0x141a	; 0x141a <__fpcmp_parts_f>
    10fc:	01 c0       	rjmp	.+2      	; 0x1100 <__ltsf2+0x58>
    10fe:	81 e0       	ldi	r24, 0x01	; 1
    1100:	68 96       	adiw	r28, 0x18	; 24
    1102:	e6 e0       	ldi	r30, 0x06	; 6
    1104:	0c 94 8e 0a 	jmp	0x151c	; 0x151c <__epilogue_restores__+0x18>

00001108 <__fixsfsi>:
    1108:	ac e0       	ldi	r26, 0x0C	; 12
    110a:	b0 e0       	ldi	r27, 0x00	; 0
    110c:	ea e8       	ldi	r30, 0x8A	; 138
    110e:	f8 e0       	ldi	r31, 0x08	; 8
    1110:	0c 94 76 0a 	jmp	0x14ec	; 0x14ec <__prologue_saves__+0x20>
    1114:	69 83       	std	Y+1, r22	; 0x01
    1116:	7a 83       	std	Y+2, r23	; 0x02
    1118:	8b 83       	std	Y+3, r24	; 0x03
    111a:	9c 83       	std	Y+4, r25	; 0x04
    111c:	ce 01       	movw	r24, r28
    111e:	01 96       	adiw	r24, 0x01	; 1
    1120:	be 01       	movw	r22, r28
    1122:	6b 5f       	subi	r22, 0xFB	; 251
    1124:	7f 4f       	sbci	r23, 0xFF	; 255
    1126:	0e 94 a4 09 	call	0x1348	; 0x1348 <__unpack_f>
    112a:	8d 81       	ldd	r24, Y+5	; 0x05
    112c:	82 30       	cpi	r24, 0x02	; 2
    112e:	81 f1       	breq	.+96     	; 0x1190 <__fixsfsi+0x88>
    1130:	82 30       	cpi	r24, 0x02	; 2
    1132:	70 f1       	brcs	.+92     	; 0x1190 <__fixsfsi+0x88>
    1134:	84 30       	cpi	r24, 0x04	; 4
    1136:	21 f4       	brne	.+8      	; 0x1140 <__fixsfsi+0x38>
    1138:	8e 81       	ldd	r24, Y+6	; 0x06
    113a:	88 23       	and	r24, r24
    113c:	69 f1       	breq	.+90     	; 0x1198 <__fixsfsi+0x90>
    113e:	0a c0       	rjmp	.+20     	; 0x1154 <__fixsfsi+0x4c>
    1140:	2f 81       	ldd	r18, Y+7	; 0x07
    1142:	38 85       	ldd	r19, Y+8	; 0x08
    1144:	37 fd       	sbrc	r19, 7
    1146:	24 c0       	rjmp	.+72     	; 0x1190 <__fixsfsi+0x88>
    1148:	6e 81       	ldd	r22, Y+6	; 0x06
    114a:	2f 31       	cpi	r18, 0x1F	; 31
    114c:	31 05       	cpc	r19, r1
    114e:	3c f0       	brlt	.+14     	; 0x115e <__fixsfsi+0x56>
    1150:	66 23       	and	r22, r22
    1152:	11 f1       	breq	.+68     	; 0x1198 <__fixsfsi+0x90>
    1154:	20 e0       	ldi	r18, 0x00	; 0
    1156:	30 e0       	ldi	r19, 0x00	; 0
    1158:	40 e0       	ldi	r20, 0x00	; 0
    115a:	50 e8       	ldi	r21, 0x80	; 128
    115c:	21 c0       	rjmp	.+66     	; 0x11a0 <__fixsfsi+0x98>
    115e:	8e e1       	ldi	r24, 0x1E	; 30
    1160:	90 e0       	ldi	r25, 0x00	; 0
    1162:	82 1b       	sub	r24, r18
    1164:	93 0b       	sbc	r25, r19
    1166:	29 85       	ldd	r18, Y+9	; 0x09
    1168:	3a 85       	ldd	r19, Y+10	; 0x0a
    116a:	4b 85       	ldd	r20, Y+11	; 0x0b
    116c:	5c 85       	ldd	r21, Y+12	; 0x0c
    116e:	04 c0       	rjmp	.+8      	; 0x1178 <__fixsfsi+0x70>
    1170:	56 95       	lsr	r21
    1172:	47 95       	ror	r20
    1174:	37 95       	ror	r19
    1176:	27 95       	ror	r18
    1178:	8a 95       	dec	r24
    117a:	d2 f7       	brpl	.-12     	; 0x1170 <__fixsfsi+0x68>
    117c:	66 23       	and	r22, r22
    117e:	81 f0       	breq	.+32     	; 0x11a0 <__fixsfsi+0x98>
    1180:	50 95       	com	r21
    1182:	40 95       	com	r20
    1184:	30 95       	com	r19
    1186:	21 95       	neg	r18
    1188:	3f 4f       	sbci	r19, 0xFF	; 255
    118a:	4f 4f       	sbci	r20, 0xFF	; 255
    118c:	5f 4f       	sbci	r21, 0xFF	; 255
    118e:	08 c0       	rjmp	.+16     	; 0x11a0 <__fixsfsi+0x98>
    1190:	20 e0       	ldi	r18, 0x00	; 0
    1192:	30 e0       	ldi	r19, 0x00	; 0
    1194:	a9 01       	movw	r20, r18
    1196:	04 c0       	rjmp	.+8      	; 0x11a0 <__fixsfsi+0x98>
    1198:	2f ef       	ldi	r18, 0xFF	; 255
    119a:	3f ef       	ldi	r19, 0xFF	; 255
    119c:	4f ef       	ldi	r20, 0xFF	; 255
    119e:	5f e7       	ldi	r21, 0x7F	; 127
    11a0:	b9 01       	movw	r22, r18
    11a2:	ca 01       	movw	r24, r20
    11a4:	2c 96       	adiw	r28, 0x0c	; 12
    11a6:	e2 e0       	ldi	r30, 0x02	; 2
    11a8:	0c 94 92 0a 	jmp	0x1524	; 0x1524 <__epilogue_restores__+0x20>

000011ac <__pack_f>:
    11ac:	ef 92       	push	r14
    11ae:	ff 92       	push	r15
    11b0:	0f 93       	push	r16
    11b2:	1f 93       	push	r17
    11b4:	cf 93       	push	r28
    11b6:	df 93       	push	r29
    11b8:	fc 01       	movw	r30, r24
    11ba:	24 81       	ldd	r18, Z+4	; 0x04
    11bc:	35 81       	ldd	r19, Z+5	; 0x05
    11be:	46 81       	ldd	r20, Z+6	; 0x06
    11c0:	57 81       	ldd	r21, Z+7	; 0x07
    11c2:	61 81       	ldd	r22, Z+1	; 0x01
    11c4:	80 81       	ld	r24, Z
    11c6:	82 30       	cpi	r24, 0x02	; 2
    11c8:	20 f4       	brcc	.+8      	; 0x11d2 <__pack_f+0x26>
    11ca:	40 61       	ori	r20, 0x10	; 16
    11cc:	ef ef       	ldi	r30, 0xFF	; 255
    11ce:	f0 e0       	ldi	r31, 0x00	; 0
    11d0:	a3 c0       	rjmp	.+326    	; 0x1318 <__pack_f+0x16c>
    11d2:	84 30       	cpi	r24, 0x04	; 4
    11d4:	09 f4       	brne	.+2      	; 0x11d8 <__pack_f+0x2c>
    11d6:	9b c0       	rjmp	.+310    	; 0x130e <__pack_f+0x162>
    11d8:	82 30       	cpi	r24, 0x02	; 2
    11da:	09 f4       	brne	.+2      	; 0x11de <__pack_f+0x32>
    11dc:	92 c0       	rjmp	.+292    	; 0x1302 <__pack_f+0x156>
    11de:	21 15       	cp	r18, r1
    11e0:	31 05       	cpc	r19, r1
    11e2:	41 05       	cpc	r20, r1
    11e4:	51 05       	cpc	r21, r1
    11e6:	09 f4       	brne	.+2      	; 0x11ea <__pack_f+0x3e>
    11e8:	8f c0       	rjmp	.+286    	; 0x1308 <__pack_f+0x15c>
    11ea:	02 80       	ldd	r0, Z+2	; 0x02
    11ec:	f3 81       	ldd	r31, Z+3	; 0x03
    11ee:	e0 2d       	mov	r30, r0
    11f0:	8f ef       	ldi	r24, 0xFF	; 255
    11f2:	e2 38       	cpi	r30, 0x82	; 130
    11f4:	f8 07       	cpc	r31, r24
    11f6:	0c f0       	brlt	.+2      	; 0x11fa <__pack_f+0x4e>
    11f8:	5a c0       	rjmp	.+180    	; 0x12ae <__pack_f+0x102>
    11fa:	c2 e8       	ldi	r28, 0x82	; 130
    11fc:	df ef       	ldi	r29, 0xFF	; 255
    11fe:	ce 1b       	sub	r28, r30
    1200:	df 0b       	sbc	r29, r31
    1202:	ca 31       	cpi	r28, 0x1A	; 26
    1204:	d1 05       	cpc	r29, r1
    1206:	6c f5       	brge	.+90     	; 0x1262 <__pack_f+0xb6>
    1208:	79 01       	movw	r14, r18
    120a:	8a 01       	movw	r16, r20
    120c:	0c 2e       	mov	r0, r28
    120e:	04 c0       	rjmp	.+8      	; 0x1218 <__pack_f+0x6c>
    1210:	16 95       	lsr	r17
    1212:	07 95       	ror	r16
    1214:	f7 94       	ror	r15
    1216:	e7 94       	ror	r14
    1218:	0a 94       	dec	r0
    121a:	d2 f7       	brpl	.-12     	; 0x1210 <__pack_f+0x64>
    121c:	81 e0       	ldi	r24, 0x01	; 1
    121e:	90 e0       	ldi	r25, 0x00	; 0
    1220:	a0 e0       	ldi	r26, 0x00	; 0
    1222:	b0 e0       	ldi	r27, 0x00	; 0
    1224:	0c 2e       	mov	r0, r28
    1226:	04 c0       	rjmp	.+8      	; 0x1230 <__pack_f+0x84>
    1228:	88 0f       	add	r24, r24
    122a:	99 1f       	adc	r25, r25
    122c:	aa 1f       	adc	r26, r26
    122e:	bb 1f       	adc	r27, r27
    1230:	0a 94       	dec	r0
    1232:	d2 f7       	brpl	.-12     	; 0x1228 <__pack_f+0x7c>
    1234:	01 97       	sbiw	r24, 0x01	; 1
    1236:	a1 09       	sbc	r26, r1
    1238:	b1 09       	sbc	r27, r1
    123a:	82 23       	and	r24, r18
    123c:	93 23       	and	r25, r19
    123e:	a4 23       	and	r26, r20
    1240:	b5 23       	and	r27, r21
    1242:	21 e0       	ldi	r18, 0x01	; 1
    1244:	30 e0       	ldi	r19, 0x00	; 0
    1246:	40 e0       	ldi	r20, 0x00	; 0
    1248:	50 e0       	ldi	r21, 0x00	; 0
    124a:	00 97       	sbiw	r24, 0x00	; 0
    124c:	a1 05       	cpc	r26, r1
    124e:	b1 05       	cpc	r27, r1
    1250:	19 f4       	brne	.+6      	; 0x1258 <__pack_f+0xac>
    1252:	20 e0       	ldi	r18, 0x00	; 0
    1254:	30 e0       	ldi	r19, 0x00	; 0
    1256:	a9 01       	movw	r20, r18
    1258:	2e 29       	or	r18, r14
    125a:	3f 29       	or	r19, r15
    125c:	40 2b       	or	r20, r16
    125e:	51 2b       	or	r21, r17
    1260:	03 c0       	rjmp	.+6      	; 0x1268 <__pack_f+0xbc>
    1262:	20 e0       	ldi	r18, 0x00	; 0
    1264:	30 e0       	ldi	r19, 0x00	; 0
    1266:	a9 01       	movw	r20, r18
    1268:	da 01       	movw	r26, r20
    126a:	c9 01       	movw	r24, r18
    126c:	8f 77       	andi	r24, 0x7F	; 127
    126e:	90 70       	andi	r25, 0x00	; 0
    1270:	a0 70       	andi	r26, 0x00	; 0
    1272:	b0 70       	andi	r27, 0x00	; 0
    1274:	80 34       	cpi	r24, 0x40	; 64
    1276:	91 05       	cpc	r25, r1
    1278:	a1 05       	cpc	r26, r1
    127a:	b1 05       	cpc	r27, r1
    127c:	39 f4       	brne	.+14     	; 0x128c <__pack_f+0xe0>
    127e:	27 ff       	sbrs	r18, 7
    1280:	09 c0       	rjmp	.+18     	; 0x1294 <__pack_f+0xe8>
    1282:	20 5c       	subi	r18, 0xC0	; 192
    1284:	3f 4f       	sbci	r19, 0xFF	; 255
    1286:	4f 4f       	sbci	r20, 0xFF	; 255
    1288:	5f 4f       	sbci	r21, 0xFF	; 255
    128a:	04 c0       	rjmp	.+8      	; 0x1294 <__pack_f+0xe8>
    128c:	21 5c       	subi	r18, 0xC1	; 193
    128e:	3f 4f       	sbci	r19, 0xFF	; 255
    1290:	4f 4f       	sbci	r20, 0xFF	; 255
    1292:	5f 4f       	sbci	r21, 0xFF	; 255
    1294:	e1 e0       	ldi	r30, 0x01	; 1
    1296:	f0 e0       	ldi	r31, 0x00	; 0
    1298:	20 30       	cpi	r18, 0x00	; 0
    129a:	80 e0       	ldi	r24, 0x00	; 0
    129c:	38 07       	cpc	r19, r24
    129e:	80 e0       	ldi	r24, 0x00	; 0
    12a0:	48 07       	cpc	r20, r24
    12a2:	80 e4       	ldi	r24, 0x40	; 64
    12a4:	58 07       	cpc	r21, r24
    12a6:	28 f5       	brcc	.+74     	; 0x12f2 <__pack_f+0x146>
    12a8:	e0 e0       	ldi	r30, 0x00	; 0
    12aa:	f0 e0       	ldi	r31, 0x00	; 0
    12ac:	22 c0       	rjmp	.+68     	; 0x12f2 <__pack_f+0x146>
    12ae:	e0 38       	cpi	r30, 0x80	; 128
    12b0:	f1 05       	cpc	r31, r1
    12b2:	6c f5       	brge	.+90     	; 0x130e <__pack_f+0x162>
    12b4:	e1 58       	subi	r30, 0x81	; 129
    12b6:	ff 4f       	sbci	r31, 0xFF	; 255
    12b8:	da 01       	movw	r26, r20
    12ba:	c9 01       	movw	r24, r18
    12bc:	8f 77       	andi	r24, 0x7F	; 127
    12be:	90 70       	andi	r25, 0x00	; 0
    12c0:	a0 70       	andi	r26, 0x00	; 0
    12c2:	b0 70       	andi	r27, 0x00	; 0
    12c4:	80 34       	cpi	r24, 0x40	; 64
    12c6:	91 05       	cpc	r25, r1
    12c8:	a1 05       	cpc	r26, r1
    12ca:	b1 05       	cpc	r27, r1
    12cc:	39 f4       	brne	.+14     	; 0x12dc <__pack_f+0x130>
    12ce:	27 ff       	sbrs	r18, 7
    12d0:	09 c0       	rjmp	.+18     	; 0x12e4 <__pack_f+0x138>
    12d2:	20 5c       	subi	r18, 0xC0	; 192
    12d4:	3f 4f       	sbci	r19, 0xFF	; 255
    12d6:	4f 4f       	sbci	r20, 0xFF	; 255
    12d8:	5f 4f       	sbci	r21, 0xFF	; 255
    12da:	04 c0       	rjmp	.+8      	; 0x12e4 <__pack_f+0x138>
    12dc:	21 5c       	subi	r18, 0xC1	; 193
    12de:	3f 4f       	sbci	r19, 0xFF	; 255
    12e0:	4f 4f       	sbci	r20, 0xFF	; 255
    12e2:	5f 4f       	sbci	r21, 0xFF	; 255
    12e4:	57 ff       	sbrs	r21, 7
    12e6:	05 c0       	rjmp	.+10     	; 0x12f2 <__pack_f+0x146>
    12e8:	56 95       	lsr	r21
    12ea:	47 95       	ror	r20
    12ec:	37 95       	ror	r19
    12ee:	27 95       	ror	r18
    12f0:	31 96       	adiw	r30, 0x01	; 1
    12f2:	87 e0       	ldi	r24, 0x07	; 7
    12f4:	56 95       	lsr	r21
    12f6:	47 95       	ror	r20
    12f8:	37 95       	ror	r19
    12fa:	27 95       	ror	r18
    12fc:	8a 95       	dec	r24
    12fe:	d1 f7       	brne	.-12     	; 0x12f4 <__pack_f+0x148>
    1300:	0b c0       	rjmp	.+22     	; 0x1318 <__pack_f+0x16c>
    1302:	e0 e0       	ldi	r30, 0x00	; 0
    1304:	f0 e0       	ldi	r31, 0x00	; 0
    1306:	05 c0       	rjmp	.+10     	; 0x1312 <__pack_f+0x166>
    1308:	e0 e0       	ldi	r30, 0x00	; 0
    130a:	f0 e0       	ldi	r31, 0x00	; 0
    130c:	05 c0       	rjmp	.+10     	; 0x1318 <__pack_f+0x16c>
    130e:	ef ef       	ldi	r30, 0xFF	; 255
    1310:	f0 e0       	ldi	r31, 0x00	; 0
    1312:	20 e0       	ldi	r18, 0x00	; 0
    1314:	30 e0       	ldi	r19, 0x00	; 0
    1316:	a9 01       	movw	r20, r18
    1318:	8e 2f       	mov	r24, r30
    131a:	87 95       	ror	r24
    131c:	88 27       	eor	r24, r24
    131e:	87 95       	ror	r24
    1320:	94 2f       	mov	r25, r20
    1322:	9f 77       	andi	r25, 0x7F	; 127
    1324:	67 95       	ror	r22
    1326:	66 27       	eor	r22, r22
    1328:	67 95       	ror	r22
    132a:	e6 95       	lsr	r30
    132c:	e2 2e       	mov	r14, r18
    132e:	a9 2f       	mov	r26, r25
    1330:	a8 2b       	or	r26, r24
    1332:	fe 2f       	mov	r31, r30
    1334:	f6 2b       	or	r31, r22
    1336:	62 2f       	mov	r22, r18
    1338:	73 2f       	mov	r23, r19
    133a:	8a 2f       	mov	r24, r26
    133c:	9f 2f       	mov	r25, r31
    133e:	cd b7       	in	r28, 0x3d	; 61
    1340:	de b7       	in	r29, 0x3e	; 62
    1342:	e6 e0       	ldi	r30, 0x06	; 6
    1344:	0c 94 8e 0a 	jmp	0x151c	; 0x151c <__epilogue_restores__+0x18>

00001348 <__unpack_f>:
    1348:	dc 01       	movw	r26, r24
    134a:	fb 01       	movw	r30, r22
    134c:	2c 91       	ld	r18, X
    134e:	11 96       	adiw	r26, 0x01	; 1
    1350:	3c 91       	ld	r19, X
    1352:	11 97       	sbiw	r26, 0x01	; 1
    1354:	12 96       	adiw	r26, 0x02	; 2
    1356:	8c 91       	ld	r24, X
    1358:	12 97       	sbiw	r26, 0x02	; 2
    135a:	48 2f       	mov	r20, r24
    135c:	4f 77       	andi	r20, 0x7F	; 127
    135e:	50 e0       	ldi	r21, 0x00	; 0
    1360:	98 2f       	mov	r25, r24
    1362:	99 1f       	adc	r25, r25
    1364:	99 27       	eor	r25, r25
    1366:	99 1f       	adc	r25, r25
    1368:	13 96       	adiw	r26, 0x03	; 3
    136a:	6c 91       	ld	r22, X
    136c:	13 97       	sbiw	r26, 0x03	; 3
    136e:	86 2f       	mov	r24, r22
    1370:	88 0f       	add	r24, r24
    1372:	89 2b       	or	r24, r25
    1374:	90 e0       	ldi	r25, 0x00	; 0
    1376:	66 1f       	adc	r22, r22
    1378:	66 27       	eor	r22, r22
    137a:	66 1f       	adc	r22, r22
    137c:	61 83       	std	Z+1, r22	; 0x01
    137e:	00 97       	sbiw	r24, 0x00	; 0
    1380:	39 f5       	brne	.+78     	; 0x13d0 <__unpack_f+0x88>
    1382:	21 15       	cp	r18, r1
    1384:	31 05       	cpc	r19, r1
    1386:	41 05       	cpc	r20, r1
    1388:	51 05       	cpc	r21, r1
    138a:	11 f4       	brne	.+4      	; 0x1390 <__unpack_f+0x48>
    138c:	82 e0       	ldi	r24, 0x02	; 2
    138e:	29 c0       	rjmp	.+82     	; 0x13e2 <__unpack_f+0x9a>
    1390:	82 e8       	ldi	r24, 0x82	; 130
    1392:	9f ef       	ldi	r25, 0xFF	; 255
    1394:	93 83       	std	Z+3, r25	; 0x03
    1396:	82 83       	std	Z+2, r24	; 0x02
    1398:	67 e0       	ldi	r22, 0x07	; 7
    139a:	22 0f       	add	r18, r18
    139c:	33 1f       	adc	r19, r19
    139e:	44 1f       	adc	r20, r20
    13a0:	55 1f       	adc	r21, r21
    13a2:	6a 95       	dec	r22
    13a4:	d1 f7       	brne	.-12     	; 0x139a <__unpack_f+0x52>
    13a6:	83 e0       	ldi	r24, 0x03	; 3
    13a8:	80 83       	st	Z, r24
    13aa:	09 c0       	rjmp	.+18     	; 0x13be <__unpack_f+0x76>
    13ac:	22 0f       	add	r18, r18
    13ae:	33 1f       	adc	r19, r19
    13b0:	44 1f       	adc	r20, r20
    13b2:	55 1f       	adc	r21, r21
    13b4:	82 81       	ldd	r24, Z+2	; 0x02
    13b6:	93 81       	ldd	r25, Z+3	; 0x03
    13b8:	01 97       	sbiw	r24, 0x01	; 1
    13ba:	93 83       	std	Z+3, r25	; 0x03
    13bc:	82 83       	std	Z+2, r24	; 0x02
    13be:	20 30       	cpi	r18, 0x00	; 0
    13c0:	80 e0       	ldi	r24, 0x00	; 0
    13c2:	38 07       	cpc	r19, r24
    13c4:	80 e0       	ldi	r24, 0x00	; 0
    13c6:	48 07       	cpc	r20, r24
    13c8:	80 e4       	ldi	r24, 0x40	; 64
    13ca:	58 07       	cpc	r21, r24
    13cc:	78 f3       	brcs	.-34     	; 0x13ac <__unpack_f+0x64>
    13ce:	20 c0       	rjmp	.+64     	; 0x1410 <__unpack_f+0xc8>
    13d0:	8f 3f       	cpi	r24, 0xFF	; 255
    13d2:	91 05       	cpc	r25, r1
    13d4:	79 f4       	brne	.+30     	; 0x13f4 <__unpack_f+0xac>
    13d6:	21 15       	cp	r18, r1
    13d8:	31 05       	cpc	r19, r1
    13da:	41 05       	cpc	r20, r1
    13dc:	51 05       	cpc	r21, r1
    13de:	19 f4       	brne	.+6      	; 0x13e6 <__unpack_f+0x9e>
    13e0:	84 e0       	ldi	r24, 0x04	; 4
    13e2:	80 83       	st	Z, r24
    13e4:	08 95       	ret
    13e6:	44 ff       	sbrs	r20, 4
    13e8:	03 c0       	rjmp	.+6      	; 0x13f0 <__unpack_f+0xa8>
    13ea:	81 e0       	ldi	r24, 0x01	; 1
    13ec:	80 83       	st	Z, r24
    13ee:	10 c0       	rjmp	.+32     	; 0x1410 <__unpack_f+0xc8>
    13f0:	10 82       	st	Z, r1
    13f2:	0e c0       	rjmp	.+28     	; 0x1410 <__unpack_f+0xc8>
    13f4:	8f 57       	subi	r24, 0x7F	; 127
    13f6:	90 40       	sbci	r25, 0x00	; 0
    13f8:	93 83       	std	Z+3, r25	; 0x03
    13fa:	82 83       	std	Z+2, r24	; 0x02
    13fc:	83 e0       	ldi	r24, 0x03	; 3
    13fe:	80 83       	st	Z, r24
    1400:	87 e0       	ldi	r24, 0x07	; 7
    1402:	22 0f       	add	r18, r18
    1404:	33 1f       	adc	r19, r19
    1406:	44 1f       	adc	r20, r20
    1408:	55 1f       	adc	r21, r21
    140a:	8a 95       	dec	r24
    140c:	d1 f7       	brne	.-12     	; 0x1402 <__unpack_f+0xba>
    140e:	50 64       	ori	r21, 0x40	; 64
    1410:	24 83       	std	Z+4, r18	; 0x04
    1412:	35 83       	std	Z+5, r19	; 0x05
    1414:	46 83       	std	Z+6, r20	; 0x06
    1416:	57 83       	std	Z+7, r21	; 0x07
    1418:	08 95       	ret

0000141a <__fpcmp_parts_f>:
    141a:	fc 01       	movw	r30, r24
    141c:	db 01       	movw	r26, r22
    141e:	90 81       	ld	r25, Z
    1420:	92 30       	cpi	r25, 0x02	; 2
    1422:	08 f4       	brcc	.+2      	; 0x1426 <__fpcmp_parts_f+0xc>
    1424:	49 c0       	rjmp	.+146    	; 0x14b8 <__fpcmp_parts_f+0x9e>
    1426:	8c 91       	ld	r24, X
    1428:	82 30       	cpi	r24, 0x02	; 2
    142a:	08 f4       	brcc	.+2      	; 0x142e <__fpcmp_parts_f+0x14>
    142c:	45 c0       	rjmp	.+138    	; 0x14b8 <__fpcmp_parts_f+0x9e>
    142e:	94 30       	cpi	r25, 0x04	; 4
    1430:	51 f4       	brne	.+20     	; 0x1446 <__fpcmp_parts_f+0x2c>
    1432:	61 81       	ldd	r22, Z+1	; 0x01
    1434:	84 30       	cpi	r24, 0x04	; 4
    1436:	b1 f5       	brne	.+108    	; 0x14a4 <__fpcmp_parts_f+0x8a>
    1438:	11 96       	adiw	r26, 0x01	; 1
    143a:	2c 91       	ld	r18, X
    143c:	11 97       	sbiw	r26, 0x01	; 1
    143e:	30 e0       	ldi	r19, 0x00	; 0
    1440:	26 1b       	sub	r18, r22
    1442:	31 09       	sbc	r19, r1
    1444:	41 c0       	rjmp	.+130    	; 0x14c8 <__fpcmp_parts_f+0xae>
    1446:	84 30       	cpi	r24, 0x04	; 4
    1448:	21 f0       	breq	.+8      	; 0x1452 <__fpcmp_parts_f+0x38>
    144a:	92 30       	cpi	r25, 0x02	; 2
    144c:	41 f4       	brne	.+16     	; 0x145e <__fpcmp_parts_f+0x44>
    144e:	82 30       	cpi	r24, 0x02	; 2
    1450:	b1 f1       	breq	.+108    	; 0x14be <__fpcmp_parts_f+0xa4>
    1452:	11 96       	adiw	r26, 0x01	; 1
    1454:	8c 91       	ld	r24, X
    1456:	11 97       	sbiw	r26, 0x01	; 1
    1458:	88 23       	and	r24, r24
    145a:	a1 f1       	breq	.+104    	; 0x14c4 <__fpcmp_parts_f+0xaa>
    145c:	2d c0       	rjmp	.+90     	; 0x14b8 <__fpcmp_parts_f+0x9e>
    145e:	61 81       	ldd	r22, Z+1	; 0x01
    1460:	82 30       	cpi	r24, 0x02	; 2
    1462:	01 f1       	breq	.+64     	; 0x14a4 <__fpcmp_parts_f+0x8a>
    1464:	11 96       	adiw	r26, 0x01	; 1
    1466:	8c 91       	ld	r24, X
    1468:	11 97       	sbiw	r26, 0x01	; 1
    146a:	68 17       	cp	r22, r24
    146c:	d9 f4       	brne	.+54     	; 0x14a4 <__fpcmp_parts_f+0x8a>
    146e:	22 81       	ldd	r18, Z+2	; 0x02
    1470:	33 81       	ldd	r19, Z+3	; 0x03
    1472:	12 96       	adiw	r26, 0x02	; 2
    1474:	8d 91       	ld	r24, X+
    1476:	9c 91       	ld	r25, X
    1478:	13 97       	sbiw	r26, 0x03	; 3
    147a:	82 17       	cp	r24, r18
    147c:	93 07       	cpc	r25, r19
    147e:	94 f0       	brlt	.+36     	; 0x14a4 <__fpcmp_parts_f+0x8a>
    1480:	28 17       	cp	r18, r24
    1482:	39 07       	cpc	r19, r25
    1484:	bc f0       	brlt	.+46     	; 0x14b4 <__fpcmp_parts_f+0x9a>
    1486:	24 81       	ldd	r18, Z+4	; 0x04
    1488:	35 81       	ldd	r19, Z+5	; 0x05
    148a:	46 81       	ldd	r20, Z+6	; 0x06
    148c:	57 81       	ldd	r21, Z+7	; 0x07
    148e:	14 96       	adiw	r26, 0x04	; 4
    1490:	8d 91       	ld	r24, X+
    1492:	9d 91       	ld	r25, X+
    1494:	0d 90       	ld	r0, X+
    1496:	bc 91       	ld	r27, X
    1498:	a0 2d       	mov	r26, r0
    149a:	82 17       	cp	r24, r18
    149c:	93 07       	cpc	r25, r19
    149e:	a4 07       	cpc	r26, r20
    14a0:	b5 07       	cpc	r27, r21
    14a2:	18 f4       	brcc	.+6      	; 0x14aa <__fpcmp_parts_f+0x90>
    14a4:	66 23       	and	r22, r22
    14a6:	41 f0       	breq	.+16     	; 0x14b8 <__fpcmp_parts_f+0x9e>
    14a8:	0d c0       	rjmp	.+26     	; 0x14c4 <__fpcmp_parts_f+0xaa>
    14aa:	28 17       	cp	r18, r24
    14ac:	39 07       	cpc	r19, r25
    14ae:	4a 07       	cpc	r20, r26
    14b0:	5b 07       	cpc	r21, r27
    14b2:	28 f4       	brcc	.+10     	; 0x14be <__fpcmp_parts_f+0xa4>
    14b4:	66 23       	and	r22, r22
    14b6:	31 f0       	breq	.+12     	; 0x14c4 <__fpcmp_parts_f+0xaa>
    14b8:	21 e0       	ldi	r18, 0x01	; 1
    14ba:	30 e0       	ldi	r19, 0x00	; 0
    14bc:	05 c0       	rjmp	.+10     	; 0x14c8 <__fpcmp_parts_f+0xae>
    14be:	20 e0       	ldi	r18, 0x00	; 0
    14c0:	30 e0       	ldi	r19, 0x00	; 0
    14c2:	02 c0       	rjmp	.+4      	; 0x14c8 <__fpcmp_parts_f+0xae>
    14c4:	2f ef       	ldi	r18, 0xFF	; 255
    14c6:	3f ef       	ldi	r19, 0xFF	; 255
    14c8:	c9 01       	movw	r24, r18
    14ca:	08 95       	ret

000014cc <__prologue_saves__>:
    14cc:	2f 92       	push	r2
    14ce:	3f 92       	push	r3
    14d0:	4f 92       	push	r4
    14d2:	5f 92       	push	r5
    14d4:	6f 92       	push	r6
    14d6:	7f 92       	push	r7
    14d8:	8f 92       	push	r8
    14da:	9f 92       	push	r9
    14dc:	af 92       	push	r10
    14de:	bf 92       	push	r11
    14e0:	cf 92       	push	r12
    14e2:	df 92       	push	r13
    14e4:	ef 92       	push	r14
    14e6:	ff 92       	push	r15
    14e8:	0f 93       	push	r16
    14ea:	1f 93       	push	r17
    14ec:	cf 93       	push	r28
    14ee:	df 93       	push	r29
    14f0:	cd b7       	in	r28, 0x3d	; 61
    14f2:	de b7       	in	r29, 0x3e	; 62
    14f4:	ca 1b       	sub	r28, r26
    14f6:	db 0b       	sbc	r29, r27
    14f8:	0f b6       	in	r0, 0x3f	; 63
    14fa:	f8 94       	cli
    14fc:	de bf       	out	0x3e, r29	; 62
    14fe:	0f be       	out	0x3f, r0	; 63
    1500:	cd bf       	out	0x3d, r28	; 61
    1502:	09 94       	ijmp

00001504 <__epilogue_restores__>:
    1504:	2a 88       	ldd	r2, Y+18	; 0x12
    1506:	39 88       	ldd	r3, Y+17	; 0x11
    1508:	48 88       	ldd	r4, Y+16	; 0x10
    150a:	5f 84       	ldd	r5, Y+15	; 0x0f
    150c:	6e 84       	ldd	r6, Y+14	; 0x0e
    150e:	7d 84       	ldd	r7, Y+13	; 0x0d
    1510:	8c 84       	ldd	r8, Y+12	; 0x0c
    1512:	9b 84       	ldd	r9, Y+11	; 0x0b
    1514:	aa 84       	ldd	r10, Y+10	; 0x0a
    1516:	b9 84       	ldd	r11, Y+9	; 0x09
    1518:	c8 84       	ldd	r12, Y+8	; 0x08
    151a:	df 80       	ldd	r13, Y+7	; 0x07
    151c:	ee 80       	ldd	r14, Y+6	; 0x06
    151e:	fd 80       	ldd	r15, Y+5	; 0x05
    1520:	0c 81       	ldd	r16, Y+4	; 0x04
    1522:	1b 81       	ldd	r17, Y+3	; 0x03
    1524:	aa 81       	ldd	r26, Y+2	; 0x02
    1526:	b9 81       	ldd	r27, Y+1	; 0x01
    1528:	ce 0f       	add	r28, r30
    152a:	d1 1d       	adc	r29, r1
    152c:	0f b6       	in	r0, 0x3f	; 63
    152e:	f8 94       	cli
    1530:	de bf       	out	0x3e, r29	; 62
    1532:	0f be       	out	0x3f, r0	; 63
    1534:	cd bf       	out	0x3d, r28	; 61
    1536:	ed 01       	movw	r28, r26
    1538:	08 95       	ret

0000153a <_exit>:
    153a:	f8 94       	cli

0000153c <__stop_program>:
    153c:	ff cf       	rjmp	.-2      	; 0x153c <__stop_program>
