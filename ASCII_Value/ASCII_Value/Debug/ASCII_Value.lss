
ASCII_Value.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001712  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000014  00800060  00001712  00001786  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000006cc  00000000  00000000  0000179c  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000085  00000000  00000000  00001e68  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000160  00000000  00000000  00001eed  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 000001c4  00000000  00000000  0000204d  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000213d  00000000  00000000  00002211  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000edf  00000000  00000000  0000434e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001737  00000000  00000000  0000522d  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001c0  00000000  00000000  00006964  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003c8  00000000  00000000  00006b24  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000a79  00000000  00000000  00006eec  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_pubtypes 00000588  00000000  00000000  00007965  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000030  00000000  00000000  00007eed  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d4 e0       	ldi	r29, 0x04	; 4
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e2 e1       	ldi	r30, 0x12	; 18
      68:	f7 e1       	ldi	r31, 0x17	; 23
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	a4 37       	cpi	r26, 0x74	; 116
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
      76:	0e 94 1b 05 	call	0xa36	; 0xa36 <main>
      7a:	0c 94 87 0b 	jmp	0x170e	; 0x170e <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <lcd_command>:
void lcd_command(unsigned char cmd)
{
      82:	0f 93       	push	r16
      84:	1f 93       	push	r17
      86:	df 93       	push	r29
      88:	cf 93       	push	r28
      8a:	cd b7       	in	r28, 0x3d	; 61
      8c:	de b7       	in	r29, 0x3e	; 62
      8e:	e9 97       	sbiw	r28, 0x39	; 57
      90:	0f b6       	in	r0, 0x3f	; 63
      92:	f8 94       	cli
      94:	de bf       	out	0x3e, r29	; 62
      96:	0f be       	out	0x3f, r0	; 63
      98:	cd bf       	out	0x3d, r28	; 61
      9a:	89 af       	std	Y+57, r24	; 0x39
	lcd=cmd&0xF0;
      9c:	82 e3       	ldi	r24, 0x32	; 50
      9e:	90 e0       	ldi	r25, 0x00	; 0
      a0:	29 ad       	ldd	r18, Y+57	; 0x39
      a2:	20 7f       	andi	r18, 0xF0	; 240
      a4:	fc 01       	movw	r30, r24
      a6:	20 83       	st	Z, r18
	lcd|=0x04;
      a8:	82 e3       	ldi	r24, 0x32	; 50
      aa:	90 e0       	ldi	r25, 0x00	; 0
      ac:	22 e3       	ldi	r18, 0x32	; 50
      ae:	30 e0       	ldi	r19, 0x00	; 0
      b0:	f9 01       	movw	r30, r18
      b2:	20 81       	ld	r18, Z
      b4:	24 60       	ori	r18, 0x04	; 4
      b6:	fc 01       	movw	r30, r24
      b8:	20 83       	st	Z, r18
      ba:	80 e0       	ldi	r24, 0x00	; 0
      bc:	90 e0       	ldi	r25, 0x00	; 0
      be:	a0 e8       	ldi	r26, 0x80	; 128
      c0:	bf e3       	ldi	r27, 0x3F	; 63
      c2:	89 83       	std	Y+1, r24	; 0x01
      c4:	9a 83       	std	Y+2, r25	; 0x02
      c6:	ab 83       	std	Y+3, r26	; 0x03
      c8:	bc 83       	std	Y+4, r27	; 0x04
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
      ca:	69 81       	ldd	r22, Y+1	; 0x01
      cc:	7a 81       	ldd	r23, Y+2	; 0x02
      ce:	8b 81       	ldd	r24, Y+3	; 0x03
      d0:	9c 81       	ldd	r25, Y+4	; 0x04
      d2:	20 e0       	ldi	r18, 0x00	; 0
      d4:	30 e0       	ldi	r19, 0x00	; 0
      d6:	4a e7       	ldi	r20, 0x7A	; 122
      d8:	55 e4       	ldi	r21, 0x45	; 69
      da:	0e 94 e4 07 	call	0xfc8	; 0xfc8 <__mulsf3>
      de:	dc 01       	movw	r26, r24
      e0:	cb 01       	movw	r24, r22
      e2:	8d 83       	std	Y+5, r24	; 0x05
      e4:	9e 83       	std	Y+6, r25	; 0x06
      e6:	af 83       	std	Y+7, r26	; 0x07
      e8:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
      ea:	11 e0       	ldi	r17, 0x01	; 1
      ec:	6d 81       	ldd	r22, Y+5	; 0x05
      ee:	7e 81       	ldd	r23, Y+6	; 0x06
      f0:	8f 81       	ldd	r24, Y+7	; 0x07
      f2:	98 85       	ldd	r25, Y+8	; 0x08
      f4:	20 e0       	ldi	r18, 0x00	; 0
      f6:	30 e0       	ldi	r19, 0x00	; 0
      f8:	40 e8       	ldi	r20, 0x80	; 128
      fa:	5f e3       	ldi	r21, 0x3F	; 63
      fc:	0e 94 3e 09 	call	0x127c	; 0x127c <__ltsf2>
     100:	88 23       	and	r24, r24
     102:	0c f0       	brlt	.+2      	; 0x106 <lcd_command+0x84>
     104:	10 e0       	ldi	r17, 0x00	; 0
     106:	11 23       	and	r17, r17
     108:	29 f0       	breq	.+10     	; 0x114 <lcd_command+0x92>
		__ticks = 1;
     10a:	81 e0       	ldi	r24, 0x01	; 1
     10c:	90 e0       	ldi	r25, 0x00	; 0
     10e:	9a 87       	std	Y+10, r25	; 0x0a
     110:	89 87       	std	Y+9, r24	; 0x09
     112:	46 c0       	rjmp	.+140    	; 0x1a0 <lcd_command+0x11e>
	else if (__tmp > 65535)
     114:	11 e0       	ldi	r17, 0x01	; 1
     116:	6d 81       	ldd	r22, Y+5	; 0x05
     118:	7e 81       	ldd	r23, Y+6	; 0x06
     11a:	8f 81       	ldd	r24, Y+7	; 0x07
     11c:	98 85       	ldd	r25, Y+8	; 0x08
     11e:	20 e0       	ldi	r18, 0x00	; 0
     120:	3f ef       	ldi	r19, 0xFF	; 255
     122:	4f e7       	ldi	r20, 0x7F	; 127
     124:	57 e4       	ldi	r21, 0x47	; 71
     126:	0e 94 de 08 	call	0x11bc	; 0x11bc <__gtsf2>
     12a:	18 16       	cp	r1, r24
     12c:	0c f0       	brlt	.+2      	; 0x130 <lcd_command+0xae>
     12e:	10 e0       	ldi	r17, 0x00	; 0
     130:	11 23       	and	r17, r17
     132:	61 f1       	breq	.+88     	; 0x18c <lcd_command+0x10a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     134:	69 81       	ldd	r22, Y+1	; 0x01
     136:	7a 81       	ldd	r23, Y+2	; 0x02
     138:	8b 81       	ldd	r24, Y+3	; 0x03
     13a:	9c 81       	ldd	r25, Y+4	; 0x04
     13c:	20 e0       	ldi	r18, 0x00	; 0
     13e:	30 e0       	ldi	r19, 0x00	; 0
     140:	40 e2       	ldi	r20, 0x20	; 32
     142:	51 e4       	ldi	r21, 0x41	; 65
     144:	0e 94 e4 07 	call	0xfc8	; 0xfc8 <__mulsf3>
     148:	dc 01       	movw	r26, r24
     14a:	cb 01       	movw	r24, r22
     14c:	bc 01       	movw	r22, r24
     14e:	cd 01       	movw	r24, r26
     150:	0e 94 10 06 	call	0xc20	; 0xc20 <__fixunssfsi>
     154:	dc 01       	movw	r26, r24
     156:	cb 01       	movw	r24, r22
     158:	9a 87       	std	Y+10, r25	; 0x0a
     15a:	89 87       	std	Y+9, r24	; 0x09
     15c:	12 c0       	rjmp	.+36     	; 0x182 <lcd_command+0x100>
     15e:	80 e9       	ldi	r24, 0x90	; 144
     160:	91 e0       	ldi	r25, 0x01	; 1
     162:	9c 87       	std	Y+12, r25	; 0x0c
     164:	8b 87       	std	Y+11, r24	; 0x0b
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     166:	8b 85       	ldd	r24, Y+11	; 0x0b
     168:	9c 85       	ldd	r25, Y+12	; 0x0c
     16a:	8c 01       	movw	r16, r24
     16c:	c8 01       	movw	r24, r16
     16e:	01 97       	sbiw	r24, 0x01	; 1
     170:	f1 f7       	brne	.-4      	; 0x16e <lcd_command+0xec>
     172:	8c 01       	movw	r16, r24
     174:	1c 87       	std	Y+12, r17	; 0x0c
     176:	0b 87       	std	Y+11, r16	; 0x0b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     178:	89 85       	ldd	r24, Y+9	; 0x09
     17a:	9a 85       	ldd	r25, Y+10	; 0x0a
     17c:	01 97       	sbiw	r24, 0x01	; 1
     17e:	9a 87       	std	Y+10, r25	; 0x0a
     180:	89 87       	std	Y+9, r24	; 0x09
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     182:	89 85       	ldd	r24, Y+9	; 0x09
     184:	9a 85       	ldd	r25, Y+10	; 0x0a
     186:	00 97       	sbiw	r24, 0x00	; 0
     188:	51 f7       	brne	.-44     	; 0x15e <lcd_command+0xdc>
     18a:	17 c0       	rjmp	.+46     	; 0x1ba <lcd_command+0x138>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     18c:	6d 81       	ldd	r22, Y+5	; 0x05
     18e:	7e 81       	ldd	r23, Y+6	; 0x06
     190:	8f 81       	ldd	r24, Y+7	; 0x07
     192:	98 85       	ldd	r25, Y+8	; 0x08
     194:	0e 94 10 06 	call	0xc20	; 0xc20 <__fixunssfsi>
     198:	dc 01       	movw	r26, r24
     19a:	cb 01       	movw	r24, r22
     19c:	9a 87       	std	Y+10, r25	; 0x0a
     19e:	89 87       	std	Y+9, r24	; 0x09
     1a0:	89 85       	ldd	r24, Y+9	; 0x09
     1a2:	9a 85       	ldd	r25, Y+10	; 0x0a
     1a4:	9e 87       	std	Y+14, r25	; 0x0e
     1a6:	8d 87       	std	Y+13, r24	; 0x0d
     1a8:	8d 85       	ldd	r24, Y+13	; 0x0d
     1aa:	9e 85       	ldd	r25, Y+14	; 0x0e
     1ac:	8c 01       	movw	r16, r24
     1ae:	f8 01       	movw	r30, r16
     1b0:	31 97       	sbiw	r30, 0x01	; 1
     1b2:	f1 f7       	brne	.-4      	; 0x1b0 <lcd_command+0x12e>
     1b4:	8f 01       	movw	r16, r30
     1b6:	1e 87       	std	Y+14, r17	; 0x0e
     1b8:	0d 87       	std	Y+13, r16	; 0x0d
	_delay_ms(1);
	lcd&=0xF0;
     1ba:	82 e3       	ldi	r24, 0x32	; 50
     1bc:	90 e0       	ldi	r25, 0x00	; 0
     1be:	22 e3       	ldi	r18, 0x32	; 50
     1c0:	30 e0       	ldi	r19, 0x00	; 0
     1c2:	f9 01       	movw	r30, r18
     1c4:	20 81       	ld	r18, Z
     1c6:	20 7f       	andi	r18, 0xF0	; 240
     1c8:	fc 01       	movw	r30, r24
     1ca:	20 83       	st	Z, r18
     1cc:	80 e0       	ldi	r24, 0x00	; 0
     1ce:	90 e0       	ldi	r25, 0x00	; 0
     1d0:	a0 e8       	ldi	r26, 0x80	; 128
     1d2:	bf e3       	ldi	r27, 0x3F	; 63
     1d4:	8f 87       	std	Y+15, r24	; 0x0f
     1d6:	98 8b       	std	Y+16, r25	; 0x10
     1d8:	a9 8b       	std	Y+17, r26	; 0x11
     1da:	ba 8b       	std	Y+18, r27	; 0x12
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     1dc:	6f 85       	ldd	r22, Y+15	; 0x0f
     1de:	78 89       	ldd	r23, Y+16	; 0x10
     1e0:	89 89       	ldd	r24, Y+17	; 0x11
     1e2:	9a 89       	ldd	r25, Y+18	; 0x12
     1e4:	20 e0       	ldi	r18, 0x00	; 0
     1e6:	30 e0       	ldi	r19, 0x00	; 0
     1e8:	4a e7       	ldi	r20, 0x7A	; 122
     1ea:	55 e4       	ldi	r21, 0x45	; 69
     1ec:	0e 94 e4 07 	call	0xfc8	; 0xfc8 <__mulsf3>
     1f0:	dc 01       	movw	r26, r24
     1f2:	cb 01       	movw	r24, r22
     1f4:	8b 8b       	std	Y+19, r24	; 0x13
     1f6:	9c 8b       	std	Y+20, r25	; 0x14
     1f8:	ad 8b       	std	Y+21, r26	; 0x15
     1fa:	be 8b       	std	Y+22, r27	; 0x16
	if (__tmp < 1.0)
     1fc:	11 e0       	ldi	r17, 0x01	; 1
     1fe:	6b 89       	ldd	r22, Y+19	; 0x13
     200:	7c 89       	ldd	r23, Y+20	; 0x14
     202:	8d 89       	ldd	r24, Y+21	; 0x15
     204:	9e 89       	ldd	r25, Y+22	; 0x16
     206:	20 e0       	ldi	r18, 0x00	; 0
     208:	30 e0       	ldi	r19, 0x00	; 0
     20a:	40 e8       	ldi	r20, 0x80	; 128
     20c:	5f e3       	ldi	r21, 0x3F	; 63
     20e:	0e 94 3e 09 	call	0x127c	; 0x127c <__ltsf2>
     212:	88 23       	and	r24, r24
     214:	0c f0       	brlt	.+2      	; 0x218 <lcd_command+0x196>
     216:	10 e0       	ldi	r17, 0x00	; 0
     218:	11 23       	and	r17, r17
     21a:	29 f0       	breq	.+10     	; 0x226 <lcd_command+0x1a4>
		__ticks = 1;
     21c:	81 e0       	ldi	r24, 0x01	; 1
     21e:	90 e0       	ldi	r25, 0x00	; 0
     220:	98 8f       	std	Y+24, r25	; 0x18
     222:	8f 8b       	std	Y+23, r24	; 0x17
     224:	46 c0       	rjmp	.+140    	; 0x2b2 <lcd_command+0x230>
	else if (__tmp > 65535)
     226:	11 e0       	ldi	r17, 0x01	; 1
     228:	6b 89       	ldd	r22, Y+19	; 0x13
     22a:	7c 89       	ldd	r23, Y+20	; 0x14
     22c:	8d 89       	ldd	r24, Y+21	; 0x15
     22e:	9e 89       	ldd	r25, Y+22	; 0x16
     230:	20 e0       	ldi	r18, 0x00	; 0
     232:	3f ef       	ldi	r19, 0xFF	; 255
     234:	4f e7       	ldi	r20, 0x7F	; 127
     236:	57 e4       	ldi	r21, 0x47	; 71
     238:	0e 94 de 08 	call	0x11bc	; 0x11bc <__gtsf2>
     23c:	18 16       	cp	r1, r24
     23e:	0c f0       	brlt	.+2      	; 0x242 <lcd_command+0x1c0>
     240:	10 e0       	ldi	r17, 0x00	; 0
     242:	11 23       	and	r17, r17
     244:	61 f1       	breq	.+88     	; 0x29e <lcd_command+0x21c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     246:	6f 85       	ldd	r22, Y+15	; 0x0f
     248:	78 89       	ldd	r23, Y+16	; 0x10
     24a:	89 89       	ldd	r24, Y+17	; 0x11
     24c:	9a 89       	ldd	r25, Y+18	; 0x12
     24e:	20 e0       	ldi	r18, 0x00	; 0
     250:	30 e0       	ldi	r19, 0x00	; 0
     252:	40 e2       	ldi	r20, 0x20	; 32
     254:	51 e4       	ldi	r21, 0x41	; 65
     256:	0e 94 e4 07 	call	0xfc8	; 0xfc8 <__mulsf3>
     25a:	dc 01       	movw	r26, r24
     25c:	cb 01       	movw	r24, r22
     25e:	bc 01       	movw	r22, r24
     260:	cd 01       	movw	r24, r26
     262:	0e 94 10 06 	call	0xc20	; 0xc20 <__fixunssfsi>
     266:	dc 01       	movw	r26, r24
     268:	cb 01       	movw	r24, r22
     26a:	98 8f       	std	Y+24, r25	; 0x18
     26c:	8f 8b       	std	Y+23, r24	; 0x17
     26e:	12 c0       	rjmp	.+36     	; 0x294 <lcd_command+0x212>
     270:	80 e9       	ldi	r24, 0x90	; 144
     272:	91 e0       	ldi	r25, 0x01	; 1
     274:	9a 8f       	std	Y+26, r25	; 0x1a
     276:	89 8f       	std	Y+25, r24	; 0x19
     278:	89 8d       	ldd	r24, Y+25	; 0x19
     27a:	9a 8d       	ldd	r25, Y+26	; 0x1a
     27c:	8c 01       	movw	r16, r24
     27e:	c8 01       	movw	r24, r16
     280:	01 97       	sbiw	r24, 0x01	; 1
     282:	f1 f7       	brne	.-4      	; 0x280 <lcd_command+0x1fe>
     284:	8c 01       	movw	r16, r24
     286:	1a 8f       	std	Y+26, r17	; 0x1a
     288:	09 8f       	std	Y+25, r16	; 0x19
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     28a:	8f 89       	ldd	r24, Y+23	; 0x17
     28c:	98 8d       	ldd	r25, Y+24	; 0x18
     28e:	01 97       	sbiw	r24, 0x01	; 1
     290:	98 8f       	std	Y+24, r25	; 0x18
     292:	8f 8b       	std	Y+23, r24	; 0x17
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     294:	8f 89       	ldd	r24, Y+23	; 0x17
     296:	98 8d       	ldd	r25, Y+24	; 0x18
     298:	00 97       	sbiw	r24, 0x00	; 0
     29a:	51 f7       	brne	.-44     	; 0x270 <lcd_command+0x1ee>
     29c:	17 c0       	rjmp	.+46     	; 0x2cc <lcd_command+0x24a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     29e:	6b 89       	ldd	r22, Y+19	; 0x13
     2a0:	7c 89       	ldd	r23, Y+20	; 0x14
     2a2:	8d 89       	ldd	r24, Y+21	; 0x15
     2a4:	9e 89       	ldd	r25, Y+22	; 0x16
     2a6:	0e 94 10 06 	call	0xc20	; 0xc20 <__fixunssfsi>
     2aa:	dc 01       	movw	r26, r24
     2ac:	cb 01       	movw	r24, r22
     2ae:	98 8f       	std	Y+24, r25	; 0x18
     2b0:	8f 8b       	std	Y+23, r24	; 0x17
     2b2:	8f 89       	ldd	r24, Y+23	; 0x17
     2b4:	98 8d       	ldd	r25, Y+24	; 0x18
     2b6:	9c 8f       	std	Y+28, r25	; 0x1c
     2b8:	8b 8f       	std	Y+27, r24	; 0x1b
     2ba:	8b 8d       	ldd	r24, Y+27	; 0x1b
     2bc:	9c 8d       	ldd	r25, Y+28	; 0x1c
     2be:	8c 01       	movw	r16, r24
     2c0:	f8 01       	movw	r30, r16
     2c2:	31 97       	sbiw	r30, 0x01	; 1
     2c4:	f1 f7       	brne	.-4      	; 0x2c2 <lcd_command+0x240>
     2c6:	8f 01       	movw	r16, r30
     2c8:	1c 8f       	std	Y+28, r17	; 0x1c
     2ca:	0b 8f       	std	Y+27, r16	; 0x1b
	_delay_ms(1);
	lcd=(cmd<<4)&0xF0;
     2cc:	82 e3       	ldi	r24, 0x32	; 50
     2ce:	90 e0       	ldi	r25, 0x00	; 0
     2d0:	29 ad       	ldd	r18, Y+57	; 0x39
     2d2:	22 2f       	mov	r18, r18
     2d4:	30 e0       	ldi	r19, 0x00	; 0
     2d6:	22 95       	swap	r18
     2d8:	32 95       	swap	r19
     2da:	30 7f       	andi	r19, 0xF0	; 240
     2dc:	32 27       	eor	r19, r18
     2de:	20 7f       	andi	r18, 0xF0	; 240
     2e0:	32 27       	eor	r19, r18
     2e2:	fc 01       	movw	r30, r24
     2e4:	20 83       	st	Z, r18
	lcd|=0x04;
     2e6:	82 e3       	ldi	r24, 0x32	; 50
     2e8:	90 e0       	ldi	r25, 0x00	; 0
     2ea:	22 e3       	ldi	r18, 0x32	; 50
     2ec:	30 e0       	ldi	r19, 0x00	; 0
     2ee:	f9 01       	movw	r30, r18
     2f0:	20 81       	ld	r18, Z
     2f2:	24 60       	ori	r18, 0x04	; 4
     2f4:	fc 01       	movw	r30, r24
     2f6:	20 83       	st	Z, r18
     2f8:	80 e0       	ldi	r24, 0x00	; 0
     2fa:	90 e0       	ldi	r25, 0x00	; 0
     2fc:	a0 e8       	ldi	r26, 0x80	; 128
     2fe:	bf e3       	ldi	r27, 0x3F	; 63
     300:	8d 8f       	std	Y+29, r24	; 0x1d
     302:	9e 8f       	std	Y+30, r25	; 0x1e
     304:	af 8f       	std	Y+31, r26	; 0x1f
     306:	b8 a3       	std	Y+32, r27	; 0x20
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     308:	6d 8d       	ldd	r22, Y+29	; 0x1d
     30a:	7e 8d       	ldd	r23, Y+30	; 0x1e
     30c:	8f 8d       	ldd	r24, Y+31	; 0x1f
     30e:	98 a1       	ldd	r25, Y+32	; 0x20
     310:	20 e0       	ldi	r18, 0x00	; 0
     312:	30 e0       	ldi	r19, 0x00	; 0
     314:	4a e7       	ldi	r20, 0x7A	; 122
     316:	55 e4       	ldi	r21, 0x45	; 69
     318:	0e 94 e4 07 	call	0xfc8	; 0xfc8 <__mulsf3>
     31c:	dc 01       	movw	r26, r24
     31e:	cb 01       	movw	r24, r22
     320:	89 a3       	std	Y+33, r24	; 0x21
     322:	9a a3       	std	Y+34, r25	; 0x22
     324:	ab a3       	std	Y+35, r26	; 0x23
     326:	bc a3       	std	Y+36, r27	; 0x24
	if (__tmp < 1.0)
     328:	11 e0       	ldi	r17, 0x01	; 1
     32a:	69 a1       	ldd	r22, Y+33	; 0x21
     32c:	7a a1       	ldd	r23, Y+34	; 0x22
     32e:	8b a1       	ldd	r24, Y+35	; 0x23
     330:	9c a1       	ldd	r25, Y+36	; 0x24
     332:	20 e0       	ldi	r18, 0x00	; 0
     334:	30 e0       	ldi	r19, 0x00	; 0
     336:	40 e8       	ldi	r20, 0x80	; 128
     338:	5f e3       	ldi	r21, 0x3F	; 63
     33a:	0e 94 3e 09 	call	0x127c	; 0x127c <__ltsf2>
     33e:	88 23       	and	r24, r24
     340:	0c f0       	brlt	.+2      	; 0x344 <lcd_command+0x2c2>
     342:	10 e0       	ldi	r17, 0x00	; 0
     344:	11 23       	and	r17, r17
     346:	29 f0       	breq	.+10     	; 0x352 <lcd_command+0x2d0>
		__ticks = 1;
     348:	81 e0       	ldi	r24, 0x01	; 1
     34a:	90 e0       	ldi	r25, 0x00	; 0
     34c:	9e a3       	std	Y+38, r25	; 0x26
     34e:	8d a3       	std	Y+37, r24	; 0x25
     350:	46 c0       	rjmp	.+140    	; 0x3de <lcd_command+0x35c>
	else if (__tmp > 65535)
     352:	11 e0       	ldi	r17, 0x01	; 1
     354:	69 a1       	ldd	r22, Y+33	; 0x21
     356:	7a a1       	ldd	r23, Y+34	; 0x22
     358:	8b a1       	ldd	r24, Y+35	; 0x23
     35a:	9c a1       	ldd	r25, Y+36	; 0x24
     35c:	20 e0       	ldi	r18, 0x00	; 0
     35e:	3f ef       	ldi	r19, 0xFF	; 255
     360:	4f e7       	ldi	r20, 0x7F	; 127
     362:	57 e4       	ldi	r21, 0x47	; 71
     364:	0e 94 de 08 	call	0x11bc	; 0x11bc <__gtsf2>
     368:	18 16       	cp	r1, r24
     36a:	0c f0       	brlt	.+2      	; 0x36e <lcd_command+0x2ec>
     36c:	10 e0       	ldi	r17, 0x00	; 0
     36e:	11 23       	and	r17, r17
     370:	61 f1       	breq	.+88     	; 0x3ca <lcd_command+0x348>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     372:	6d 8d       	ldd	r22, Y+29	; 0x1d
     374:	7e 8d       	ldd	r23, Y+30	; 0x1e
     376:	8f 8d       	ldd	r24, Y+31	; 0x1f
     378:	98 a1       	ldd	r25, Y+32	; 0x20
     37a:	20 e0       	ldi	r18, 0x00	; 0
     37c:	30 e0       	ldi	r19, 0x00	; 0
     37e:	40 e2       	ldi	r20, 0x20	; 32
     380:	51 e4       	ldi	r21, 0x41	; 65
     382:	0e 94 e4 07 	call	0xfc8	; 0xfc8 <__mulsf3>
     386:	dc 01       	movw	r26, r24
     388:	cb 01       	movw	r24, r22
     38a:	bc 01       	movw	r22, r24
     38c:	cd 01       	movw	r24, r26
     38e:	0e 94 10 06 	call	0xc20	; 0xc20 <__fixunssfsi>
     392:	dc 01       	movw	r26, r24
     394:	cb 01       	movw	r24, r22
     396:	9e a3       	std	Y+38, r25	; 0x26
     398:	8d a3       	std	Y+37, r24	; 0x25
     39a:	12 c0       	rjmp	.+36     	; 0x3c0 <lcd_command+0x33e>
     39c:	80 e9       	ldi	r24, 0x90	; 144
     39e:	91 e0       	ldi	r25, 0x01	; 1
     3a0:	98 a7       	std	Y+40, r25	; 0x28
     3a2:	8f a3       	std	Y+39, r24	; 0x27
     3a4:	8f a1       	ldd	r24, Y+39	; 0x27
     3a6:	98 a5       	ldd	r25, Y+40	; 0x28
     3a8:	8c 01       	movw	r16, r24
     3aa:	c8 01       	movw	r24, r16
     3ac:	01 97       	sbiw	r24, 0x01	; 1
     3ae:	f1 f7       	brne	.-4      	; 0x3ac <lcd_command+0x32a>
     3b0:	8c 01       	movw	r16, r24
     3b2:	18 a7       	std	Y+40, r17	; 0x28
     3b4:	0f a3       	std	Y+39, r16	; 0x27
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     3b6:	8d a1       	ldd	r24, Y+37	; 0x25
     3b8:	9e a1       	ldd	r25, Y+38	; 0x26
     3ba:	01 97       	sbiw	r24, 0x01	; 1
     3bc:	9e a3       	std	Y+38, r25	; 0x26
     3be:	8d a3       	std	Y+37, r24	; 0x25
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     3c0:	8d a1       	ldd	r24, Y+37	; 0x25
     3c2:	9e a1       	ldd	r25, Y+38	; 0x26
     3c4:	00 97       	sbiw	r24, 0x00	; 0
     3c6:	51 f7       	brne	.-44     	; 0x39c <lcd_command+0x31a>
     3c8:	17 c0       	rjmp	.+46     	; 0x3f8 <lcd_command+0x376>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     3ca:	69 a1       	ldd	r22, Y+33	; 0x21
     3cc:	7a a1       	ldd	r23, Y+34	; 0x22
     3ce:	8b a1       	ldd	r24, Y+35	; 0x23
     3d0:	9c a1       	ldd	r25, Y+36	; 0x24
     3d2:	0e 94 10 06 	call	0xc20	; 0xc20 <__fixunssfsi>
     3d6:	dc 01       	movw	r26, r24
     3d8:	cb 01       	movw	r24, r22
     3da:	9e a3       	std	Y+38, r25	; 0x26
     3dc:	8d a3       	std	Y+37, r24	; 0x25
     3de:	8d a1       	ldd	r24, Y+37	; 0x25
     3e0:	9e a1       	ldd	r25, Y+38	; 0x26
     3e2:	9a a7       	std	Y+42, r25	; 0x2a
     3e4:	89 a7       	std	Y+41, r24	; 0x29
     3e6:	89 a5       	ldd	r24, Y+41	; 0x29
     3e8:	9a a5       	ldd	r25, Y+42	; 0x2a
     3ea:	8c 01       	movw	r16, r24
     3ec:	f8 01       	movw	r30, r16
     3ee:	31 97       	sbiw	r30, 0x01	; 1
     3f0:	f1 f7       	brne	.-4      	; 0x3ee <lcd_command+0x36c>
     3f2:	8f 01       	movw	r16, r30
     3f4:	1a a7       	std	Y+42, r17	; 0x2a
     3f6:	09 a7       	std	Y+41, r16	; 0x29
	_delay_ms(1);
	lcd&=0xF0;
     3f8:	82 e3       	ldi	r24, 0x32	; 50
     3fa:	90 e0       	ldi	r25, 0x00	; 0
     3fc:	22 e3       	ldi	r18, 0x32	; 50
     3fe:	30 e0       	ldi	r19, 0x00	; 0
     400:	f9 01       	movw	r30, r18
     402:	20 81       	ld	r18, Z
     404:	20 7f       	andi	r18, 0xF0	; 240
     406:	fc 01       	movw	r30, r24
     408:	20 83       	st	Z, r18
     40a:	80 e0       	ldi	r24, 0x00	; 0
     40c:	90 e0       	ldi	r25, 0x00	; 0
     40e:	a0 e8       	ldi	r26, 0x80	; 128
     410:	bf e3       	ldi	r27, 0x3F	; 63
     412:	8b a7       	std	Y+43, r24	; 0x2b
     414:	9c a7       	std	Y+44, r25	; 0x2c
     416:	ad a7       	std	Y+45, r26	; 0x2d
     418:	be a7       	std	Y+46, r27	; 0x2e
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     41a:	6b a5       	ldd	r22, Y+43	; 0x2b
     41c:	7c a5       	ldd	r23, Y+44	; 0x2c
     41e:	8d a5       	ldd	r24, Y+45	; 0x2d
     420:	9e a5       	ldd	r25, Y+46	; 0x2e
     422:	20 e0       	ldi	r18, 0x00	; 0
     424:	30 e0       	ldi	r19, 0x00	; 0
     426:	4a e7       	ldi	r20, 0x7A	; 122
     428:	55 e4       	ldi	r21, 0x45	; 69
     42a:	0e 94 e4 07 	call	0xfc8	; 0xfc8 <__mulsf3>
     42e:	dc 01       	movw	r26, r24
     430:	cb 01       	movw	r24, r22
     432:	8f a7       	std	Y+47, r24	; 0x2f
     434:	98 ab       	std	Y+48, r25	; 0x30
     436:	a9 ab       	std	Y+49, r26	; 0x31
     438:	ba ab       	std	Y+50, r27	; 0x32
	if (__tmp < 1.0)
     43a:	11 e0       	ldi	r17, 0x01	; 1
     43c:	6f a5       	ldd	r22, Y+47	; 0x2f
     43e:	78 a9       	ldd	r23, Y+48	; 0x30
     440:	89 a9       	ldd	r24, Y+49	; 0x31
     442:	9a a9       	ldd	r25, Y+50	; 0x32
     444:	20 e0       	ldi	r18, 0x00	; 0
     446:	30 e0       	ldi	r19, 0x00	; 0
     448:	40 e8       	ldi	r20, 0x80	; 128
     44a:	5f e3       	ldi	r21, 0x3F	; 63
     44c:	0e 94 3e 09 	call	0x127c	; 0x127c <__ltsf2>
     450:	88 23       	and	r24, r24
     452:	0c f0       	brlt	.+2      	; 0x456 <lcd_command+0x3d4>
     454:	10 e0       	ldi	r17, 0x00	; 0
     456:	11 23       	and	r17, r17
     458:	29 f0       	breq	.+10     	; 0x464 <__stack+0x5>
		__ticks = 1;
     45a:	81 e0       	ldi	r24, 0x01	; 1
     45c:	90 e0       	ldi	r25, 0x00	; 0
     45e:	9c ab       	std	Y+52, r25	; 0x34
     460:	8b ab       	std	Y+51, r24	; 0x33
     462:	46 c0       	rjmp	.+140    	; 0x4f0 <__stack+0x91>
	else if (__tmp > 65535)
     464:	11 e0       	ldi	r17, 0x01	; 1
     466:	6f a5       	ldd	r22, Y+47	; 0x2f
     468:	78 a9       	ldd	r23, Y+48	; 0x30
     46a:	89 a9       	ldd	r24, Y+49	; 0x31
     46c:	9a a9       	ldd	r25, Y+50	; 0x32
     46e:	20 e0       	ldi	r18, 0x00	; 0
     470:	3f ef       	ldi	r19, 0xFF	; 255
     472:	4f e7       	ldi	r20, 0x7F	; 127
     474:	57 e4       	ldi	r21, 0x47	; 71
     476:	0e 94 de 08 	call	0x11bc	; 0x11bc <__gtsf2>
     47a:	18 16       	cp	r1, r24
     47c:	0c f0       	brlt	.+2      	; 0x480 <__stack+0x21>
     47e:	10 e0       	ldi	r17, 0x00	; 0
     480:	11 23       	and	r17, r17
     482:	61 f1       	breq	.+88     	; 0x4dc <__stack+0x7d>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     484:	6b a5       	ldd	r22, Y+43	; 0x2b
     486:	7c a5       	ldd	r23, Y+44	; 0x2c
     488:	8d a5       	ldd	r24, Y+45	; 0x2d
     48a:	9e a5       	ldd	r25, Y+46	; 0x2e
     48c:	20 e0       	ldi	r18, 0x00	; 0
     48e:	30 e0       	ldi	r19, 0x00	; 0
     490:	40 e2       	ldi	r20, 0x20	; 32
     492:	51 e4       	ldi	r21, 0x41	; 65
     494:	0e 94 e4 07 	call	0xfc8	; 0xfc8 <__mulsf3>
     498:	dc 01       	movw	r26, r24
     49a:	cb 01       	movw	r24, r22
     49c:	bc 01       	movw	r22, r24
     49e:	cd 01       	movw	r24, r26
     4a0:	0e 94 10 06 	call	0xc20	; 0xc20 <__fixunssfsi>
     4a4:	dc 01       	movw	r26, r24
     4a6:	cb 01       	movw	r24, r22
     4a8:	9c ab       	std	Y+52, r25	; 0x34
     4aa:	8b ab       	std	Y+51, r24	; 0x33
     4ac:	12 c0       	rjmp	.+36     	; 0x4d2 <__stack+0x73>
     4ae:	80 e9       	ldi	r24, 0x90	; 144
     4b0:	91 e0       	ldi	r25, 0x01	; 1
     4b2:	9e ab       	std	Y+54, r25	; 0x36
     4b4:	8d ab       	std	Y+53, r24	; 0x35
     4b6:	8d a9       	ldd	r24, Y+53	; 0x35
     4b8:	9e a9       	ldd	r25, Y+54	; 0x36
     4ba:	8c 01       	movw	r16, r24
     4bc:	c8 01       	movw	r24, r16
     4be:	01 97       	sbiw	r24, 0x01	; 1
     4c0:	f1 f7       	brne	.-4      	; 0x4be <__stack+0x5f>
     4c2:	8c 01       	movw	r16, r24
     4c4:	1e ab       	std	Y+54, r17	; 0x36
     4c6:	0d ab       	std	Y+53, r16	; 0x35
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     4c8:	8b a9       	ldd	r24, Y+51	; 0x33
     4ca:	9c a9       	ldd	r25, Y+52	; 0x34
     4cc:	01 97       	sbiw	r24, 0x01	; 1
     4ce:	9c ab       	std	Y+52, r25	; 0x34
     4d0:	8b ab       	std	Y+51, r24	; 0x33
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     4d2:	8b a9       	ldd	r24, Y+51	; 0x33
     4d4:	9c a9       	ldd	r25, Y+52	; 0x34
     4d6:	00 97       	sbiw	r24, 0x00	; 0
     4d8:	51 f7       	brne	.-44     	; 0x4ae <__stack+0x4f>
     4da:	17 c0       	rjmp	.+46     	; 0x50a <__stack+0xab>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     4dc:	6f a5       	ldd	r22, Y+47	; 0x2f
     4de:	78 a9       	ldd	r23, Y+48	; 0x30
     4e0:	89 a9       	ldd	r24, Y+49	; 0x31
     4e2:	9a a9       	ldd	r25, Y+50	; 0x32
     4e4:	0e 94 10 06 	call	0xc20	; 0xc20 <__fixunssfsi>
     4e8:	dc 01       	movw	r26, r24
     4ea:	cb 01       	movw	r24, r22
     4ec:	9c ab       	std	Y+52, r25	; 0x34
     4ee:	8b ab       	std	Y+51, r24	; 0x33
     4f0:	8b a9       	ldd	r24, Y+51	; 0x33
     4f2:	9c a9       	ldd	r25, Y+52	; 0x34
     4f4:	98 af       	std	Y+56, r25	; 0x38
     4f6:	8f ab       	std	Y+55, r24	; 0x37
     4f8:	8f a9       	ldd	r24, Y+55	; 0x37
     4fa:	98 ad       	ldd	r25, Y+56	; 0x38
     4fc:	8c 01       	movw	r16, r24
     4fe:	f8 01       	movw	r30, r16
     500:	31 97       	sbiw	r30, 0x01	; 1
     502:	f1 f7       	brne	.-4      	; 0x500 <__stack+0xa1>
     504:	8f 01       	movw	r16, r30
     506:	18 af       	std	Y+56, r17	; 0x38
     508:	0f ab       	std	Y+55, r16	; 0x37
	_delay_ms(1);
}
     50a:	e9 96       	adiw	r28, 0x39	; 57
     50c:	0f b6       	in	r0, 0x3f	; 63
     50e:	f8 94       	cli
     510:	de bf       	out	0x3e, r29	; 62
     512:	0f be       	out	0x3f, r0	; 63
     514:	cd bf       	out	0x3d, r28	; 61
     516:	cf 91       	pop	r28
     518:	df 91       	pop	r29
     51a:	1f 91       	pop	r17
     51c:	0f 91       	pop	r16
     51e:	08 95       	ret

00000520 <lcd_data>:

void lcd_data(unsigned char da)
{
     520:	0f 93       	push	r16
     522:	1f 93       	push	r17
     524:	df 93       	push	r29
     526:	cf 93       	push	r28
     528:	cd b7       	in	r28, 0x3d	; 61
     52a:	de b7       	in	r29, 0x3e	; 62
     52c:	e9 97       	sbiw	r28, 0x39	; 57
     52e:	0f b6       	in	r0, 0x3f	; 63
     530:	f8 94       	cli
     532:	de bf       	out	0x3e, r29	; 62
     534:	0f be       	out	0x3f, r0	; 63
     536:	cd bf       	out	0x3d, r28	; 61
     538:	89 af       	std	Y+57, r24	; 0x39
	lcd=da&0xF0;
     53a:	82 e3       	ldi	r24, 0x32	; 50
     53c:	90 e0       	ldi	r25, 0x00	; 0
     53e:	29 ad       	ldd	r18, Y+57	; 0x39
     540:	20 7f       	andi	r18, 0xF0	; 240
     542:	fc 01       	movw	r30, r24
     544:	20 83       	st	Z, r18
	lcd|=0x05;
     546:	82 e3       	ldi	r24, 0x32	; 50
     548:	90 e0       	ldi	r25, 0x00	; 0
     54a:	22 e3       	ldi	r18, 0x32	; 50
     54c:	30 e0       	ldi	r19, 0x00	; 0
     54e:	f9 01       	movw	r30, r18
     550:	20 81       	ld	r18, Z
     552:	25 60       	ori	r18, 0x05	; 5
     554:	fc 01       	movw	r30, r24
     556:	20 83       	st	Z, r18
     558:	80 e0       	ldi	r24, 0x00	; 0
     55a:	90 e0       	ldi	r25, 0x00	; 0
     55c:	a0 e8       	ldi	r26, 0x80	; 128
     55e:	bf e3       	ldi	r27, 0x3F	; 63
     560:	89 83       	std	Y+1, r24	; 0x01
     562:	9a 83       	std	Y+2, r25	; 0x02
     564:	ab 83       	std	Y+3, r26	; 0x03
     566:	bc 83       	std	Y+4, r27	; 0x04
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     568:	69 81       	ldd	r22, Y+1	; 0x01
     56a:	7a 81       	ldd	r23, Y+2	; 0x02
     56c:	8b 81       	ldd	r24, Y+3	; 0x03
     56e:	9c 81       	ldd	r25, Y+4	; 0x04
     570:	20 e0       	ldi	r18, 0x00	; 0
     572:	30 e0       	ldi	r19, 0x00	; 0
     574:	4a e7       	ldi	r20, 0x7A	; 122
     576:	55 e4       	ldi	r21, 0x45	; 69
     578:	0e 94 e4 07 	call	0xfc8	; 0xfc8 <__mulsf3>
     57c:	dc 01       	movw	r26, r24
     57e:	cb 01       	movw	r24, r22
     580:	8d 83       	std	Y+5, r24	; 0x05
     582:	9e 83       	std	Y+6, r25	; 0x06
     584:	af 83       	std	Y+7, r26	; 0x07
     586:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
     588:	11 e0       	ldi	r17, 0x01	; 1
     58a:	6d 81       	ldd	r22, Y+5	; 0x05
     58c:	7e 81       	ldd	r23, Y+6	; 0x06
     58e:	8f 81       	ldd	r24, Y+7	; 0x07
     590:	98 85       	ldd	r25, Y+8	; 0x08
     592:	20 e0       	ldi	r18, 0x00	; 0
     594:	30 e0       	ldi	r19, 0x00	; 0
     596:	40 e8       	ldi	r20, 0x80	; 128
     598:	5f e3       	ldi	r21, 0x3F	; 63
     59a:	0e 94 3e 09 	call	0x127c	; 0x127c <__ltsf2>
     59e:	88 23       	and	r24, r24
     5a0:	0c f0       	brlt	.+2      	; 0x5a4 <lcd_data+0x84>
     5a2:	10 e0       	ldi	r17, 0x00	; 0
     5a4:	11 23       	and	r17, r17
     5a6:	29 f0       	breq	.+10     	; 0x5b2 <lcd_data+0x92>
		__ticks = 1;
     5a8:	81 e0       	ldi	r24, 0x01	; 1
     5aa:	90 e0       	ldi	r25, 0x00	; 0
     5ac:	9a 87       	std	Y+10, r25	; 0x0a
     5ae:	89 87       	std	Y+9, r24	; 0x09
     5b0:	46 c0       	rjmp	.+140    	; 0x63e <lcd_data+0x11e>
	else if (__tmp > 65535)
     5b2:	11 e0       	ldi	r17, 0x01	; 1
     5b4:	6d 81       	ldd	r22, Y+5	; 0x05
     5b6:	7e 81       	ldd	r23, Y+6	; 0x06
     5b8:	8f 81       	ldd	r24, Y+7	; 0x07
     5ba:	98 85       	ldd	r25, Y+8	; 0x08
     5bc:	20 e0       	ldi	r18, 0x00	; 0
     5be:	3f ef       	ldi	r19, 0xFF	; 255
     5c0:	4f e7       	ldi	r20, 0x7F	; 127
     5c2:	57 e4       	ldi	r21, 0x47	; 71
     5c4:	0e 94 de 08 	call	0x11bc	; 0x11bc <__gtsf2>
     5c8:	18 16       	cp	r1, r24
     5ca:	0c f0       	brlt	.+2      	; 0x5ce <lcd_data+0xae>
     5cc:	10 e0       	ldi	r17, 0x00	; 0
     5ce:	11 23       	and	r17, r17
     5d0:	61 f1       	breq	.+88     	; 0x62a <lcd_data+0x10a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     5d2:	69 81       	ldd	r22, Y+1	; 0x01
     5d4:	7a 81       	ldd	r23, Y+2	; 0x02
     5d6:	8b 81       	ldd	r24, Y+3	; 0x03
     5d8:	9c 81       	ldd	r25, Y+4	; 0x04
     5da:	20 e0       	ldi	r18, 0x00	; 0
     5dc:	30 e0       	ldi	r19, 0x00	; 0
     5de:	40 e2       	ldi	r20, 0x20	; 32
     5e0:	51 e4       	ldi	r21, 0x41	; 65
     5e2:	0e 94 e4 07 	call	0xfc8	; 0xfc8 <__mulsf3>
     5e6:	dc 01       	movw	r26, r24
     5e8:	cb 01       	movw	r24, r22
     5ea:	bc 01       	movw	r22, r24
     5ec:	cd 01       	movw	r24, r26
     5ee:	0e 94 10 06 	call	0xc20	; 0xc20 <__fixunssfsi>
     5f2:	dc 01       	movw	r26, r24
     5f4:	cb 01       	movw	r24, r22
     5f6:	9a 87       	std	Y+10, r25	; 0x0a
     5f8:	89 87       	std	Y+9, r24	; 0x09
     5fa:	12 c0       	rjmp	.+36     	; 0x620 <lcd_data+0x100>
     5fc:	80 e9       	ldi	r24, 0x90	; 144
     5fe:	91 e0       	ldi	r25, 0x01	; 1
     600:	9c 87       	std	Y+12, r25	; 0x0c
     602:	8b 87       	std	Y+11, r24	; 0x0b
     604:	8b 85       	ldd	r24, Y+11	; 0x0b
     606:	9c 85       	ldd	r25, Y+12	; 0x0c
     608:	8c 01       	movw	r16, r24
     60a:	c8 01       	movw	r24, r16
     60c:	01 97       	sbiw	r24, 0x01	; 1
     60e:	f1 f7       	brne	.-4      	; 0x60c <lcd_data+0xec>
     610:	8c 01       	movw	r16, r24
     612:	1c 87       	std	Y+12, r17	; 0x0c
     614:	0b 87       	std	Y+11, r16	; 0x0b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     616:	89 85       	ldd	r24, Y+9	; 0x09
     618:	9a 85       	ldd	r25, Y+10	; 0x0a
     61a:	01 97       	sbiw	r24, 0x01	; 1
     61c:	9a 87       	std	Y+10, r25	; 0x0a
     61e:	89 87       	std	Y+9, r24	; 0x09
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     620:	89 85       	ldd	r24, Y+9	; 0x09
     622:	9a 85       	ldd	r25, Y+10	; 0x0a
     624:	00 97       	sbiw	r24, 0x00	; 0
     626:	51 f7       	brne	.-44     	; 0x5fc <lcd_data+0xdc>
     628:	17 c0       	rjmp	.+46     	; 0x658 <lcd_data+0x138>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     62a:	6d 81       	ldd	r22, Y+5	; 0x05
     62c:	7e 81       	ldd	r23, Y+6	; 0x06
     62e:	8f 81       	ldd	r24, Y+7	; 0x07
     630:	98 85       	ldd	r25, Y+8	; 0x08
     632:	0e 94 10 06 	call	0xc20	; 0xc20 <__fixunssfsi>
     636:	dc 01       	movw	r26, r24
     638:	cb 01       	movw	r24, r22
     63a:	9a 87       	std	Y+10, r25	; 0x0a
     63c:	89 87       	std	Y+9, r24	; 0x09
     63e:	89 85       	ldd	r24, Y+9	; 0x09
     640:	9a 85       	ldd	r25, Y+10	; 0x0a
     642:	9e 87       	std	Y+14, r25	; 0x0e
     644:	8d 87       	std	Y+13, r24	; 0x0d
     646:	8d 85       	ldd	r24, Y+13	; 0x0d
     648:	9e 85       	ldd	r25, Y+14	; 0x0e
     64a:	8c 01       	movw	r16, r24
     64c:	f8 01       	movw	r30, r16
     64e:	31 97       	sbiw	r30, 0x01	; 1
     650:	f1 f7       	brne	.-4      	; 0x64e <lcd_data+0x12e>
     652:	8f 01       	movw	r16, r30
     654:	1e 87       	std	Y+14, r17	; 0x0e
     656:	0d 87       	std	Y+13, r16	; 0x0d
	_delay_ms(1);
	lcd&=0xF1;
     658:	82 e3       	ldi	r24, 0x32	; 50
     65a:	90 e0       	ldi	r25, 0x00	; 0
     65c:	22 e3       	ldi	r18, 0x32	; 50
     65e:	30 e0       	ldi	r19, 0x00	; 0
     660:	f9 01       	movw	r30, r18
     662:	20 81       	ld	r18, Z
     664:	21 7f       	andi	r18, 0xF1	; 241
     666:	fc 01       	movw	r30, r24
     668:	20 83       	st	Z, r18
     66a:	80 e0       	ldi	r24, 0x00	; 0
     66c:	90 e0       	ldi	r25, 0x00	; 0
     66e:	a0 e8       	ldi	r26, 0x80	; 128
     670:	bf e3       	ldi	r27, 0x3F	; 63
     672:	8f 87       	std	Y+15, r24	; 0x0f
     674:	98 8b       	std	Y+16, r25	; 0x10
     676:	a9 8b       	std	Y+17, r26	; 0x11
     678:	ba 8b       	std	Y+18, r27	; 0x12
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     67a:	6f 85       	ldd	r22, Y+15	; 0x0f
     67c:	78 89       	ldd	r23, Y+16	; 0x10
     67e:	89 89       	ldd	r24, Y+17	; 0x11
     680:	9a 89       	ldd	r25, Y+18	; 0x12
     682:	20 e0       	ldi	r18, 0x00	; 0
     684:	30 e0       	ldi	r19, 0x00	; 0
     686:	4a e7       	ldi	r20, 0x7A	; 122
     688:	55 e4       	ldi	r21, 0x45	; 69
     68a:	0e 94 e4 07 	call	0xfc8	; 0xfc8 <__mulsf3>
     68e:	dc 01       	movw	r26, r24
     690:	cb 01       	movw	r24, r22
     692:	8b 8b       	std	Y+19, r24	; 0x13
     694:	9c 8b       	std	Y+20, r25	; 0x14
     696:	ad 8b       	std	Y+21, r26	; 0x15
     698:	be 8b       	std	Y+22, r27	; 0x16
	if (__tmp < 1.0)
     69a:	11 e0       	ldi	r17, 0x01	; 1
     69c:	6b 89       	ldd	r22, Y+19	; 0x13
     69e:	7c 89       	ldd	r23, Y+20	; 0x14
     6a0:	8d 89       	ldd	r24, Y+21	; 0x15
     6a2:	9e 89       	ldd	r25, Y+22	; 0x16
     6a4:	20 e0       	ldi	r18, 0x00	; 0
     6a6:	30 e0       	ldi	r19, 0x00	; 0
     6a8:	40 e8       	ldi	r20, 0x80	; 128
     6aa:	5f e3       	ldi	r21, 0x3F	; 63
     6ac:	0e 94 3e 09 	call	0x127c	; 0x127c <__ltsf2>
     6b0:	88 23       	and	r24, r24
     6b2:	0c f0       	brlt	.+2      	; 0x6b6 <lcd_data+0x196>
     6b4:	10 e0       	ldi	r17, 0x00	; 0
     6b6:	11 23       	and	r17, r17
     6b8:	29 f0       	breq	.+10     	; 0x6c4 <lcd_data+0x1a4>
		__ticks = 1;
     6ba:	81 e0       	ldi	r24, 0x01	; 1
     6bc:	90 e0       	ldi	r25, 0x00	; 0
     6be:	98 8f       	std	Y+24, r25	; 0x18
     6c0:	8f 8b       	std	Y+23, r24	; 0x17
     6c2:	46 c0       	rjmp	.+140    	; 0x750 <lcd_data+0x230>
	else if (__tmp > 65535)
     6c4:	11 e0       	ldi	r17, 0x01	; 1
     6c6:	6b 89       	ldd	r22, Y+19	; 0x13
     6c8:	7c 89       	ldd	r23, Y+20	; 0x14
     6ca:	8d 89       	ldd	r24, Y+21	; 0x15
     6cc:	9e 89       	ldd	r25, Y+22	; 0x16
     6ce:	20 e0       	ldi	r18, 0x00	; 0
     6d0:	3f ef       	ldi	r19, 0xFF	; 255
     6d2:	4f e7       	ldi	r20, 0x7F	; 127
     6d4:	57 e4       	ldi	r21, 0x47	; 71
     6d6:	0e 94 de 08 	call	0x11bc	; 0x11bc <__gtsf2>
     6da:	18 16       	cp	r1, r24
     6dc:	0c f0       	brlt	.+2      	; 0x6e0 <lcd_data+0x1c0>
     6de:	10 e0       	ldi	r17, 0x00	; 0
     6e0:	11 23       	and	r17, r17
     6e2:	61 f1       	breq	.+88     	; 0x73c <lcd_data+0x21c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     6e4:	6f 85       	ldd	r22, Y+15	; 0x0f
     6e6:	78 89       	ldd	r23, Y+16	; 0x10
     6e8:	89 89       	ldd	r24, Y+17	; 0x11
     6ea:	9a 89       	ldd	r25, Y+18	; 0x12
     6ec:	20 e0       	ldi	r18, 0x00	; 0
     6ee:	30 e0       	ldi	r19, 0x00	; 0
     6f0:	40 e2       	ldi	r20, 0x20	; 32
     6f2:	51 e4       	ldi	r21, 0x41	; 65
     6f4:	0e 94 e4 07 	call	0xfc8	; 0xfc8 <__mulsf3>
     6f8:	dc 01       	movw	r26, r24
     6fa:	cb 01       	movw	r24, r22
     6fc:	bc 01       	movw	r22, r24
     6fe:	cd 01       	movw	r24, r26
     700:	0e 94 10 06 	call	0xc20	; 0xc20 <__fixunssfsi>
     704:	dc 01       	movw	r26, r24
     706:	cb 01       	movw	r24, r22
     708:	98 8f       	std	Y+24, r25	; 0x18
     70a:	8f 8b       	std	Y+23, r24	; 0x17
     70c:	12 c0       	rjmp	.+36     	; 0x732 <lcd_data+0x212>
     70e:	80 e9       	ldi	r24, 0x90	; 144
     710:	91 e0       	ldi	r25, 0x01	; 1
     712:	9a 8f       	std	Y+26, r25	; 0x1a
     714:	89 8f       	std	Y+25, r24	; 0x19
     716:	89 8d       	ldd	r24, Y+25	; 0x19
     718:	9a 8d       	ldd	r25, Y+26	; 0x1a
     71a:	8c 01       	movw	r16, r24
     71c:	c8 01       	movw	r24, r16
     71e:	01 97       	sbiw	r24, 0x01	; 1
     720:	f1 f7       	brne	.-4      	; 0x71e <lcd_data+0x1fe>
     722:	8c 01       	movw	r16, r24
     724:	1a 8f       	std	Y+26, r17	; 0x1a
     726:	09 8f       	std	Y+25, r16	; 0x19
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     728:	8f 89       	ldd	r24, Y+23	; 0x17
     72a:	98 8d       	ldd	r25, Y+24	; 0x18
     72c:	01 97       	sbiw	r24, 0x01	; 1
     72e:	98 8f       	std	Y+24, r25	; 0x18
     730:	8f 8b       	std	Y+23, r24	; 0x17
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     732:	8f 89       	ldd	r24, Y+23	; 0x17
     734:	98 8d       	ldd	r25, Y+24	; 0x18
     736:	00 97       	sbiw	r24, 0x00	; 0
     738:	51 f7       	brne	.-44     	; 0x70e <lcd_data+0x1ee>
     73a:	17 c0       	rjmp	.+46     	; 0x76a <lcd_data+0x24a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     73c:	6b 89       	ldd	r22, Y+19	; 0x13
     73e:	7c 89       	ldd	r23, Y+20	; 0x14
     740:	8d 89       	ldd	r24, Y+21	; 0x15
     742:	9e 89       	ldd	r25, Y+22	; 0x16
     744:	0e 94 10 06 	call	0xc20	; 0xc20 <__fixunssfsi>
     748:	dc 01       	movw	r26, r24
     74a:	cb 01       	movw	r24, r22
     74c:	98 8f       	std	Y+24, r25	; 0x18
     74e:	8f 8b       	std	Y+23, r24	; 0x17
     750:	8f 89       	ldd	r24, Y+23	; 0x17
     752:	98 8d       	ldd	r25, Y+24	; 0x18
     754:	9c 8f       	std	Y+28, r25	; 0x1c
     756:	8b 8f       	std	Y+27, r24	; 0x1b
     758:	8b 8d       	ldd	r24, Y+27	; 0x1b
     75a:	9c 8d       	ldd	r25, Y+28	; 0x1c
     75c:	8c 01       	movw	r16, r24
     75e:	f8 01       	movw	r30, r16
     760:	31 97       	sbiw	r30, 0x01	; 1
     762:	f1 f7       	brne	.-4      	; 0x760 <lcd_data+0x240>
     764:	8f 01       	movw	r16, r30
     766:	1c 8f       	std	Y+28, r17	; 0x1c
     768:	0b 8f       	std	Y+27, r16	; 0x1b
	_delay_ms(1);
	lcd=(da<<4)&0xF0;
     76a:	82 e3       	ldi	r24, 0x32	; 50
     76c:	90 e0       	ldi	r25, 0x00	; 0
     76e:	29 ad       	ldd	r18, Y+57	; 0x39
     770:	22 2f       	mov	r18, r18
     772:	30 e0       	ldi	r19, 0x00	; 0
     774:	22 95       	swap	r18
     776:	32 95       	swap	r19
     778:	30 7f       	andi	r19, 0xF0	; 240
     77a:	32 27       	eor	r19, r18
     77c:	20 7f       	andi	r18, 0xF0	; 240
     77e:	32 27       	eor	r19, r18
     780:	fc 01       	movw	r30, r24
     782:	20 83       	st	Z, r18
	lcd|=0x05;
     784:	82 e3       	ldi	r24, 0x32	; 50
     786:	90 e0       	ldi	r25, 0x00	; 0
     788:	22 e3       	ldi	r18, 0x32	; 50
     78a:	30 e0       	ldi	r19, 0x00	; 0
     78c:	f9 01       	movw	r30, r18
     78e:	20 81       	ld	r18, Z
     790:	25 60       	ori	r18, 0x05	; 5
     792:	fc 01       	movw	r30, r24
     794:	20 83       	st	Z, r18
     796:	80 e0       	ldi	r24, 0x00	; 0
     798:	90 e0       	ldi	r25, 0x00	; 0
     79a:	a0 e8       	ldi	r26, 0x80	; 128
     79c:	bf e3       	ldi	r27, 0x3F	; 63
     79e:	8d 8f       	std	Y+29, r24	; 0x1d
     7a0:	9e 8f       	std	Y+30, r25	; 0x1e
     7a2:	af 8f       	std	Y+31, r26	; 0x1f
     7a4:	b8 a3       	std	Y+32, r27	; 0x20
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     7a6:	6d 8d       	ldd	r22, Y+29	; 0x1d
     7a8:	7e 8d       	ldd	r23, Y+30	; 0x1e
     7aa:	8f 8d       	ldd	r24, Y+31	; 0x1f
     7ac:	98 a1       	ldd	r25, Y+32	; 0x20
     7ae:	20 e0       	ldi	r18, 0x00	; 0
     7b0:	30 e0       	ldi	r19, 0x00	; 0
     7b2:	4a e7       	ldi	r20, 0x7A	; 122
     7b4:	55 e4       	ldi	r21, 0x45	; 69
     7b6:	0e 94 e4 07 	call	0xfc8	; 0xfc8 <__mulsf3>
     7ba:	dc 01       	movw	r26, r24
     7bc:	cb 01       	movw	r24, r22
     7be:	89 a3       	std	Y+33, r24	; 0x21
     7c0:	9a a3       	std	Y+34, r25	; 0x22
     7c2:	ab a3       	std	Y+35, r26	; 0x23
     7c4:	bc a3       	std	Y+36, r27	; 0x24
	if (__tmp < 1.0)
     7c6:	11 e0       	ldi	r17, 0x01	; 1
     7c8:	69 a1       	ldd	r22, Y+33	; 0x21
     7ca:	7a a1       	ldd	r23, Y+34	; 0x22
     7cc:	8b a1       	ldd	r24, Y+35	; 0x23
     7ce:	9c a1       	ldd	r25, Y+36	; 0x24
     7d0:	20 e0       	ldi	r18, 0x00	; 0
     7d2:	30 e0       	ldi	r19, 0x00	; 0
     7d4:	40 e8       	ldi	r20, 0x80	; 128
     7d6:	5f e3       	ldi	r21, 0x3F	; 63
     7d8:	0e 94 3e 09 	call	0x127c	; 0x127c <__ltsf2>
     7dc:	88 23       	and	r24, r24
     7de:	0c f0       	brlt	.+2      	; 0x7e2 <lcd_data+0x2c2>
     7e0:	10 e0       	ldi	r17, 0x00	; 0
     7e2:	11 23       	and	r17, r17
     7e4:	29 f0       	breq	.+10     	; 0x7f0 <lcd_data+0x2d0>
		__ticks = 1;
     7e6:	81 e0       	ldi	r24, 0x01	; 1
     7e8:	90 e0       	ldi	r25, 0x00	; 0
     7ea:	9e a3       	std	Y+38, r25	; 0x26
     7ec:	8d a3       	std	Y+37, r24	; 0x25
     7ee:	46 c0       	rjmp	.+140    	; 0x87c <lcd_data+0x35c>
	else if (__tmp > 65535)
     7f0:	11 e0       	ldi	r17, 0x01	; 1
     7f2:	69 a1       	ldd	r22, Y+33	; 0x21
     7f4:	7a a1       	ldd	r23, Y+34	; 0x22
     7f6:	8b a1       	ldd	r24, Y+35	; 0x23
     7f8:	9c a1       	ldd	r25, Y+36	; 0x24
     7fa:	20 e0       	ldi	r18, 0x00	; 0
     7fc:	3f ef       	ldi	r19, 0xFF	; 255
     7fe:	4f e7       	ldi	r20, 0x7F	; 127
     800:	57 e4       	ldi	r21, 0x47	; 71
     802:	0e 94 de 08 	call	0x11bc	; 0x11bc <__gtsf2>
     806:	18 16       	cp	r1, r24
     808:	0c f0       	brlt	.+2      	; 0x80c <lcd_data+0x2ec>
     80a:	10 e0       	ldi	r17, 0x00	; 0
     80c:	11 23       	and	r17, r17
     80e:	61 f1       	breq	.+88     	; 0x868 <lcd_data+0x348>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     810:	6d 8d       	ldd	r22, Y+29	; 0x1d
     812:	7e 8d       	ldd	r23, Y+30	; 0x1e
     814:	8f 8d       	ldd	r24, Y+31	; 0x1f
     816:	98 a1       	ldd	r25, Y+32	; 0x20
     818:	20 e0       	ldi	r18, 0x00	; 0
     81a:	30 e0       	ldi	r19, 0x00	; 0
     81c:	40 e2       	ldi	r20, 0x20	; 32
     81e:	51 e4       	ldi	r21, 0x41	; 65
     820:	0e 94 e4 07 	call	0xfc8	; 0xfc8 <__mulsf3>
     824:	dc 01       	movw	r26, r24
     826:	cb 01       	movw	r24, r22
     828:	bc 01       	movw	r22, r24
     82a:	cd 01       	movw	r24, r26
     82c:	0e 94 10 06 	call	0xc20	; 0xc20 <__fixunssfsi>
     830:	dc 01       	movw	r26, r24
     832:	cb 01       	movw	r24, r22
     834:	9e a3       	std	Y+38, r25	; 0x26
     836:	8d a3       	std	Y+37, r24	; 0x25
     838:	12 c0       	rjmp	.+36     	; 0x85e <lcd_data+0x33e>
     83a:	80 e9       	ldi	r24, 0x90	; 144
     83c:	91 e0       	ldi	r25, 0x01	; 1
     83e:	98 a7       	std	Y+40, r25	; 0x28
     840:	8f a3       	std	Y+39, r24	; 0x27
     842:	8f a1       	ldd	r24, Y+39	; 0x27
     844:	98 a5       	ldd	r25, Y+40	; 0x28
     846:	8c 01       	movw	r16, r24
     848:	c8 01       	movw	r24, r16
     84a:	01 97       	sbiw	r24, 0x01	; 1
     84c:	f1 f7       	brne	.-4      	; 0x84a <lcd_data+0x32a>
     84e:	8c 01       	movw	r16, r24
     850:	18 a7       	std	Y+40, r17	; 0x28
     852:	0f a3       	std	Y+39, r16	; 0x27
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     854:	8d a1       	ldd	r24, Y+37	; 0x25
     856:	9e a1       	ldd	r25, Y+38	; 0x26
     858:	01 97       	sbiw	r24, 0x01	; 1
     85a:	9e a3       	std	Y+38, r25	; 0x26
     85c:	8d a3       	std	Y+37, r24	; 0x25
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     85e:	8d a1       	ldd	r24, Y+37	; 0x25
     860:	9e a1       	ldd	r25, Y+38	; 0x26
     862:	00 97       	sbiw	r24, 0x00	; 0
     864:	51 f7       	brne	.-44     	; 0x83a <lcd_data+0x31a>
     866:	17 c0       	rjmp	.+46     	; 0x896 <lcd_data+0x376>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     868:	69 a1       	ldd	r22, Y+33	; 0x21
     86a:	7a a1       	ldd	r23, Y+34	; 0x22
     86c:	8b a1       	ldd	r24, Y+35	; 0x23
     86e:	9c a1       	ldd	r25, Y+36	; 0x24
     870:	0e 94 10 06 	call	0xc20	; 0xc20 <__fixunssfsi>
     874:	dc 01       	movw	r26, r24
     876:	cb 01       	movw	r24, r22
     878:	9e a3       	std	Y+38, r25	; 0x26
     87a:	8d a3       	std	Y+37, r24	; 0x25
     87c:	8d a1       	ldd	r24, Y+37	; 0x25
     87e:	9e a1       	ldd	r25, Y+38	; 0x26
     880:	9a a7       	std	Y+42, r25	; 0x2a
     882:	89 a7       	std	Y+41, r24	; 0x29
     884:	89 a5       	ldd	r24, Y+41	; 0x29
     886:	9a a5       	ldd	r25, Y+42	; 0x2a
     888:	8c 01       	movw	r16, r24
     88a:	f8 01       	movw	r30, r16
     88c:	31 97       	sbiw	r30, 0x01	; 1
     88e:	f1 f7       	brne	.-4      	; 0x88c <lcd_data+0x36c>
     890:	8f 01       	movw	r16, r30
     892:	1a a7       	std	Y+42, r17	; 0x2a
     894:	09 a7       	std	Y+41, r16	; 0x29
	_delay_ms(1);
	lcd&=0xF1;
     896:	82 e3       	ldi	r24, 0x32	; 50
     898:	90 e0       	ldi	r25, 0x00	; 0
     89a:	22 e3       	ldi	r18, 0x32	; 50
     89c:	30 e0       	ldi	r19, 0x00	; 0
     89e:	f9 01       	movw	r30, r18
     8a0:	20 81       	ld	r18, Z
     8a2:	21 7f       	andi	r18, 0xF1	; 241
     8a4:	fc 01       	movw	r30, r24
     8a6:	20 83       	st	Z, r18
     8a8:	80 e0       	ldi	r24, 0x00	; 0
     8aa:	90 e0       	ldi	r25, 0x00	; 0
     8ac:	a0 e8       	ldi	r26, 0x80	; 128
     8ae:	bf e3       	ldi	r27, 0x3F	; 63
     8b0:	8b a7       	std	Y+43, r24	; 0x2b
     8b2:	9c a7       	std	Y+44, r25	; 0x2c
     8b4:	ad a7       	std	Y+45, r26	; 0x2d
     8b6:	be a7       	std	Y+46, r27	; 0x2e
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     8b8:	6b a5       	ldd	r22, Y+43	; 0x2b
     8ba:	7c a5       	ldd	r23, Y+44	; 0x2c
     8bc:	8d a5       	ldd	r24, Y+45	; 0x2d
     8be:	9e a5       	ldd	r25, Y+46	; 0x2e
     8c0:	20 e0       	ldi	r18, 0x00	; 0
     8c2:	30 e0       	ldi	r19, 0x00	; 0
     8c4:	4a e7       	ldi	r20, 0x7A	; 122
     8c6:	55 e4       	ldi	r21, 0x45	; 69
     8c8:	0e 94 e4 07 	call	0xfc8	; 0xfc8 <__mulsf3>
     8cc:	dc 01       	movw	r26, r24
     8ce:	cb 01       	movw	r24, r22
     8d0:	8f a7       	std	Y+47, r24	; 0x2f
     8d2:	98 ab       	std	Y+48, r25	; 0x30
     8d4:	a9 ab       	std	Y+49, r26	; 0x31
     8d6:	ba ab       	std	Y+50, r27	; 0x32
	if (__tmp < 1.0)
     8d8:	11 e0       	ldi	r17, 0x01	; 1
     8da:	6f a5       	ldd	r22, Y+47	; 0x2f
     8dc:	78 a9       	ldd	r23, Y+48	; 0x30
     8de:	89 a9       	ldd	r24, Y+49	; 0x31
     8e0:	9a a9       	ldd	r25, Y+50	; 0x32
     8e2:	20 e0       	ldi	r18, 0x00	; 0
     8e4:	30 e0       	ldi	r19, 0x00	; 0
     8e6:	40 e8       	ldi	r20, 0x80	; 128
     8e8:	5f e3       	ldi	r21, 0x3F	; 63
     8ea:	0e 94 3e 09 	call	0x127c	; 0x127c <__ltsf2>
     8ee:	88 23       	and	r24, r24
     8f0:	0c f0       	brlt	.+2      	; 0x8f4 <lcd_data+0x3d4>
     8f2:	10 e0       	ldi	r17, 0x00	; 0
     8f4:	11 23       	and	r17, r17
     8f6:	29 f0       	breq	.+10     	; 0x902 <lcd_data+0x3e2>
		__ticks = 1;
     8f8:	81 e0       	ldi	r24, 0x01	; 1
     8fa:	90 e0       	ldi	r25, 0x00	; 0
     8fc:	9c ab       	std	Y+52, r25	; 0x34
     8fe:	8b ab       	std	Y+51, r24	; 0x33
     900:	46 c0       	rjmp	.+140    	; 0x98e <lcd_data+0x46e>
	else if (__tmp > 65535)
     902:	11 e0       	ldi	r17, 0x01	; 1
     904:	6f a5       	ldd	r22, Y+47	; 0x2f
     906:	78 a9       	ldd	r23, Y+48	; 0x30
     908:	89 a9       	ldd	r24, Y+49	; 0x31
     90a:	9a a9       	ldd	r25, Y+50	; 0x32
     90c:	20 e0       	ldi	r18, 0x00	; 0
     90e:	3f ef       	ldi	r19, 0xFF	; 255
     910:	4f e7       	ldi	r20, 0x7F	; 127
     912:	57 e4       	ldi	r21, 0x47	; 71
     914:	0e 94 de 08 	call	0x11bc	; 0x11bc <__gtsf2>
     918:	18 16       	cp	r1, r24
     91a:	0c f0       	brlt	.+2      	; 0x91e <lcd_data+0x3fe>
     91c:	10 e0       	ldi	r17, 0x00	; 0
     91e:	11 23       	and	r17, r17
     920:	61 f1       	breq	.+88     	; 0x97a <lcd_data+0x45a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     922:	6b a5       	ldd	r22, Y+43	; 0x2b
     924:	7c a5       	ldd	r23, Y+44	; 0x2c
     926:	8d a5       	ldd	r24, Y+45	; 0x2d
     928:	9e a5       	ldd	r25, Y+46	; 0x2e
     92a:	20 e0       	ldi	r18, 0x00	; 0
     92c:	30 e0       	ldi	r19, 0x00	; 0
     92e:	40 e2       	ldi	r20, 0x20	; 32
     930:	51 e4       	ldi	r21, 0x41	; 65
     932:	0e 94 e4 07 	call	0xfc8	; 0xfc8 <__mulsf3>
     936:	dc 01       	movw	r26, r24
     938:	cb 01       	movw	r24, r22
     93a:	bc 01       	movw	r22, r24
     93c:	cd 01       	movw	r24, r26
     93e:	0e 94 10 06 	call	0xc20	; 0xc20 <__fixunssfsi>
     942:	dc 01       	movw	r26, r24
     944:	cb 01       	movw	r24, r22
     946:	9c ab       	std	Y+52, r25	; 0x34
     948:	8b ab       	std	Y+51, r24	; 0x33
     94a:	12 c0       	rjmp	.+36     	; 0x970 <lcd_data+0x450>
     94c:	80 e9       	ldi	r24, 0x90	; 144
     94e:	91 e0       	ldi	r25, 0x01	; 1
     950:	9e ab       	std	Y+54, r25	; 0x36
     952:	8d ab       	std	Y+53, r24	; 0x35
     954:	8d a9       	ldd	r24, Y+53	; 0x35
     956:	9e a9       	ldd	r25, Y+54	; 0x36
     958:	8c 01       	movw	r16, r24
     95a:	c8 01       	movw	r24, r16
     95c:	01 97       	sbiw	r24, 0x01	; 1
     95e:	f1 f7       	brne	.-4      	; 0x95c <lcd_data+0x43c>
     960:	8c 01       	movw	r16, r24
     962:	1e ab       	std	Y+54, r17	; 0x36
     964:	0d ab       	std	Y+53, r16	; 0x35
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     966:	8b a9       	ldd	r24, Y+51	; 0x33
     968:	9c a9       	ldd	r25, Y+52	; 0x34
     96a:	01 97       	sbiw	r24, 0x01	; 1
     96c:	9c ab       	std	Y+52, r25	; 0x34
     96e:	8b ab       	std	Y+51, r24	; 0x33
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     970:	8b a9       	ldd	r24, Y+51	; 0x33
     972:	9c a9       	ldd	r25, Y+52	; 0x34
     974:	00 97       	sbiw	r24, 0x00	; 0
     976:	51 f7       	brne	.-44     	; 0x94c <lcd_data+0x42c>
     978:	17 c0       	rjmp	.+46     	; 0x9a8 <lcd_data+0x488>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     97a:	6f a5       	ldd	r22, Y+47	; 0x2f
     97c:	78 a9       	ldd	r23, Y+48	; 0x30
     97e:	89 a9       	ldd	r24, Y+49	; 0x31
     980:	9a a9       	ldd	r25, Y+50	; 0x32
     982:	0e 94 10 06 	call	0xc20	; 0xc20 <__fixunssfsi>
     986:	dc 01       	movw	r26, r24
     988:	cb 01       	movw	r24, r22
     98a:	9c ab       	std	Y+52, r25	; 0x34
     98c:	8b ab       	std	Y+51, r24	; 0x33
     98e:	8b a9       	ldd	r24, Y+51	; 0x33
     990:	9c a9       	ldd	r25, Y+52	; 0x34
     992:	98 af       	std	Y+56, r25	; 0x38
     994:	8f ab       	std	Y+55, r24	; 0x37
     996:	8f a9       	ldd	r24, Y+55	; 0x37
     998:	98 ad       	ldd	r25, Y+56	; 0x38
     99a:	8c 01       	movw	r16, r24
     99c:	f8 01       	movw	r30, r16
     99e:	31 97       	sbiw	r30, 0x01	; 1
     9a0:	f1 f7       	brne	.-4      	; 0x99e <lcd_data+0x47e>
     9a2:	8f 01       	movw	r16, r30
     9a4:	18 af       	std	Y+56, r17	; 0x38
     9a6:	0f ab       	std	Y+55, r16	; 0x37
	_delay_ms(1);
}
     9a8:	e9 96       	adiw	r28, 0x39	; 57
     9aa:	0f b6       	in	r0, 0x3f	; 63
     9ac:	f8 94       	cli
     9ae:	de bf       	out	0x3e, r29	; 62
     9b0:	0f be       	out	0x3f, r0	; 63
     9b2:	cd bf       	out	0x3d, r28	; 61
     9b4:	cf 91       	pop	r28
     9b6:	df 91       	pop	r29
     9b8:	1f 91       	pop	r17
     9ba:	0f 91       	pop	r16
     9bc:	08 95       	ret

000009be <lcd_init>:

void lcd_init()
{
     9be:	df 93       	push	r29
     9c0:	cf 93       	push	r28
     9c2:	cd b7       	in	r28, 0x3d	; 61
     9c4:	de b7       	in	r29, 0x3e	; 62
	lcd_command(0x02);//home position
     9c6:	82 e0       	ldi	r24, 0x02	; 2
     9c8:	0e 94 41 00 	call	0x82	; 0x82 <lcd_command>
	lcd_command(0x28);//enable 4 bit mode
     9cc:	88 e2       	ldi	r24, 0x28	; 40
     9ce:	0e 94 41 00 	call	0x82	; 0x82 <lcd_command>
	lcd_command(0x0c);//display on cursor off
     9d2:	8c e0       	ldi	r24, 0x0C	; 12
     9d4:	0e 94 41 00 	call	0x82	; 0x82 <lcd_command>
	//lcd_command(0x0e);//display off cursor on
	lcd_command(0x06);//auto increment
     9d8:	86 e0       	ldi	r24, 0x06	; 6
     9da:	0e 94 41 00 	call	0x82	; 0x82 <lcd_command>
}
     9de:	cf 91       	pop	r28
     9e0:	df 91       	pop	r29
     9e2:	08 95       	ret

000009e4 <lcd_string>:

void lcd_string(char *str)
{
     9e4:	df 93       	push	r29
     9e6:	cf 93       	push	r28
     9e8:	00 d0       	rcall	.+0      	; 0x9ea <lcd_string+0x6>
     9ea:	0f 92       	push	r0
     9ec:	cd b7       	in	r28, 0x3d	; 61
     9ee:	de b7       	in	r29, 0x3e	; 62
     9f0:	9b 83       	std	Y+3, r25	; 0x03
     9f2:	8a 83       	std	Y+2, r24	; 0x02
	char i = 0;
     9f4:	19 82       	std	Y+1, r1	; 0x01
	while (str[i]!='\0')
     9f6:	0e c0       	rjmp	.+28     	; 0xa14 <lcd_string+0x30>
	{
		lcd_data(str[i]);
     9f8:	89 81       	ldd	r24, Y+1	; 0x01
     9fa:	88 2f       	mov	r24, r24
     9fc:	90 e0       	ldi	r25, 0x00	; 0
     9fe:	2a 81       	ldd	r18, Y+2	; 0x02
     a00:	3b 81       	ldd	r19, Y+3	; 0x03
     a02:	82 0f       	add	r24, r18
     a04:	93 1f       	adc	r25, r19
     a06:	fc 01       	movw	r30, r24
     a08:	80 81       	ld	r24, Z
     a0a:	0e 94 90 02 	call	0x520	; 0x520 <lcd_data>
		i++;
     a0e:	89 81       	ldd	r24, Y+1	; 0x01
     a10:	8f 5f       	subi	r24, 0xFF	; 255
     a12:	89 83       	std	Y+1, r24	; 0x01
}

void lcd_string(char *str)
{
	char i = 0;
	while (str[i]!='\0')
     a14:	89 81       	ldd	r24, Y+1	; 0x01
     a16:	88 2f       	mov	r24, r24
     a18:	90 e0       	ldi	r25, 0x00	; 0
     a1a:	2a 81       	ldd	r18, Y+2	; 0x02
     a1c:	3b 81       	ldd	r19, Y+3	; 0x03
     a1e:	82 0f       	add	r24, r18
     a20:	93 1f       	adc	r25, r19
     a22:	fc 01       	movw	r30, r24
     a24:	80 81       	ld	r24, Z
     a26:	88 23       	and	r24, r24
     a28:	39 f7       	brne	.-50     	; 0x9f8 <lcd_string+0x14>
	{
		lcd_data(str[i]);
		i++;
	}
     a2a:	0f 90       	pop	r0
     a2c:	0f 90       	pop	r0
     a2e:	0f 90       	pop	r0
     a30:	cf 91       	pop	r28
     a32:	df 91       	pop	r29
     a34:	08 95       	ret

00000a36 <main>:
#include<util/delay.h>
#define lcd PORTD
#include<lib/lcd.h>

void main()
{
     a36:	0f 93       	push	r16
     a38:	1f 93       	push	r17
     a3a:	df 93       	push	r29
     a3c:	cf 93       	push	r28
     a3e:	cd b7       	in	r28, 0x3d	; 61
     a40:	de b7       	in	r29, 0x3e	; 62
     a42:	65 97       	sbiw	r28, 0x15	; 21
     a44:	0f b6       	in	r0, 0x3f	; 63
     a46:	f8 94       	cli
     a48:	de bf       	out	0x3e, r29	; 62
     a4a:	0f be       	out	0x3f, r0	; 63
     a4c:	cd bf       	out	0x3d, r28	; 61
	DDRD=255;
     a4e:	81 e3       	ldi	r24, 0x31	; 49
     a50:	90 e0       	ldi	r25, 0x00	; 0
     a52:	2f ef       	ldi	r18, 0xFF	; 255
     a54:	fc 01       	movw	r30, r24
     a56:	20 83       	st	Z, r18
	lcd_init();
     a58:	0e 94 df 04 	call	0x9be	; 0x9be <lcd_init>

	lcd_command(0x80);
     a5c:	80 e8       	ldi	r24, 0x80	; 128
     a5e:	0e 94 41 00 	call	0x82	; 0x82 <lcd_command>
	lcd_string("Value");
     a62:	80 e6       	ldi	r24, 0x60	; 96
     a64:	90 e0       	ldi	r25, 0x00	; 0
     a66:	0e 94 f2 04 	call	0x9e4	; 0x9e4 <lcd_string>

	lcd_command(0x8b);
     a6a:	8b e8       	ldi	r24, 0x8B	; 139
     a6c:	0e 94 41 00 	call	0x82	; 0x82 <lcd_command>
	lcd_string("ASCII");
     a70:	86 e6       	ldi	r24, 0x66	; 102
     a72:	90 e0       	ldi	r25, 0x00	; 0
     a74:	0e 94 f2 04 	call	0x9e4	; 0x9e4 <lcd_string>

	char i=0;
     a78:	19 82       	std	Y+1, r1	; 0x01

	for (int j=0; j<5; j++)
     a7a:	1b 82       	std	Y+3, r1	; 0x03
     a7c:	1a 82       	std	Y+2, r1	; 0x02
     a7e:	bf c0       	rjmp	.+382    	; 0xbfe <main+0x1c8>
	{
		lcd_command(0xcc);
     a80:	8c ec       	ldi	r24, 0xCC	; 204
     a82:	0e 94 41 00 	call	0x82	; 0x82 <lcd_command>
		lcd_data(j+48);
     a86:	8a 81       	ldd	r24, Y+2	; 0x02
     a88:	80 5d       	subi	r24, 0xD0	; 208
     a8a:	0e 94 90 02 	call	0x520	; 0x520 <lcd_data>
		for (int k=0; k<10; k++)
     a8e:	1d 82       	std	Y+5, r1	; 0x05
     a90:	1c 82       	std	Y+4, r1	; 0x04
     a92:	aa c0       	rjmp	.+340    	; 0xbe8 <main+0x1b2>
		{
			lcd_command(0xcd);
     a94:	8d ec       	ldi	r24, 0xCD	; 205
     a96:	0e 94 41 00 	call	0x82	; 0x82 <lcd_command>
			lcd_data(k+48);
     a9a:	8c 81       	ldd	r24, Y+4	; 0x04
     a9c:	80 5d       	subi	r24, 0xD0	; 208
     a9e:	0e 94 90 02 	call	0x520	; 0x520 <lcd_data>
			for (int l=0; l<10; l++)
     aa2:	1f 82       	std	Y+7, r1	; 0x07
     aa4:	1e 82       	std	Y+6, r1	; 0x06
     aa6:	95 c0       	rjmp	.+298    	; 0xbd2 <main+0x19c>
			{
				lcd_command(0xce);
     aa8:	8e ec       	ldi	r24, 0xCE	; 206
     aaa:	0e 94 41 00 	call	0x82	; 0x82 <lcd_command>
				lcd_data(l+48);
     aae:	8e 81       	ldd	r24, Y+6	; 0x06
     ab0:	80 5d       	subi	r24, 0xD0	; 208
     ab2:	0e 94 90 02 	call	0x520	; 0x520 <lcd_data>
				lcd_command(0xc1);
     ab6:	81 ec       	ldi	r24, 0xC1	; 193
     ab8:	0e 94 41 00 	call	0x82	; 0x82 <lcd_command>
				lcd_data(i);
     abc:	89 81       	ldd	r24, Y+1	; 0x01
     abe:	0e 94 90 02 	call	0x520	; 0x520 <lcd_data>
				i++;
     ac2:	89 81       	ldd	r24, Y+1	; 0x01
     ac4:	8f 5f       	subi	r24, 0xFF	; 255
     ac6:	89 83       	std	Y+1, r24	; 0x01
     ac8:	80 e0       	ldi	r24, 0x00	; 0
     aca:	90 e0       	ldi	r25, 0x00	; 0
     acc:	aa e7       	ldi	r26, 0x7A	; 122
     ace:	b3 e4       	ldi	r27, 0x43	; 67
     ad0:	88 87       	std	Y+8, r24	; 0x08
     ad2:	99 87       	std	Y+9, r25	; 0x09
     ad4:	aa 87       	std	Y+10, r26	; 0x0a
     ad6:	bb 87       	std	Y+11, r27	; 0x0b
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     ad8:	68 85       	ldd	r22, Y+8	; 0x08
     ada:	79 85       	ldd	r23, Y+9	; 0x09
     adc:	8a 85       	ldd	r24, Y+10	; 0x0a
     ade:	9b 85       	ldd	r25, Y+11	; 0x0b
     ae0:	20 e0       	ldi	r18, 0x00	; 0
     ae2:	30 e0       	ldi	r19, 0x00	; 0
     ae4:	4a e7       	ldi	r20, 0x7A	; 122
     ae6:	55 e4       	ldi	r21, 0x45	; 69
     ae8:	0e 94 e4 07 	call	0xfc8	; 0xfc8 <__mulsf3>
     aec:	dc 01       	movw	r26, r24
     aee:	cb 01       	movw	r24, r22
     af0:	8c 87       	std	Y+12, r24	; 0x0c
     af2:	9d 87       	std	Y+13, r25	; 0x0d
     af4:	ae 87       	std	Y+14, r26	; 0x0e
     af6:	bf 87       	std	Y+15, r27	; 0x0f
	if (__tmp < 1.0)
     af8:	11 e0       	ldi	r17, 0x01	; 1
     afa:	6c 85       	ldd	r22, Y+12	; 0x0c
     afc:	7d 85       	ldd	r23, Y+13	; 0x0d
     afe:	8e 85       	ldd	r24, Y+14	; 0x0e
     b00:	9f 85       	ldd	r25, Y+15	; 0x0f
     b02:	20 e0       	ldi	r18, 0x00	; 0
     b04:	30 e0       	ldi	r19, 0x00	; 0
     b06:	40 e8       	ldi	r20, 0x80	; 128
     b08:	5f e3       	ldi	r21, 0x3F	; 63
     b0a:	0e 94 3e 09 	call	0x127c	; 0x127c <__ltsf2>
     b0e:	88 23       	and	r24, r24
     b10:	0c f0       	brlt	.+2      	; 0xb14 <main+0xde>
     b12:	10 e0       	ldi	r17, 0x00	; 0
     b14:	11 23       	and	r17, r17
     b16:	29 f0       	breq	.+10     	; 0xb22 <main+0xec>
		__ticks = 1;
     b18:	81 e0       	ldi	r24, 0x01	; 1
     b1a:	90 e0       	ldi	r25, 0x00	; 0
     b1c:	99 8b       	std	Y+17, r25	; 0x11
     b1e:	88 8b       	std	Y+16, r24	; 0x10
     b20:	46 c0       	rjmp	.+140    	; 0xbae <main+0x178>
	else if (__tmp > 65535)
     b22:	11 e0       	ldi	r17, 0x01	; 1
     b24:	6c 85       	ldd	r22, Y+12	; 0x0c
     b26:	7d 85       	ldd	r23, Y+13	; 0x0d
     b28:	8e 85       	ldd	r24, Y+14	; 0x0e
     b2a:	9f 85       	ldd	r25, Y+15	; 0x0f
     b2c:	20 e0       	ldi	r18, 0x00	; 0
     b2e:	3f ef       	ldi	r19, 0xFF	; 255
     b30:	4f e7       	ldi	r20, 0x7F	; 127
     b32:	57 e4       	ldi	r21, 0x47	; 71
     b34:	0e 94 de 08 	call	0x11bc	; 0x11bc <__gtsf2>
     b38:	18 16       	cp	r1, r24
     b3a:	0c f0       	brlt	.+2      	; 0xb3e <main+0x108>
     b3c:	10 e0       	ldi	r17, 0x00	; 0
     b3e:	11 23       	and	r17, r17
     b40:	61 f1       	breq	.+88     	; 0xb9a <main+0x164>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     b42:	68 85       	ldd	r22, Y+8	; 0x08
     b44:	79 85       	ldd	r23, Y+9	; 0x09
     b46:	8a 85       	ldd	r24, Y+10	; 0x0a
     b48:	9b 85       	ldd	r25, Y+11	; 0x0b
     b4a:	20 e0       	ldi	r18, 0x00	; 0
     b4c:	30 e0       	ldi	r19, 0x00	; 0
     b4e:	40 e2       	ldi	r20, 0x20	; 32
     b50:	51 e4       	ldi	r21, 0x41	; 65
     b52:	0e 94 e4 07 	call	0xfc8	; 0xfc8 <__mulsf3>
     b56:	dc 01       	movw	r26, r24
     b58:	cb 01       	movw	r24, r22
     b5a:	bc 01       	movw	r22, r24
     b5c:	cd 01       	movw	r24, r26
     b5e:	0e 94 10 06 	call	0xc20	; 0xc20 <__fixunssfsi>
     b62:	dc 01       	movw	r26, r24
     b64:	cb 01       	movw	r24, r22
     b66:	99 8b       	std	Y+17, r25	; 0x11
     b68:	88 8b       	std	Y+16, r24	; 0x10
     b6a:	12 c0       	rjmp	.+36     	; 0xb90 <main+0x15a>
     b6c:	80 e9       	ldi	r24, 0x90	; 144
     b6e:	91 e0       	ldi	r25, 0x01	; 1
     b70:	9b 8b       	std	Y+19, r25	; 0x13
     b72:	8a 8b       	std	Y+18, r24	; 0x12
     b74:	8a 89       	ldd	r24, Y+18	; 0x12
     b76:	9b 89       	ldd	r25, Y+19	; 0x13
     b78:	8c 01       	movw	r16, r24
     b7a:	c8 01       	movw	r24, r16
     b7c:	01 97       	sbiw	r24, 0x01	; 1
     b7e:	f1 f7       	brne	.-4      	; 0xb7c <main+0x146>
     b80:	8c 01       	movw	r16, r24
     b82:	1b 8b       	std	Y+19, r17	; 0x13
     b84:	0a 8b       	std	Y+18, r16	; 0x12
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     b86:	88 89       	ldd	r24, Y+16	; 0x10
     b88:	99 89       	ldd	r25, Y+17	; 0x11
     b8a:	01 97       	sbiw	r24, 0x01	; 1
     b8c:	99 8b       	std	Y+17, r25	; 0x11
     b8e:	88 8b       	std	Y+16, r24	; 0x10
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     b90:	88 89       	ldd	r24, Y+16	; 0x10
     b92:	99 89       	ldd	r25, Y+17	; 0x11
     b94:	00 97       	sbiw	r24, 0x00	; 0
     b96:	51 f7       	brne	.-44     	; 0xb6c <main+0x136>
     b98:	17 c0       	rjmp	.+46     	; 0xbc8 <main+0x192>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     b9a:	6c 85       	ldd	r22, Y+12	; 0x0c
     b9c:	7d 85       	ldd	r23, Y+13	; 0x0d
     b9e:	8e 85       	ldd	r24, Y+14	; 0x0e
     ba0:	9f 85       	ldd	r25, Y+15	; 0x0f
     ba2:	0e 94 10 06 	call	0xc20	; 0xc20 <__fixunssfsi>
     ba6:	dc 01       	movw	r26, r24
     ba8:	cb 01       	movw	r24, r22
     baa:	99 8b       	std	Y+17, r25	; 0x11
     bac:	88 8b       	std	Y+16, r24	; 0x10
     bae:	88 89       	ldd	r24, Y+16	; 0x10
     bb0:	99 89       	ldd	r25, Y+17	; 0x11
     bb2:	9d 8b       	std	Y+21, r25	; 0x15
     bb4:	8c 8b       	std	Y+20, r24	; 0x14
     bb6:	8c 89       	ldd	r24, Y+20	; 0x14
     bb8:	9d 89       	ldd	r25, Y+21	; 0x15
     bba:	8c 01       	movw	r16, r24
     bbc:	f8 01       	movw	r30, r16
     bbe:	31 97       	sbiw	r30, 0x01	; 1
     bc0:	f1 f7       	brne	.-4      	; 0xbbe <main+0x188>
     bc2:	8f 01       	movw	r16, r30
     bc4:	1d 8b       	std	Y+21, r17	; 0x15
     bc6:	0c 8b       	std	Y+20, r16	; 0x14
		lcd_data(j+48);
		for (int k=0; k<10; k++)
		{
			lcd_command(0xcd);
			lcd_data(k+48);
			for (int l=0; l<10; l++)
     bc8:	8e 81       	ldd	r24, Y+6	; 0x06
     bca:	9f 81       	ldd	r25, Y+7	; 0x07
     bcc:	01 96       	adiw	r24, 0x01	; 1
     bce:	9f 83       	std	Y+7, r25	; 0x07
     bd0:	8e 83       	std	Y+6, r24	; 0x06
     bd2:	8e 81       	ldd	r24, Y+6	; 0x06
     bd4:	9f 81       	ldd	r25, Y+7	; 0x07
     bd6:	8a 30       	cpi	r24, 0x0A	; 10
     bd8:	91 05       	cpc	r25, r1
     bda:	0c f4       	brge	.+2      	; 0xbde <main+0x1a8>
     bdc:	65 cf       	rjmp	.-310    	; 0xaa8 <main+0x72>

	for (int j=0; j<5; j++)
	{
		lcd_command(0xcc);
		lcd_data(j+48);
		for (int k=0; k<10; k++)
     bde:	8c 81       	ldd	r24, Y+4	; 0x04
     be0:	9d 81       	ldd	r25, Y+5	; 0x05
     be2:	01 96       	adiw	r24, 0x01	; 1
     be4:	9d 83       	std	Y+5, r25	; 0x05
     be6:	8c 83       	std	Y+4, r24	; 0x04
     be8:	8c 81       	ldd	r24, Y+4	; 0x04
     bea:	9d 81       	ldd	r25, Y+5	; 0x05
     bec:	8a 30       	cpi	r24, 0x0A	; 10
     bee:	91 05       	cpc	r25, r1
     bf0:	0c f4       	brge	.+2      	; 0xbf4 <main+0x1be>
     bf2:	50 cf       	rjmp	.-352    	; 0xa94 <main+0x5e>
	lcd_command(0x8b);
	lcd_string("ASCII");

	char i=0;

	for (int j=0; j<5; j++)
     bf4:	8a 81       	ldd	r24, Y+2	; 0x02
     bf6:	9b 81       	ldd	r25, Y+3	; 0x03
     bf8:	01 96       	adiw	r24, 0x01	; 1
     bfa:	9b 83       	std	Y+3, r25	; 0x03
     bfc:	8a 83       	std	Y+2, r24	; 0x02
     bfe:	8a 81       	ldd	r24, Y+2	; 0x02
     c00:	9b 81       	ldd	r25, Y+3	; 0x03
     c02:	85 30       	cpi	r24, 0x05	; 5
     c04:	91 05       	cpc	r25, r1
     c06:	0c f4       	brge	.+2      	; 0xc0a <main+0x1d4>
     c08:	3b cf       	rjmp	.-394    	; 0xa80 <main+0x4a>
				i++;
				_delay_ms(250);
			}
		}
	}
     c0a:	65 96       	adiw	r28, 0x15	; 21
     c0c:	0f b6       	in	r0, 0x3f	; 63
     c0e:	f8 94       	cli
     c10:	de bf       	out	0x3e, r29	; 62
     c12:	0f be       	out	0x3f, r0	; 63
     c14:	cd bf       	out	0x3d, r28	; 61
     c16:	cf 91       	pop	r28
     c18:	df 91       	pop	r29
     c1a:	1f 91       	pop	r17
     c1c:	0f 91       	pop	r16
     c1e:	08 95       	ret

00000c20 <__fixunssfsi>:
     c20:	ef 92       	push	r14
     c22:	ff 92       	push	r15
     c24:	0f 93       	push	r16
     c26:	1f 93       	push	r17
     c28:	7b 01       	movw	r14, r22
     c2a:	8c 01       	movw	r16, r24
     c2c:	20 e0       	ldi	r18, 0x00	; 0
     c2e:	30 e0       	ldi	r19, 0x00	; 0
     c30:	40 e0       	ldi	r20, 0x00	; 0
     c32:	5f e4       	ldi	r21, 0x4F	; 79
     c34:	0e 94 0e 09 	call	0x121c	; 0x121c <__gesf2>
     c38:	87 fd       	sbrc	r24, 7
     c3a:	11 c0       	rjmp	.+34     	; 0xc5e <__fixunssfsi+0x3e>
     c3c:	c8 01       	movw	r24, r16
     c3e:	b7 01       	movw	r22, r14
     c40:	20 e0       	ldi	r18, 0x00	; 0
     c42:	30 e0       	ldi	r19, 0x00	; 0
     c44:	40 e0       	ldi	r20, 0x00	; 0
     c46:	5f e4       	ldi	r21, 0x4F	; 79
     c48:	0e 94 b3 07 	call	0xf66	; 0xf66 <__subsf3>
     c4c:	0e 94 6e 09 	call	0x12dc	; 0x12dc <__fixsfsi>
     c50:	9b 01       	movw	r18, r22
     c52:	ac 01       	movw	r20, r24
     c54:	20 50       	subi	r18, 0x00	; 0
     c56:	30 40       	sbci	r19, 0x00	; 0
     c58:	40 40       	sbci	r20, 0x00	; 0
     c5a:	50 48       	sbci	r21, 0x80	; 128
     c5c:	06 c0       	rjmp	.+12     	; 0xc6a <__fixunssfsi+0x4a>
     c5e:	c8 01       	movw	r24, r16
     c60:	b7 01       	movw	r22, r14
     c62:	0e 94 6e 09 	call	0x12dc	; 0x12dc <__fixsfsi>
     c66:	9b 01       	movw	r18, r22
     c68:	ac 01       	movw	r20, r24
     c6a:	b9 01       	movw	r22, r18
     c6c:	ca 01       	movw	r24, r20
     c6e:	1f 91       	pop	r17
     c70:	0f 91       	pop	r16
     c72:	ff 90       	pop	r15
     c74:	ef 90       	pop	r14
     c76:	08 95       	ret

00000c78 <_fpadd_parts>:
     c78:	a0 e0       	ldi	r26, 0x00	; 0
     c7a:	b0 e0       	ldi	r27, 0x00	; 0
     c7c:	e2 e4       	ldi	r30, 0x42	; 66
     c7e:	f6 e0       	ldi	r31, 0x06	; 6
     c80:	0c 94 54 0b 	jmp	0x16a8	; 0x16a8 <__prologue_saves__+0x8>
     c84:	fc 01       	movw	r30, r24
     c86:	ea 01       	movw	r28, r20
     c88:	80 81       	ld	r24, Z
     c8a:	82 30       	cpi	r24, 0x02	; 2
     c8c:	08 f4       	brcc	.+2      	; 0xc90 <_fpadd_parts+0x18>
     c8e:	38 c1       	rjmp	.+624    	; 0xf00 <_fpadd_parts+0x288>
     c90:	db 01       	movw	r26, r22
     c92:	9c 91       	ld	r25, X
     c94:	92 30       	cpi	r25, 0x02	; 2
     c96:	08 f4       	brcc	.+2      	; 0xc9a <_fpadd_parts+0x22>
     c98:	30 c1       	rjmp	.+608    	; 0xefa <_fpadd_parts+0x282>
     c9a:	84 30       	cpi	r24, 0x04	; 4
     c9c:	59 f4       	brne	.+22     	; 0xcb4 <_fpadd_parts+0x3c>
     c9e:	94 30       	cpi	r25, 0x04	; 4
     ca0:	09 f0       	breq	.+2      	; 0xca4 <_fpadd_parts+0x2c>
     ca2:	2e c1       	rjmp	.+604    	; 0xf00 <_fpadd_parts+0x288>
     ca4:	91 81       	ldd	r25, Z+1	; 0x01
     ca6:	11 96       	adiw	r26, 0x01	; 1
     ca8:	8c 91       	ld	r24, X
     caa:	11 97       	sbiw	r26, 0x01	; 1
     cac:	98 17       	cp	r25, r24
     cae:	09 f0       	breq	.+2      	; 0xcb2 <_fpadd_parts+0x3a>
     cb0:	21 c1       	rjmp	.+578    	; 0xef4 <_fpadd_parts+0x27c>
     cb2:	26 c1       	rjmp	.+588    	; 0xf00 <_fpadd_parts+0x288>
     cb4:	94 30       	cpi	r25, 0x04	; 4
     cb6:	09 f4       	brne	.+2      	; 0xcba <_fpadd_parts+0x42>
     cb8:	20 c1       	rjmp	.+576    	; 0xefa <_fpadd_parts+0x282>
     cba:	92 30       	cpi	r25, 0x02	; 2
     cbc:	b1 f4       	brne	.+44     	; 0xcea <_fpadd_parts+0x72>
     cbe:	82 30       	cpi	r24, 0x02	; 2
     cc0:	09 f0       	breq	.+2      	; 0xcc4 <_fpadd_parts+0x4c>
     cc2:	1e c1       	rjmp	.+572    	; 0xf00 <_fpadd_parts+0x288>
     cc4:	ca 01       	movw	r24, r20
     cc6:	af 01       	movw	r20, r30
     cc8:	28 e0       	ldi	r18, 0x08	; 8
     cca:	da 01       	movw	r26, r20
     ccc:	0d 90       	ld	r0, X+
     cce:	ad 01       	movw	r20, r26
     cd0:	dc 01       	movw	r26, r24
     cd2:	0d 92       	st	X+, r0
     cd4:	cd 01       	movw	r24, r26
     cd6:	21 50       	subi	r18, 0x01	; 1
     cd8:	c1 f7       	brne	.-16     	; 0xcca <_fpadd_parts+0x52>
     cda:	db 01       	movw	r26, r22
     cdc:	11 96       	adiw	r26, 0x01	; 1
     cde:	8c 91       	ld	r24, X
     ce0:	11 97       	sbiw	r26, 0x01	; 1
     ce2:	91 81       	ldd	r25, Z+1	; 0x01
     ce4:	89 23       	and	r24, r25
     ce6:	89 83       	std	Y+1, r24	; 0x01
     ce8:	0a c1       	rjmp	.+532    	; 0xefe <_fpadd_parts+0x286>
     cea:	82 30       	cpi	r24, 0x02	; 2
     cec:	09 f4       	brne	.+2      	; 0xcf0 <_fpadd_parts+0x78>
     cee:	05 c1       	rjmp	.+522    	; 0xefa <_fpadd_parts+0x282>
     cf0:	c2 80       	ldd	r12, Z+2	; 0x02
     cf2:	d3 80       	ldd	r13, Z+3	; 0x03
     cf4:	db 01       	movw	r26, r22
     cf6:	12 96       	adiw	r26, 0x02	; 2
     cf8:	6d 90       	ld	r6, X+
     cfa:	7c 90       	ld	r7, X
     cfc:	13 97       	sbiw	r26, 0x03	; 3
     cfe:	24 81       	ldd	r18, Z+4	; 0x04
     d00:	35 81       	ldd	r19, Z+5	; 0x05
     d02:	46 81       	ldd	r20, Z+6	; 0x06
     d04:	57 81       	ldd	r21, Z+7	; 0x07
     d06:	14 96       	adiw	r26, 0x04	; 4
     d08:	ed 90       	ld	r14, X+
     d0a:	fd 90       	ld	r15, X+
     d0c:	0d 91       	ld	r16, X+
     d0e:	1c 91       	ld	r17, X
     d10:	17 97       	sbiw	r26, 0x07	; 7
     d12:	c6 01       	movw	r24, r12
     d14:	86 19       	sub	r24, r6
     d16:	97 09       	sbc	r25, r7
     d18:	5c 01       	movw	r10, r24
     d1a:	97 ff       	sbrs	r25, 7
     d1c:	04 c0       	rjmp	.+8      	; 0xd26 <_fpadd_parts+0xae>
     d1e:	aa 24       	eor	r10, r10
     d20:	bb 24       	eor	r11, r11
     d22:	a8 1a       	sub	r10, r24
     d24:	b9 0a       	sbc	r11, r25
     d26:	b0 e2       	ldi	r27, 0x20	; 32
     d28:	ab 16       	cp	r10, r27
     d2a:	b1 04       	cpc	r11, r1
     d2c:	0c f0       	brlt	.+2      	; 0xd30 <_fpadd_parts+0xb8>
     d2e:	61 c0       	rjmp	.+194    	; 0xdf2 <_fpadd_parts+0x17a>
     d30:	18 16       	cp	r1, r24
     d32:	19 06       	cpc	r1, r25
     d34:	6c f5       	brge	.+90     	; 0xd90 <_fpadd_parts+0x118>
     d36:	37 01       	movw	r6, r14
     d38:	48 01       	movw	r8, r16
     d3a:	0a 2c       	mov	r0, r10
     d3c:	04 c0       	rjmp	.+8      	; 0xd46 <_fpadd_parts+0xce>
     d3e:	96 94       	lsr	r9
     d40:	87 94       	ror	r8
     d42:	77 94       	ror	r7
     d44:	67 94       	ror	r6
     d46:	0a 94       	dec	r0
     d48:	d2 f7       	brpl	.-12     	; 0xd3e <_fpadd_parts+0xc6>
     d4a:	81 e0       	ldi	r24, 0x01	; 1
     d4c:	90 e0       	ldi	r25, 0x00	; 0
     d4e:	a0 e0       	ldi	r26, 0x00	; 0
     d50:	b0 e0       	ldi	r27, 0x00	; 0
     d52:	0a 2c       	mov	r0, r10
     d54:	04 c0       	rjmp	.+8      	; 0xd5e <_fpadd_parts+0xe6>
     d56:	88 0f       	add	r24, r24
     d58:	99 1f       	adc	r25, r25
     d5a:	aa 1f       	adc	r26, r26
     d5c:	bb 1f       	adc	r27, r27
     d5e:	0a 94       	dec	r0
     d60:	d2 f7       	brpl	.-12     	; 0xd56 <_fpadd_parts+0xde>
     d62:	01 97       	sbiw	r24, 0x01	; 1
     d64:	a1 09       	sbc	r26, r1
     d66:	b1 09       	sbc	r27, r1
     d68:	8e 21       	and	r24, r14
     d6a:	9f 21       	and	r25, r15
     d6c:	a0 23       	and	r26, r16
     d6e:	b1 23       	and	r27, r17
     d70:	ee 24       	eor	r14, r14
     d72:	ff 24       	eor	r15, r15
     d74:	87 01       	movw	r16, r14
     d76:	e3 94       	inc	r14
     d78:	00 97       	sbiw	r24, 0x00	; 0
     d7a:	a1 05       	cpc	r26, r1
     d7c:	b1 05       	cpc	r27, r1
     d7e:	19 f4       	brne	.+6      	; 0xd86 <_fpadd_parts+0x10e>
     d80:	ee 24       	eor	r14, r14
     d82:	ff 24       	eor	r15, r15
     d84:	87 01       	movw	r16, r14
     d86:	e6 28       	or	r14, r6
     d88:	f7 28       	or	r15, r7
     d8a:	08 29       	or	r16, r8
     d8c:	19 29       	or	r17, r9
     d8e:	3c c0       	rjmp	.+120    	; 0xe08 <_fpadd_parts+0x190>
     d90:	00 97       	sbiw	r24, 0x00	; 0
     d92:	d1 f1       	breq	.+116    	; 0xe08 <_fpadd_parts+0x190>
     d94:	ca 0c       	add	r12, r10
     d96:	db 1c       	adc	r13, r11
     d98:	39 01       	movw	r6, r18
     d9a:	4a 01       	movw	r8, r20
     d9c:	0a 2c       	mov	r0, r10
     d9e:	04 c0       	rjmp	.+8      	; 0xda8 <_fpadd_parts+0x130>
     da0:	96 94       	lsr	r9
     da2:	87 94       	ror	r8
     da4:	77 94       	ror	r7
     da6:	67 94       	ror	r6
     da8:	0a 94       	dec	r0
     daa:	d2 f7       	brpl	.-12     	; 0xda0 <_fpadd_parts+0x128>
     dac:	81 e0       	ldi	r24, 0x01	; 1
     dae:	90 e0       	ldi	r25, 0x00	; 0
     db0:	a0 e0       	ldi	r26, 0x00	; 0
     db2:	b0 e0       	ldi	r27, 0x00	; 0
     db4:	0a 2c       	mov	r0, r10
     db6:	04 c0       	rjmp	.+8      	; 0xdc0 <_fpadd_parts+0x148>
     db8:	88 0f       	add	r24, r24
     dba:	99 1f       	adc	r25, r25
     dbc:	aa 1f       	adc	r26, r26
     dbe:	bb 1f       	adc	r27, r27
     dc0:	0a 94       	dec	r0
     dc2:	d2 f7       	brpl	.-12     	; 0xdb8 <_fpadd_parts+0x140>
     dc4:	01 97       	sbiw	r24, 0x01	; 1
     dc6:	a1 09       	sbc	r26, r1
     dc8:	b1 09       	sbc	r27, r1
     dca:	82 23       	and	r24, r18
     dcc:	93 23       	and	r25, r19
     dce:	a4 23       	and	r26, r20
     dd0:	b5 23       	and	r27, r21
     dd2:	21 e0       	ldi	r18, 0x01	; 1
     dd4:	30 e0       	ldi	r19, 0x00	; 0
     dd6:	40 e0       	ldi	r20, 0x00	; 0
     dd8:	50 e0       	ldi	r21, 0x00	; 0
     dda:	00 97       	sbiw	r24, 0x00	; 0
     ddc:	a1 05       	cpc	r26, r1
     dde:	b1 05       	cpc	r27, r1
     de0:	19 f4       	brne	.+6      	; 0xde8 <_fpadd_parts+0x170>
     de2:	20 e0       	ldi	r18, 0x00	; 0
     de4:	30 e0       	ldi	r19, 0x00	; 0
     de6:	a9 01       	movw	r20, r18
     de8:	26 29       	or	r18, r6
     dea:	37 29       	or	r19, r7
     dec:	48 29       	or	r20, r8
     dee:	59 29       	or	r21, r9
     df0:	0b c0       	rjmp	.+22     	; 0xe08 <_fpadd_parts+0x190>
     df2:	6c 14       	cp	r6, r12
     df4:	7d 04       	cpc	r7, r13
     df6:	24 f4       	brge	.+8      	; 0xe00 <_fpadd_parts+0x188>
     df8:	ee 24       	eor	r14, r14
     dfa:	ff 24       	eor	r15, r15
     dfc:	87 01       	movw	r16, r14
     dfe:	04 c0       	rjmp	.+8      	; 0xe08 <_fpadd_parts+0x190>
     e00:	63 01       	movw	r12, r6
     e02:	20 e0       	ldi	r18, 0x00	; 0
     e04:	30 e0       	ldi	r19, 0x00	; 0
     e06:	a9 01       	movw	r20, r18
     e08:	81 81       	ldd	r24, Z+1	; 0x01
     e0a:	fb 01       	movw	r30, r22
     e0c:	91 81       	ldd	r25, Z+1	; 0x01
     e0e:	89 17       	cp	r24, r25
     e10:	09 f4       	brne	.+2      	; 0xe14 <_fpadd_parts+0x19c>
     e12:	45 c0       	rjmp	.+138    	; 0xe9e <_fpadd_parts+0x226>
     e14:	88 23       	and	r24, r24
     e16:	49 f0       	breq	.+18     	; 0xe2a <_fpadd_parts+0x1b2>
     e18:	d8 01       	movw	r26, r16
     e1a:	c7 01       	movw	r24, r14
     e1c:	82 1b       	sub	r24, r18
     e1e:	93 0b       	sbc	r25, r19
     e20:	a4 0b       	sbc	r26, r20
     e22:	b5 0b       	sbc	r27, r21
     e24:	9c 01       	movw	r18, r24
     e26:	ad 01       	movw	r20, r26
     e28:	04 c0       	rjmp	.+8      	; 0xe32 <_fpadd_parts+0x1ba>
     e2a:	2e 19       	sub	r18, r14
     e2c:	3f 09       	sbc	r19, r15
     e2e:	40 0b       	sbc	r20, r16
     e30:	51 0b       	sbc	r21, r17
     e32:	57 fd       	sbrc	r21, 7
     e34:	04 c0       	rjmp	.+8      	; 0xe3e <_fpadd_parts+0x1c6>
     e36:	19 82       	std	Y+1, r1	; 0x01
     e38:	db 82       	std	Y+3, r13	; 0x03
     e3a:	ca 82       	std	Y+2, r12	; 0x02
     e3c:	0b c0       	rjmp	.+22     	; 0xe54 <_fpadd_parts+0x1dc>
     e3e:	81 e0       	ldi	r24, 0x01	; 1
     e40:	89 83       	std	Y+1, r24	; 0x01
     e42:	db 82       	std	Y+3, r13	; 0x03
     e44:	ca 82       	std	Y+2, r12	; 0x02
     e46:	50 95       	com	r21
     e48:	40 95       	com	r20
     e4a:	30 95       	com	r19
     e4c:	21 95       	neg	r18
     e4e:	3f 4f       	sbci	r19, 0xFF	; 255
     e50:	4f 4f       	sbci	r20, 0xFF	; 255
     e52:	5f 4f       	sbci	r21, 0xFF	; 255
     e54:	2c 83       	std	Y+4, r18	; 0x04
     e56:	3d 83       	std	Y+5, r19	; 0x05
     e58:	4e 83       	std	Y+6, r20	; 0x06
     e5a:	5f 83       	std	Y+7, r21	; 0x07
     e5c:	0d c0       	rjmp	.+26     	; 0xe78 <_fpadd_parts+0x200>
     e5e:	88 0f       	add	r24, r24
     e60:	99 1f       	adc	r25, r25
     e62:	aa 1f       	adc	r26, r26
     e64:	bb 1f       	adc	r27, r27
     e66:	8c 83       	std	Y+4, r24	; 0x04
     e68:	9d 83       	std	Y+5, r25	; 0x05
     e6a:	ae 83       	std	Y+6, r26	; 0x06
     e6c:	bf 83       	std	Y+7, r27	; 0x07
     e6e:	8a 81       	ldd	r24, Y+2	; 0x02
     e70:	9b 81       	ldd	r25, Y+3	; 0x03
     e72:	01 97       	sbiw	r24, 0x01	; 1
     e74:	9b 83       	std	Y+3, r25	; 0x03
     e76:	8a 83       	std	Y+2, r24	; 0x02
     e78:	8c 81       	ldd	r24, Y+4	; 0x04
     e7a:	9d 81       	ldd	r25, Y+5	; 0x05
     e7c:	ae 81       	ldd	r26, Y+6	; 0x06
     e7e:	bf 81       	ldd	r27, Y+7	; 0x07
     e80:	9c 01       	movw	r18, r24
     e82:	ad 01       	movw	r20, r26
     e84:	21 50       	subi	r18, 0x01	; 1
     e86:	30 40       	sbci	r19, 0x00	; 0
     e88:	40 40       	sbci	r20, 0x00	; 0
     e8a:	50 40       	sbci	r21, 0x00	; 0
     e8c:	2f 3f       	cpi	r18, 0xFF	; 255
     e8e:	ef ef       	ldi	r30, 0xFF	; 255
     e90:	3e 07       	cpc	r19, r30
     e92:	ef ef       	ldi	r30, 0xFF	; 255
     e94:	4e 07       	cpc	r20, r30
     e96:	ef e3       	ldi	r30, 0x3F	; 63
     e98:	5e 07       	cpc	r21, r30
     e9a:	08 f3       	brcs	.-62     	; 0xe5e <_fpadd_parts+0x1e6>
     e9c:	0b c0       	rjmp	.+22     	; 0xeb4 <_fpadd_parts+0x23c>
     e9e:	89 83       	std	Y+1, r24	; 0x01
     ea0:	db 82       	std	Y+3, r13	; 0x03
     ea2:	ca 82       	std	Y+2, r12	; 0x02
     ea4:	2e 0d       	add	r18, r14
     ea6:	3f 1d       	adc	r19, r15
     ea8:	40 1f       	adc	r20, r16
     eaa:	51 1f       	adc	r21, r17
     eac:	2c 83       	std	Y+4, r18	; 0x04
     eae:	3d 83       	std	Y+5, r19	; 0x05
     eb0:	4e 83       	std	Y+6, r20	; 0x06
     eb2:	5f 83       	std	Y+7, r21	; 0x07
     eb4:	83 e0       	ldi	r24, 0x03	; 3
     eb6:	88 83       	st	Y, r24
     eb8:	2c 81       	ldd	r18, Y+4	; 0x04
     eba:	3d 81       	ldd	r19, Y+5	; 0x05
     ebc:	4e 81       	ldd	r20, Y+6	; 0x06
     ebe:	5f 81       	ldd	r21, Y+7	; 0x07
     ec0:	57 ff       	sbrs	r21, 7
     ec2:	1d c0       	rjmp	.+58     	; 0xefe <_fpadd_parts+0x286>
     ec4:	da 01       	movw	r26, r20
     ec6:	c9 01       	movw	r24, r18
     ec8:	81 70       	andi	r24, 0x01	; 1
     eca:	90 70       	andi	r25, 0x00	; 0
     ecc:	a0 70       	andi	r26, 0x00	; 0
     ece:	b0 70       	andi	r27, 0x00	; 0
     ed0:	56 95       	lsr	r21
     ed2:	47 95       	ror	r20
     ed4:	37 95       	ror	r19
     ed6:	27 95       	ror	r18
     ed8:	82 2b       	or	r24, r18
     eda:	93 2b       	or	r25, r19
     edc:	a4 2b       	or	r26, r20
     ede:	b5 2b       	or	r27, r21
     ee0:	8c 83       	std	Y+4, r24	; 0x04
     ee2:	9d 83       	std	Y+5, r25	; 0x05
     ee4:	ae 83       	std	Y+6, r26	; 0x06
     ee6:	bf 83       	std	Y+7, r27	; 0x07
     ee8:	8a 81       	ldd	r24, Y+2	; 0x02
     eea:	9b 81       	ldd	r25, Y+3	; 0x03
     eec:	01 96       	adiw	r24, 0x01	; 1
     eee:	9b 83       	std	Y+3, r25	; 0x03
     ef0:	8a 83       	std	Y+2, r24	; 0x02
     ef2:	05 c0       	rjmp	.+10     	; 0xefe <_fpadd_parts+0x286>
     ef4:	ec e6       	ldi	r30, 0x6C	; 108
     ef6:	f0 e0       	ldi	r31, 0x00	; 0
     ef8:	03 c0       	rjmp	.+6      	; 0xf00 <_fpadd_parts+0x288>
     efa:	fb 01       	movw	r30, r22
     efc:	01 c0       	rjmp	.+2      	; 0xf00 <_fpadd_parts+0x288>
     efe:	fe 01       	movw	r30, r28
     f00:	cf 01       	movw	r24, r30
     f02:	cd b7       	in	r28, 0x3d	; 61
     f04:	de b7       	in	r29, 0x3e	; 62
     f06:	ee e0       	ldi	r30, 0x0E	; 14
     f08:	0c 94 70 0b 	jmp	0x16e0	; 0x16e0 <__epilogue_restores__+0x8>

00000f0c <__addsf3>:
     f0c:	a0 e2       	ldi	r26, 0x20	; 32
     f0e:	b0 e0       	ldi	r27, 0x00	; 0
     f10:	ec e8       	ldi	r30, 0x8C	; 140
     f12:	f7 e0       	ldi	r31, 0x07	; 7
     f14:	0c 94 5c 0b 	jmp	0x16b8	; 0x16b8 <__prologue_saves__+0x18>
     f18:	69 83       	std	Y+1, r22	; 0x01
     f1a:	7a 83       	std	Y+2, r23	; 0x02
     f1c:	8b 83       	std	Y+3, r24	; 0x03
     f1e:	9c 83       	std	Y+4, r25	; 0x04
     f20:	2d 83       	std	Y+5, r18	; 0x05
     f22:	3e 83       	std	Y+6, r19	; 0x06
     f24:	4f 83       	std	Y+7, r20	; 0x07
     f26:	58 87       	std	Y+8, r21	; 0x08
     f28:	89 e0       	ldi	r24, 0x09	; 9
     f2a:	e8 2e       	mov	r14, r24
     f2c:	f1 2c       	mov	r15, r1
     f2e:	ec 0e       	add	r14, r28
     f30:	fd 1e       	adc	r15, r29
     f32:	ce 01       	movw	r24, r28
     f34:	01 96       	adiw	r24, 0x01	; 1
     f36:	b7 01       	movw	r22, r14
     f38:	0e 94 8e 0a 	call	0x151c	; 0x151c <__unpack_f>
     f3c:	8e 01       	movw	r16, r28
     f3e:	0f 5e       	subi	r16, 0xEF	; 239
     f40:	1f 4f       	sbci	r17, 0xFF	; 255
     f42:	ce 01       	movw	r24, r28
     f44:	05 96       	adiw	r24, 0x05	; 5
     f46:	b8 01       	movw	r22, r16
     f48:	0e 94 8e 0a 	call	0x151c	; 0x151c <__unpack_f>
     f4c:	c7 01       	movw	r24, r14
     f4e:	b8 01       	movw	r22, r16
     f50:	ae 01       	movw	r20, r28
     f52:	47 5e       	subi	r20, 0xE7	; 231
     f54:	5f 4f       	sbci	r21, 0xFF	; 255
     f56:	0e 94 3c 06 	call	0xc78	; 0xc78 <_fpadd_parts>
     f5a:	0e 94 c0 09 	call	0x1380	; 0x1380 <__pack_f>
     f5e:	a0 96       	adiw	r28, 0x20	; 32
     f60:	e6 e0       	ldi	r30, 0x06	; 6
     f62:	0c 94 78 0b 	jmp	0x16f0	; 0x16f0 <__epilogue_restores__+0x18>

00000f66 <__subsf3>:
     f66:	a0 e2       	ldi	r26, 0x20	; 32
     f68:	b0 e0       	ldi	r27, 0x00	; 0
     f6a:	e9 eb       	ldi	r30, 0xB9	; 185
     f6c:	f7 e0       	ldi	r31, 0x07	; 7
     f6e:	0c 94 5c 0b 	jmp	0x16b8	; 0x16b8 <__prologue_saves__+0x18>
     f72:	69 83       	std	Y+1, r22	; 0x01
     f74:	7a 83       	std	Y+2, r23	; 0x02
     f76:	8b 83       	std	Y+3, r24	; 0x03
     f78:	9c 83       	std	Y+4, r25	; 0x04
     f7a:	2d 83       	std	Y+5, r18	; 0x05
     f7c:	3e 83       	std	Y+6, r19	; 0x06
     f7e:	4f 83       	std	Y+7, r20	; 0x07
     f80:	58 87       	std	Y+8, r21	; 0x08
     f82:	8e 01       	movw	r16, r28
     f84:	07 5f       	subi	r16, 0xF7	; 247
     f86:	1f 4f       	sbci	r17, 0xFF	; 255
     f88:	ce 01       	movw	r24, r28
     f8a:	01 96       	adiw	r24, 0x01	; 1
     f8c:	b8 01       	movw	r22, r16
     f8e:	0e 94 8e 0a 	call	0x151c	; 0x151c <__unpack_f>
     f92:	91 e1       	ldi	r25, 0x11	; 17
     f94:	e9 2e       	mov	r14, r25
     f96:	f1 2c       	mov	r15, r1
     f98:	ec 0e       	add	r14, r28
     f9a:	fd 1e       	adc	r15, r29
     f9c:	ce 01       	movw	r24, r28
     f9e:	05 96       	adiw	r24, 0x05	; 5
     fa0:	b7 01       	movw	r22, r14
     fa2:	0e 94 8e 0a 	call	0x151c	; 0x151c <__unpack_f>
     fa6:	8a 89       	ldd	r24, Y+18	; 0x12
     fa8:	91 e0       	ldi	r25, 0x01	; 1
     faa:	89 27       	eor	r24, r25
     fac:	8a 8b       	std	Y+18, r24	; 0x12
     fae:	c8 01       	movw	r24, r16
     fb0:	b7 01       	movw	r22, r14
     fb2:	ae 01       	movw	r20, r28
     fb4:	47 5e       	subi	r20, 0xE7	; 231
     fb6:	5f 4f       	sbci	r21, 0xFF	; 255
     fb8:	0e 94 3c 06 	call	0xc78	; 0xc78 <_fpadd_parts>
     fbc:	0e 94 c0 09 	call	0x1380	; 0x1380 <__pack_f>
     fc0:	a0 96       	adiw	r28, 0x20	; 32
     fc2:	e6 e0       	ldi	r30, 0x06	; 6
     fc4:	0c 94 78 0b 	jmp	0x16f0	; 0x16f0 <__epilogue_restores__+0x18>

00000fc8 <__mulsf3>:
     fc8:	a0 e2       	ldi	r26, 0x20	; 32
     fca:	b0 e0       	ldi	r27, 0x00	; 0
     fcc:	ea ee       	ldi	r30, 0xEA	; 234
     fce:	f7 e0       	ldi	r31, 0x07	; 7
     fd0:	0c 94 50 0b 	jmp	0x16a0	; 0x16a0 <__prologue_saves__>
     fd4:	69 83       	std	Y+1, r22	; 0x01
     fd6:	7a 83       	std	Y+2, r23	; 0x02
     fd8:	8b 83       	std	Y+3, r24	; 0x03
     fda:	9c 83       	std	Y+4, r25	; 0x04
     fdc:	2d 83       	std	Y+5, r18	; 0x05
     fde:	3e 83       	std	Y+6, r19	; 0x06
     fe0:	4f 83       	std	Y+7, r20	; 0x07
     fe2:	58 87       	std	Y+8, r21	; 0x08
     fe4:	ce 01       	movw	r24, r28
     fe6:	01 96       	adiw	r24, 0x01	; 1
     fe8:	be 01       	movw	r22, r28
     fea:	67 5f       	subi	r22, 0xF7	; 247
     fec:	7f 4f       	sbci	r23, 0xFF	; 255
     fee:	0e 94 8e 0a 	call	0x151c	; 0x151c <__unpack_f>
     ff2:	ce 01       	movw	r24, r28
     ff4:	05 96       	adiw	r24, 0x05	; 5
     ff6:	be 01       	movw	r22, r28
     ff8:	6f 5e       	subi	r22, 0xEF	; 239
     ffa:	7f 4f       	sbci	r23, 0xFF	; 255
     ffc:	0e 94 8e 0a 	call	0x151c	; 0x151c <__unpack_f>
    1000:	99 85       	ldd	r25, Y+9	; 0x09
    1002:	92 30       	cpi	r25, 0x02	; 2
    1004:	78 f0       	brcs	.+30     	; 0x1024 <__mulsf3+0x5c>
    1006:	89 89       	ldd	r24, Y+17	; 0x11
    1008:	82 30       	cpi	r24, 0x02	; 2
    100a:	c0 f0       	brcs	.+48     	; 0x103c <__mulsf3+0x74>
    100c:	94 30       	cpi	r25, 0x04	; 4
    100e:	19 f4       	brne	.+6      	; 0x1016 <__mulsf3+0x4e>
    1010:	82 30       	cpi	r24, 0x02	; 2
    1012:	41 f4       	brne	.+16     	; 0x1024 <__mulsf3+0x5c>
    1014:	cb c0       	rjmp	.+406    	; 0x11ac <__mulsf3+0x1e4>
    1016:	84 30       	cpi	r24, 0x04	; 4
    1018:	19 f4       	brne	.+6      	; 0x1020 <__mulsf3+0x58>
    101a:	92 30       	cpi	r25, 0x02	; 2
    101c:	79 f4       	brne	.+30     	; 0x103c <__mulsf3+0x74>
    101e:	c6 c0       	rjmp	.+396    	; 0x11ac <__mulsf3+0x1e4>
    1020:	92 30       	cpi	r25, 0x02	; 2
    1022:	51 f4       	brne	.+20     	; 0x1038 <__mulsf3+0x70>
    1024:	81 e0       	ldi	r24, 0x01	; 1
    1026:	2a 85       	ldd	r18, Y+10	; 0x0a
    1028:	9a 89       	ldd	r25, Y+18	; 0x12
    102a:	29 17       	cp	r18, r25
    102c:	09 f4       	brne	.+2      	; 0x1030 <__mulsf3+0x68>
    102e:	80 e0       	ldi	r24, 0x00	; 0
    1030:	8a 87       	std	Y+10, r24	; 0x0a
    1032:	ce 01       	movw	r24, r28
    1034:	09 96       	adiw	r24, 0x09	; 9
    1036:	bc c0       	rjmp	.+376    	; 0x11b0 <__mulsf3+0x1e8>
    1038:	82 30       	cpi	r24, 0x02	; 2
    103a:	51 f4       	brne	.+20     	; 0x1050 <__mulsf3+0x88>
    103c:	81 e0       	ldi	r24, 0x01	; 1
    103e:	2a 85       	ldd	r18, Y+10	; 0x0a
    1040:	9a 89       	ldd	r25, Y+18	; 0x12
    1042:	29 17       	cp	r18, r25
    1044:	09 f4       	brne	.+2      	; 0x1048 <__mulsf3+0x80>
    1046:	80 e0       	ldi	r24, 0x00	; 0
    1048:	8a 8b       	std	Y+18, r24	; 0x12
    104a:	ce 01       	movw	r24, r28
    104c:	41 96       	adiw	r24, 0x11	; 17
    104e:	b0 c0       	rjmp	.+352    	; 0x11b0 <__mulsf3+0x1e8>
    1050:	6d 84       	ldd	r6, Y+13	; 0x0d
    1052:	7e 84       	ldd	r7, Y+14	; 0x0e
    1054:	8f 84       	ldd	r8, Y+15	; 0x0f
    1056:	98 88       	ldd	r9, Y+16	; 0x10
    1058:	ed 88       	ldd	r14, Y+21	; 0x15
    105a:	fe 88       	ldd	r15, Y+22	; 0x16
    105c:	0f 89       	ldd	r16, Y+23	; 0x17
    105e:	18 8d       	ldd	r17, Y+24	; 0x18
    1060:	e0 e2       	ldi	r30, 0x20	; 32
    1062:	f0 e0       	ldi	r31, 0x00	; 0
    1064:	80 e0       	ldi	r24, 0x00	; 0
    1066:	90 e0       	ldi	r25, 0x00	; 0
    1068:	dc 01       	movw	r26, r24
    106a:	aa 24       	eor	r10, r10
    106c:	bb 24       	eor	r11, r11
    106e:	65 01       	movw	r12, r10
    1070:	20 e0       	ldi	r18, 0x00	; 0
    1072:	30 e0       	ldi	r19, 0x00	; 0
    1074:	a9 01       	movw	r20, r18
    1076:	b3 01       	movw	r22, r6
    1078:	61 70       	andi	r22, 0x01	; 1
    107a:	70 70       	andi	r23, 0x00	; 0
    107c:	61 15       	cp	r22, r1
    107e:	71 05       	cpc	r23, r1
    1080:	d1 f0       	breq	.+52     	; 0x10b6 <__mulsf3+0xee>
    1082:	2e 0d       	add	r18, r14
    1084:	3f 1d       	adc	r19, r15
    1086:	40 1f       	adc	r20, r16
    1088:	51 1f       	adc	r21, r17
    108a:	15 01       	movw	r2, r10
    108c:	26 01       	movw	r4, r12
    108e:	28 0e       	add	r2, r24
    1090:	39 1e       	adc	r3, r25
    1092:	4a 1e       	adc	r4, r26
    1094:	5b 1e       	adc	r5, r27
    1096:	81 e0       	ldi	r24, 0x01	; 1
    1098:	90 e0       	ldi	r25, 0x00	; 0
    109a:	a0 e0       	ldi	r26, 0x00	; 0
    109c:	b0 e0       	ldi	r27, 0x00	; 0
    109e:	2e 15       	cp	r18, r14
    10a0:	3f 05       	cpc	r19, r15
    10a2:	40 07       	cpc	r20, r16
    10a4:	51 07       	cpc	r21, r17
    10a6:	18 f0       	brcs	.+6      	; 0x10ae <__mulsf3+0xe6>
    10a8:	80 e0       	ldi	r24, 0x00	; 0
    10aa:	90 e0       	ldi	r25, 0x00	; 0
    10ac:	dc 01       	movw	r26, r24
    10ae:	82 0d       	add	r24, r2
    10b0:	93 1d       	adc	r25, r3
    10b2:	a4 1d       	adc	r26, r4
    10b4:	b5 1d       	adc	r27, r5
    10b6:	aa 0c       	add	r10, r10
    10b8:	bb 1c       	adc	r11, r11
    10ba:	cc 1c       	adc	r12, r12
    10bc:	dd 1c       	adc	r13, r13
    10be:	17 ff       	sbrs	r17, 7
    10c0:	09 c0       	rjmp	.+18     	; 0x10d4 <__mulsf3+0x10c>
    10c2:	61 e0       	ldi	r22, 0x01	; 1
    10c4:	26 2e       	mov	r2, r22
    10c6:	31 2c       	mov	r3, r1
    10c8:	41 2c       	mov	r4, r1
    10ca:	51 2c       	mov	r5, r1
    10cc:	a2 28       	or	r10, r2
    10ce:	b3 28       	or	r11, r3
    10d0:	c4 28       	or	r12, r4
    10d2:	d5 28       	or	r13, r5
    10d4:	31 97       	sbiw	r30, 0x01	; 1
    10d6:	49 f0       	breq	.+18     	; 0x10ea <__mulsf3+0x122>
    10d8:	ee 0c       	add	r14, r14
    10da:	ff 1c       	adc	r15, r15
    10dc:	00 1f       	adc	r16, r16
    10de:	11 1f       	adc	r17, r17
    10e0:	96 94       	lsr	r9
    10e2:	87 94       	ror	r8
    10e4:	77 94       	ror	r7
    10e6:	67 94       	ror	r6
    10e8:	c6 cf       	rjmp	.-116    	; 0x1076 <__mulsf3+0xae>
    10ea:	6b 89       	ldd	r22, Y+19	; 0x13
    10ec:	7c 89       	ldd	r23, Y+20	; 0x14
    10ee:	eb 85       	ldd	r30, Y+11	; 0x0b
    10f0:	fc 85       	ldd	r31, Y+12	; 0x0c
    10f2:	6e 0f       	add	r22, r30
    10f4:	7f 1f       	adc	r23, r31
    10f6:	6e 5f       	subi	r22, 0xFE	; 254
    10f8:	7f 4f       	sbci	r23, 0xFF	; 255
    10fa:	7c 8f       	std	Y+28, r23	; 0x1c
    10fc:	6b 8f       	std	Y+27, r22	; 0x1b
    10fe:	61 e0       	ldi	r22, 0x01	; 1
    1100:	ea 85       	ldd	r30, Y+10	; 0x0a
    1102:	7a 89       	ldd	r23, Y+18	; 0x12
    1104:	e7 17       	cp	r30, r23
    1106:	09 f4       	brne	.+2      	; 0x110a <__mulsf3+0x142>
    1108:	60 e0       	ldi	r22, 0x00	; 0
    110a:	6a 8f       	std	Y+26, r22	; 0x1a
    110c:	6b 8d       	ldd	r22, Y+27	; 0x1b
    110e:	7c 8d       	ldd	r23, Y+28	; 0x1c
    1110:	10 c0       	rjmp	.+32     	; 0x1132 <__mulsf3+0x16a>
    1112:	fc 01       	movw	r30, r24
    1114:	e1 70       	andi	r30, 0x01	; 1
    1116:	f0 70       	andi	r31, 0x00	; 0
    1118:	30 97       	sbiw	r30, 0x00	; 0
    111a:	29 f0       	breq	.+10     	; 0x1126 <__mulsf3+0x15e>
    111c:	56 95       	lsr	r21
    111e:	47 95       	ror	r20
    1120:	37 95       	ror	r19
    1122:	27 95       	ror	r18
    1124:	50 68       	ori	r21, 0x80	; 128
    1126:	b6 95       	lsr	r27
    1128:	a7 95       	ror	r26
    112a:	97 95       	ror	r25
    112c:	87 95       	ror	r24
    112e:	6f 5f       	subi	r22, 0xFF	; 255
    1130:	7f 4f       	sbci	r23, 0xFF	; 255
    1132:	b7 fd       	sbrc	r27, 7
    1134:	ee cf       	rjmp	.-36     	; 0x1112 <__mulsf3+0x14a>
    1136:	0c c0       	rjmp	.+24     	; 0x1150 <__mulsf3+0x188>
    1138:	88 0f       	add	r24, r24
    113a:	99 1f       	adc	r25, r25
    113c:	aa 1f       	adc	r26, r26
    113e:	bb 1f       	adc	r27, r27
    1140:	57 fd       	sbrc	r21, 7
    1142:	81 60       	ori	r24, 0x01	; 1
    1144:	22 0f       	add	r18, r18
    1146:	33 1f       	adc	r19, r19
    1148:	44 1f       	adc	r20, r20
    114a:	55 1f       	adc	r21, r21
    114c:	61 50       	subi	r22, 0x01	; 1
    114e:	70 40       	sbci	r23, 0x00	; 0
    1150:	80 30       	cpi	r24, 0x00	; 0
    1152:	e0 e0       	ldi	r30, 0x00	; 0
    1154:	9e 07       	cpc	r25, r30
    1156:	e0 e0       	ldi	r30, 0x00	; 0
    1158:	ae 07       	cpc	r26, r30
    115a:	e0 e4       	ldi	r30, 0x40	; 64
    115c:	be 07       	cpc	r27, r30
    115e:	60 f3       	brcs	.-40     	; 0x1138 <__mulsf3+0x170>
    1160:	6b 8f       	std	Y+27, r22	; 0x1b
    1162:	7c 8f       	std	Y+28, r23	; 0x1c
    1164:	6f e7       	ldi	r22, 0x7F	; 127
    1166:	e6 2e       	mov	r14, r22
    1168:	f1 2c       	mov	r15, r1
    116a:	01 2d       	mov	r16, r1
    116c:	11 2d       	mov	r17, r1
    116e:	e8 22       	and	r14, r24
    1170:	f9 22       	and	r15, r25
    1172:	0a 23       	and	r16, r26
    1174:	1b 23       	and	r17, r27
    1176:	60 e4       	ldi	r22, 0x40	; 64
    1178:	e6 16       	cp	r14, r22
    117a:	f1 04       	cpc	r15, r1
    117c:	01 05       	cpc	r16, r1
    117e:	11 05       	cpc	r17, r1
    1180:	61 f4       	brne	.+24     	; 0x119a <__mulsf3+0x1d2>
    1182:	87 fd       	sbrc	r24, 7
    1184:	0a c0       	rjmp	.+20     	; 0x119a <__mulsf3+0x1d2>
    1186:	21 15       	cp	r18, r1
    1188:	31 05       	cpc	r19, r1
    118a:	41 05       	cpc	r20, r1
    118c:	51 05       	cpc	r21, r1
    118e:	29 f0       	breq	.+10     	; 0x119a <__mulsf3+0x1d2>
    1190:	80 5c       	subi	r24, 0xC0	; 192
    1192:	9f 4f       	sbci	r25, 0xFF	; 255
    1194:	af 4f       	sbci	r26, 0xFF	; 255
    1196:	bf 4f       	sbci	r27, 0xFF	; 255
    1198:	80 78       	andi	r24, 0x80	; 128
    119a:	8d 8f       	std	Y+29, r24	; 0x1d
    119c:	9e 8f       	std	Y+30, r25	; 0x1e
    119e:	af 8f       	std	Y+31, r26	; 0x1f
    11a0:	b8 a3       	std	Y+32, r27	; 0x20
    11a2:	83 e0       	ldi	r24, 0x03	; 3
    11a4:	89 8f       	std	Y+25, r24	; 0x19
    11a6:	ce 01       	movw	r24, r28
    11a8:	49 96       	adiw	r24, 0x19	; 25
    11aa:	02 c0       	rjmp	.+4      	; 0x11b0 <__mulsf3+0x1e8>
    11ac:	8c e6       	ldi	r24, 0x6C	; 108
    11ae:	90 e0       	ldi	r25, 0x00	; 0
    11b0:	0e 94 c0 09 	call	0x1380	; 0x1380 <__pack_f>
    11b4:	a0 96       	adiw	r28, 0x20	; 32
    11b6:	e2 e1       	ldi	r30, 0x12	; 18
    11b8:	0c 94 6c 0b 	jmp	0x16d8	; 0x16d8 <__epilogue_restores__>

000011bc <__gtsf2>:
    11bc:	a8 e1       	ldi	r26, 0x18	; 24
    11be:	b0 e0       	ldi	r27, 0x00	; 0
    11c0:	e4 ee       	ldi	r30, 0xE4	; 228
    11c2:	f8 e0       	ldi	r31, 0x08	; 8
    11c4:	0c 94 5c 0b 	jmp	0x16b8	; 0x16b8 <__prologue_saves__+0x18>
    11c8:	69 83       	std	Y+1, r22	; 0x01
    11ca:	7a 83       	std	Y+2, r23	; 0x02
    11cc:	8b 83       	std	Y+3, r24	; 0x03
    11ce:	9c 83       	std	Y+4, r25	; 0x04
    11d0:	2d 83       	std	Y+5, r18	; 0x05
    11d2:	3e 83       	std	Y+6, r19	; 0x06
    11d4:	4f 83       	std	Y+7, r20	; 0x07
    11d6:	58 87       	std	Y+8, r21	; 0x08
    11d8:	8e 01       	movw	r16, r28
    11da:	07 5f       	subi	r16, 0xF7	; 247
    11dc:	1f 4f       	sbci	r17, 0xFF	; 255
    11de:	ce 01       	movw	r24, r28
    11e0:	01 96       	adiw	r24, 0x01	; 1
    11e2:	b8 01       	movw	r22, r16
    11e4:	0e 94 8e 0a 	call	0x151c	; 0x151c <__unpack_f>
    11e8:	81 e1       	ldi	r24, 0x11	; 17
    11ea:	e8 2e       	mov	r14, r24
    11ec:	f1 2c       	mov	r15, r1
    11ee:	ec 0e       	add	r14, r28
    11f0:	fd 1e       	adc	r15, r29
    11f2:	ce 01       	movw	r24, r28
    11f4:	05 96       	adiw	r24, 0x05	; 5
    11f6:	b7 01       	movw	r22, r14
    11f8:	0e 94 8e 0a 	call	0x151c	; 0x151c <__unpack_f>
    11fc:	89 85       	ldd	r24, Y+9	; 0x09
    11fe:	82 30       	cpi	r24, 0x02	; 2
    1200:	40 f0       	brcs	.+16     	; 0x1212 <__gtsf2+0x56>
    1202:	89 89       	ldd	r24, Y+17	; 0x11
    1204:	82 30       	cpi	r24, 0x02	; 2
    1206:	28 f0       	brcs	.+10     	; 0x1212 <__gtsf2+0x56>
    1208:	c8 01       	movw	r24, r16
    120a:	b7 01       	movw	r22, r14
    120c:	0e 94 f7 0a 	call	0x15ee	; 0x15ee <__fpcmp_parts_f>
    1210:	01 c0       	rjmp	.+2      	; 0x1214 <__gtsf2+0x58>
    1212:	8f ef       	ldi	r24, 0xFF	; 255
    1214:	68 96       	adiw	r28, 0x18	; 24
    1216:	e6 e0       	ldi	r30, 0x06	; 6
    1218:	0c 94 78 0b 	jmp	0x16f0	; 0x16f0 <__epilogue_restores__+0x18>

0000121c <__gesf2>:
    121c:	a8 e1       	ldi	r26, 0x18	; 24
    121e:	b0 e0       	ldi	r27, 0x00	; 0
    1220:	e4 e1       	ldi	r30, 0x14	; 20
    1222:	f9 e0       	ldi	r31, 0x09	; 9
    1224:	0c 94 5c 0b 	jmp	0x16b8	; 0x16b8 <__prologue_saves__+0x18>
    1228:	69 83       	std	Y+1, r22	; 0x01
    122a:	7a 83       	std	Y+2, r23	; 0x02
    122c:	8b 83       	std	Y+3, r24	; 0x03
    122e:	9c 83       	std	Y+4, r25	; 0x04
    1230:	2d 83       	std	Y+5, r18	; 0x05
    1232:	3e 83       	std	Y+6, r19	; 0x06
    1234:	4f 83       	std	Y+7, r20	; 0x07
    1236:	58 87       	std	Y+8, r21	; 0x08
    1238:	8e 01       	movw	r16, r28
    123a:	07 5f       	subi	r16, 0xF7	; 247
    123c:	1f 4f       	sbci	r17, 0xFF	; 255
    123e:	ce 01       	movw	r24, r28
    1240:	01 96       	adiw	r24, 0x01	; 1
    1242:	b8 01       	movw	r22, r16
    1244:	0e 94 8e 0a 	call	0x151c	; 0x151c <__unpack_f>
    1248:	81 e1       	ldi	r24, 0x11	; 17
    124a:	e8 2e       	mov	r14, r24
    124c:	f1 2c       	mov	r15, r1
    124e:	ec 0e       	add	r14, r28
    1250:	fd 1e       	adc	r15, r29
    1252:	ce 01       	movw	r24, r28
    1254:	05 96       	adiw	r24, 0x05	; 5
    1256:	b7 01       	movw	r22, r14
    1258:	0e 94 8e 0a 	call	0x151c	; 0x151c <__unpack_f>
    125c:	89 85       	ldd	r24, Y+9	; 0x09
    125e:	82 30       	cpi	r24, 0x02	; 2
    1260:	40 f0       	brcs	.+16     	; 0x1272 <__gesf2+0x56>
    1262:	89 89       	ldd	r24, Y+17	; 0x11
    1264:	82 30       	cpi	r24, 0x02	; 2
    1266:	28 f0       	brcs	.+10     	; 0x1272 <__gesf2+0x56>
    1268:	c8 01       	movw	r24, r16
    126a:	b7 01       	movw	r22, r14
    126c:	0e 94 f7 0a 	call	0x15ee	; 0x15ee <__fpcmp_parts_f>
    1270:	01 c0       	rjmp	.+2      	; 0x1274 <__gesf2+0x58>
    1272:	8f ef       	ldi	r24, 0xFF	; 255
    1274:	68 96       	adiw	r28, 0x18	; 24
    1276:	e6 e0       	ldi	r30, 0x06	; 6
    1278:	0c 94 78 0b 	jmp	0x16f0	; 0x16f0 <__epilogue_restores__+0x18>

0000127c <__ltsf2>:
    127c:	a8 e1       	ldi	r26, 0x18	; 24
    127e:	b0 e0       	ldi	r27, 0x00	; 0
    1280:	e4 e4       	ldi	r30, 0x44	; 68
    1282:	f9 e0       	ldi	r31, 0x09	; 9
    1284:	0c 94 5c 0b 	jmp	0x16b8	; 0x16b8 <__prologue_saves__+0x18>
    1288:	69 83       	std	Y+1, r22	; 0x01
    128a:	7a 83       	std	Y+2, r23	; 0x02
    128c:	8b 83       	std	Y+3, r24	; 0x03
    128e:	9c 83       	std	Y+4, r25	; 0x04
    1290:	2d 83       	std	Y+5, r18	; 0x05
    1292:	3e 83       	std	Y+6, r19	; 0x06
    1294:	4f 83       	std	Y+7, r20	; 0x07
    1296:	58 87       	std	Y+8, r21	; 0x08
    1298:	8e 01       	movw	r16, r28
    129a:	07 5f       	subi	r16, 0xF7	; 247
    129c:	1f 4f       	sbci	r17, 0xFF	; 255
    129e:	ce 01       	movw	r24, r28
    12a0:	01 96       	adiw	r24, 0x01	; 1
    12a2:	b8 01       	movw	r22, r16
    12a4:	0e 94 8e 0a 	call	0x151c	; 0x151c <__unpack_f>
    12a8:	81 e1       	ldi	r24, 0x11	; 17
    12aa:	e8 2e       	mov	r14, r24
    12ac:	f1 2c       	mov	r15, r1
    12ae:	ec 0e       	add	r14, r28
    12b0:	fd 1e       	adc	r15, r29
    12b2:	ce 01       	movw	r24, r28
    12b4:	05 96       	adiw	r24, 0x05	; 5
    12b6:	b7 01       	movw	r22, r14
    12b8:	0e 94 8e 0a 	call	0x151c	; 0x151c <__unpack_f>
    12bc:	89 85       	ldd	r24, Y+9	; 0x09
    12be:	82 30       	cpi	r24, 0x02	; 2
    12c0:	40 f0       	brcs	.+16     	; 0x12d2 <__ltsf2+0x56>
    12c2:	89 89       	ldd	r24, Y+17	; 0x11
    12c4:	82 30       	cpi	r24, 0x02	; 2
    12c6:	28 f0       	brcs	.+10     	; 0x12d2 <__ltsf2+0x56>
    12c8:	c8 01       	movw	r24, r16
    12ca:	b7 01       	movw	r22, r14
    12cc:	0e 94 f7 0a 	call	0x15ee	; 0x15ee <__fpcmp_parts_f>
    12d0:	01 c0       	rjmp	.+2      	; 0x12d4 <__ltsf2+0x58>
    12d2:	81 e0       	ldi	r24, 0x01	; 1
    12d4:	68 96       	adiw	r28, 0x18	; 24
    12d6:	e6 e0       	ldi	r30, 0x06	; 6
    12d8:	0c 94 78 0b 	jmp	0x16f0	; 0x16f0 <__epilogue_restores__+0x18>

000012dc <__fixsfsi>:
    12dc:	ac e0       	ldi	r26, 0x0C	; 12
    12de:	b0 e0       	ldi	r27, 0x00	; 0
    12e0:	e4 e7       	ldi	r30, 0x74	; 116
    12e2:	f9 e0       	ldi	r31, 0x09	; 9
    12e4:	0c 94 60 0b 	jmp	0x16c0	; 0x16c0 <__prologue_saves__+0x20>
    12e8:	69 83       	std	Y+1, r22	; 0x01
    12ea:	7a 83       	std	Y+2, r23	; 0x02
    12ec:	8b 83       	std	Y+3, r24	; 0x03
    12ee:	9c 83       	std	Y+4, r25	; 0x04
    12f0:	ce 01       	movw	r24, r28
    12f2:	01 96       	adiw	r24, 0x01	; 1
    12f4:	be 01       	movw	r22, r28
    12f6:	6b 5f       	subi	r22, 0xFB	; 251
    12f8:	7f 4f       	sbci	r23, 0xFF	; 255
    12fa:	0e 94 8e 0a 	call	0x151c	; 0x151c <__unpack_f>
    12fe:	8d 81       	ldd	r24, Y+5	; 0x05
    1300:	82 30       	cpi	r24, 0x02	; 2
    1302:	81 f1       	breq	.+96     	; 0x1364 <__fixsfsi+0x88>
    1304:	82 30       	cpi	r24, 0x02	; 2
    1306:	70 f1       	brcs	.+92     	; 0x1364 <__fixsfsi+0x88>
    1308:	84 30       	cpi	r24, 0x04	; 4
    130a:	21 f4       	brne	.+8      	; 0x1314 <__fixsfsi+0x38>
    130c:	8e 81       	ldd	r24, Y+6	; 0x06
    130e:	88 23       	and	r24, r24
    1310:	69 f1       	breq	.+90     	; 0x136c <__fixsfsi+0x90>
    1312:	0a c0       	rjmp	.+20     	; 0x1328 <__fixsfsi+0x4c>
    1314:	2f 81       	ldd	r18, Y+7	; 0x07
    1316:	38 85       	ldd	r19, Y+8	; 0x08
    1318:	37 fd       	sbrc	r19, 7
    131a:	24 c0       	rjmp	.+72     	; 0x1364 <__fixsfsi+0x88>
    131c:	6e 81       	ldd	r22, Y+6	; 0x06
    131e:	2f 31       	cpi	r18, 0x1F	; 31
    1320:	31 05       	cpc	r19, r1
    1322:	3c f0       	brlt	.+14     	; 0x1332 <__fixsfsi+0x56>
    1324:	66 23       	and	r22, r22
    1326:	11 f1       	breq	.+68     	; 0x136c <__fixsfsi+0x90>
    1328:	20 e0       	ldi	r18, 0x00	; 0
    132a:	30 e0       	ldi	r19, 0x00	; 0
    132c:	40 e0       	ldi	r20, 0x00	; 0
    132e:	50 e8       	ldi	r21, 0x80	; 128
    1330:	21 c0       	rjmp	.+66     	; 0x1374 <__fixsfsi+0x98>
    1332:	8e e1       	ldi	r24, 0x1E	; 30
    1334:	90 e0       	ldi	r25, 0x00	; 0
    1336:	82 1b       	sub	r24, r18
    1338:	93 0b       	sbc	r25, r19
    133a:	29 85       	ldd	r18, Y+9	; 0x09
    133c:	3a 85       	ldd	r19, Y+10	; 0x0a
    133e:	4b 85       	ldd	r20, Y+11	; 0x0b
    1340:	5c 85       	ldd	r21, Y+12	; 0x0c
    1342:	04 c0       	rjmp	.+8      	; 0x134c <__fixsfsi+0x70>
    1344:	56 95       	lsr	r21
    1346:	47 95       	ror	r20
    1348:	37 95       	ror	r19
    134a:	27 95       	ror	r18
    134c:	8a 95       	dec	r24
    134e:	d2 f7       	brpl	.-12     	; 0x1344 <__fixsfsi+0x68>
    1350:	66 23       	and	r22, r22
    1352:	81 f0       	breq	.+32     	; 0x1374 <__fixsfsi+0x98>
    1354:	50 95       	com	r21
    1356:	40 95       	com	r20
    1358:	30 95       	com	r19
    135a:	21 95       	neg	r18
    135c:	3f 4f       	sbci	r19, 0xFF	; 255
    135e:	4f 4f       	sbci	r20, 0xFF	; 255
    1360:	5f 4f       	sbci	r21, 0xFF	; 255
    1362:	08 c0       	rjmp	.+16     	; 0x1374 <__fixsfsi+0x98>
    1364:	20 e0       	ldi	r18, 0x00	; 0
    1366:	30 e0       	ldi	r19, 0x00	; 0
    1368:	a9 01       	movw	r20, r18
    136a:	04 c0       	rjmp	.+8      	; 0x1374 <__fixsfsi+0x98>
    136c:	2f ef       	ldi	r18, 0xFF	; 255
    136e:	3f ef       	ldi	r19, 0xFF	; 255
    1370:	4f ef       	ldi	r20, 0xFF	; 255
    1372:	5f e7       	ldi	r21, 0x7F	; 127
    1374:	b9 01       	movw	r22, r18
    1376:	ca 01       	movw	r24, r20
    1378:	2c 96       	adiw	r28, 0x0c	; 12
    137a:	e2 e0       	ldi	r30, 0x02	; 2
    137c:	0c 94 7c 0b 	jmp	0x16f8	; 0x16f8 <__epilogue_restores__+0x20>

00001380 <__pack_f>:
    1380:	ef 92       	push	r14
    1382:	ff 92       	push	r15
    1384:	0f 93       	push	r16
    1386:	1f 93       	push	r17
    1388:	cf 93       	push	r28
    138a:	df 93       	push	r29
    138c:	fc 01       	movw	r30, r24
    138e:	24 81       	ldd	r18, Z+4	; 0x04
    1390:	35 81       	ldd	r19, Z+5	; 0x05
    1392:	46 81       	ldd	r20, Z+6	; 0x06
    1394:	57 81       	ldd	r21, Z+7	; 0x07
    1396:	61 81       	ldd	r22, Z+1	; 0x01
    1398:	80 81       	ld	r24, Z
    139a:	82 30       	cpi	r24, 0x02	; 2
    139c:	20 f4       	brcc	.+8      	; 0x13a6 <__pack_f+0x26>
    139e:	40 61       	ori	r20, 0x10	; 16
    13a0:	ef ef       	ldi	r30, 0xFF	; 255
    13a2:	f0 e0       	ldi	r31, 0x00	; 0
    13a4:	a3 c0       	rjmp	.+326    	; 0x14ec <__pack_f+0x16c>
    13a6:	84 30       	cpi	r24, 0x04	; 4
    13a8:	09 f4       	brne	.+2      	; 0x13ac <__pack_f+0x2c>
    13aa:	9b c0       	rjmp	.+310    	; 0x14e2 <__pack_f+0x162>
    13ac:	82 30       	cpi	r24, 0x02	; 2
    13ae:	09 f4       	brne	.+2      	; 0x13b2 <__pack_f+0x32>
    13b0:	92 c0       	rjmp	.+292    	; 0x14d6 <__pack_f+0x156>
    13b2:	21 15       	cp	r18, r1
    13b4:	31 05       	cpc	r19, r1
    13b6:	41 05       	cpc	r20, r1
    13b8:	51 05       	cpc	r21, r1
    13ba:	09 f4       	brne	.+2      	; 0x13be <__pack_f+0x3e>
    13bc:	8f c0       	rjmp	.+286    	; 0x14dc <__pack_f+0x15c>
    13be:	02 80       	ldd	r0, Z+2	; 0x02
    13c0:	f3 81       	ldd	r31, Z+3	; 0x03
    13c2:	e0 2d       	mov	r30, r0
    13c4:	8f ef       	ldi	r24, 0xFF	; 255
    13c6:	e2 38       	cpi	r30, 0x82	; 130
    13c8:	f8 07       	cpc	r31, r24
    13ca:	0c f0       	brlt	.+2      	; 0x13ce <__pack_f+0x4e>
    13cc:	5a c0       	rjmp	.+180    	; 0x1482 <__pack_f+0x102>
    13ce:	c2 e8       	ldi	r28, 0x82	; 130
    13d0:	df ef       	ldi	r29, 0xFF	; 255
    13d2:	ce 1b       	sub	r28, r30
    13d4:	df 0b       	sbc	r29, r31
    13d6:	ca 31       	cpi	r28, 0x1A	; 26
    13d8:	d1 05       	cpc	r29, r1
    13da:	6c f5       	brge	.+90     	; 0x1436 <__pack_f+0xb6>
    13dc:	79 01       	movw	r14, r18
    13de:	8a 01       	movw	r16, r20
    13e0:	0c 2e       	mov	r0, r28
    13e2:	04 c0       	rjmp	.+8      	; 0x13ec <__pack_f+0x6c>
    13e4:	16 95       	lsr	r17
    13e6:	07 95       	ror	r16
    13e8:	f7 94       	ror	r15
    13ea:	e7 94       	ror	r14
    13ec:	0a 94       	dec	r0
    13ee:	d2 f7       	brpl	.-12     	; 0x13e4 <__pack_f+0x64>
    13f0:	81 e0       	ldi	r24, 0x01	; 1
    13f2:	90 e0       	ldi	r25, 0x00	; 0
    13f4:	a0 e0       	ldi	r26, 0x00	; 0
    13f6:	b0 e0       	ldi	r27, 0x00	; 0
    13f8:	0c 2e       	mov	r0, r28
    13fa:	04 c0       	rjmp	.+8      	; 0x1404 <__pack_f+0x84>
    13fc:	88 0f       	add	r24, r24
    13fe:	99 1f       	adc	r25, r25
    1400:	aa 1f       	adc	r26, r26
    1402:	bb 1f       	adc	r27, r27
    1404:	0a 94       	dec	r0
    1406:	d2 f7       	brpl	.-12     	; 0x13fc <__pack_f+0x7c>
    1408:	01 97       	sbiw	r24, 0x01	; 1
    140a:	a1 09       	sbc	r26, r1
    140c:	b1 09       	sbc	r27, r1
    140e:	82 23       	and	r24, r18
    1410:	93 23       	and	r25, r19
    1412:	a4 23       	and	r26, r20
    1414:	b5 23       	and	r27, r21
    1416:	21 e0       	ldi	r18, 0x01	; 1
    1418:	30 e0       	ldi	r19, 0x00	; 0
    141a:	40 e0       	ldi	r20, 0x00	; 0
    141c:	50 e0       	ldi	r21, 0x00	; 0
    141e:	00 97       	sbiw	r24, 0x00	; 0
    1420:	a1 05       	cpc	r26, r1
    1422:	b1 05       	cpc	r27, r1
    1424:	19 f4       	brne	.+6      	; 0x142c <__pack_f+0xac>
    1426:	20 e0       	ldi	r18, 0x00	; 0
    1428:	30 e0       	ldi	r19, 0x00	; 0
    142a:	a9 01       	movw	r20, r18
    142c:	2e 29       	or	r18, r14
    142e:	3f 29       	or	r19, r15
    1430:	40 2b       	or	r20, r16
    1432:	51 2b       	or	r21, r17
    1434:	03 c0       	rjmp	.+6      	; 0x143c <__pack_f+0xbc>
    1436:	20 e0       	ldi	r18, 0x00	; 0
    1438:	30 e0       	ldi	r19, 0x00	; 0
    143a:	a9 01       	movw	r20, r18
    143c:	da 01       	movw	r26, r20
    143e:	c9 01       	movw	r24, r18
    1440:	8f 77       	andi	r24, 0x7F	; 127
    1442:	90 70       	andi	r25, 0x00	; 0
    1444:	a0 70       	andi	r26, 0x00	; 0
    1446:	b0 70       	andi	r27, 0x00	; 0
    1448:	80 34       	cpi	r24, 0x40	; 64
    144a:	91 05       	cpc	r25, r1
    144c:	a1 05       	cpc	r26, r1
    144e:	b1 05       	cpc	r27, r1
    1450:	39 f4       	brne	.+14     	; 0x1460 <__pack_f+0xe0>
    1452:	27 ff       	sbrs	r18, 7
    1454:	09 c0       	rjmp	.+18     	; 0x1468 <__pack_f+0xe8>
    1456:	20 5c       	subi	r18, 0xC0	; 192
    1458:	3f 4f       	sbci	r19, 0xFF	; 255
    145a:	4f 4f       	sbci	r20, 0xFF	; 255
    145c:	5f 4f       	sbci	r21, 0xFF	; 255
    145e:	04 c0       	rjmp	.+8      	; 0x1468 <__pack_f+0xe8>
    1460:	21 5c       	subi	r18, 0xC1	; 193
    1462:	3f 4f       	sbci	r19, 0xFF	; 255
    1464:	4f 4f       	sbci	r20, 0xFF	; 255
    1466:	5f 4f       	sbci	r21, 0xFF	; 255
    1468:	e1 e0       	ldi	r30, 0x01	; 1
    146a:	f0 e0       	ldi	r31, 0x00	; 0
    146c:	20 30       	cpi	r18, 0x00	; 0
    146e:	80 e0       	ldi	r24, 0x00	; 0
    1470:	38 07       	cpc	r19, r24
    1472:	80 e0       	ldi	r24, 0x00	; 0
    1474:	48 07       	cpc	r20, r24
    1476:	80 e4       	ldi	r24, 0x40	; 64
    1478:	58 07       	cpc	r21, r24
    147a:	28 f5       	brcc	.+74     	; 0x14c6 <__pack_f+0x146>
    147c:	e0 e0       	ldi	r30, 0x00	; 0
    147e:	f0 e0       	ldi	r31, 0x00	; 0
    1480:	22 c0       	rjmp	.+68     	; 0x14c6 <__pack_f+0x146>
    1482:	e0 38       	cpi	r30, 0x80	; 128
    1484:	f1 05       	cpc	r31, r1
    1486:	6c f5       	brge	.+90     	; 0x14e2 <__pack_f+0x162>
    1488:	e1 58       	subi	r30, 0x81	; 129
    148a:	ff 4f       	sbci	r31, 0xFF	; 255
    148c:	da 01       	movw	r26, r20
    148e:	c9 01       	movw	r24, r18
    1490:	8f 77       	andi	r24, 0x7F	; 127
    1492:	90 70       	andi	r25, 0x00	; 0
    1494:	a0 70       	andi	r26, 0x00	; 0
    1496:	b0 70       	andi	r27, 0x00	; 0
    1498:	80 34       	cpi	r24, 0x40	; 64
    149a:	91 05       	cpc	r25, r1
    149c:	a1 05       	cpc	r26, r1
    149e:	b1 05       	cpc	r27, r1
    14a0:	39 f4       	brne	.+14     	; 0x14b0 <__pack_f+0x130>
    14a2:	27 ff       	sbrs	r18, 7
    14a4:	09 c0       	rjmp	.+18     	; 0x14b8 <__pack_f+0x138>
    14a6:	20 5c       	subi	r18, 0xC0	; 192
    14a8:	3f 4f       	sbci	r19, 0xFF	; 255
    14aa:	4f 4f       	sbci	r20, 0xFF	; 255
    14ac:	5f 4f       	sbci	r21, 0xFF	; 255
    14ae:	04 c0       	rjmp	.+8      	; 0x14b8 <__pack_f+0x138>
    14b0:	21 5c       	subi	r18, 0xC1	; 193
    14b2:	3f 4f       	sbci	r19, 0xFF	; 255
    14b4:	4f 4f       	sbci	r20, 0xFF	; 255
    14b6:	5f 4f       	sbci	r21, 0xFF	; 255
    14b8:	57 ff       	sbrs	r21, 7
    14ba:	05 c0       	rjmp	.+10     	; 0x14c6 <__pack_f+0x146>
    14bc:	56 95       	lsr	r21
    14be:	47 95       	ror	r20
    14c0:	37 95       	ror	r19
    14c2:	27 95       	ror	r18
    14c4:	31 96       	adiw	r30, 0x01	; 1
    14c6:	87 e0       	ldi	r24, 0x07	; 7
    14c8:	56 95       	lsr	r21
    14ca:	47 95       	ror	r20
    14cc:	37 95       	ror	r19
    14ce:	27 95       	ror	r18
    14d0:	8a 95       	dec	r24
    14d2:	d1 f7       	brne	.-12     	; 0x14c8 <__pack_f+0x148>
    14d4:	0b c0       	rjmp	.+22     	; 0x14ec <__pack_f+0x16c>
    14d6:	e0 e0       	ldi	r30, 0x00	; 0
    14d8:	f0 e0       	ldi	r31, 0x00	; 0
    14da:	05 c0       	rjmp	.+10     	; 0x14e6 <__pack_f+0x166>
    14dc:	e0 e0       	ldi	r30, 0x00	; 0
    14de:	f0 e0       	ldi	r31, 0x00	; 0
    14e0:	05 c0       	rjmp	.+10     	; 0x14ec <__pack_f+0x16c>
    14e2:	ef ef       	ldi	r30, 0xFF	; 255
    14e4:	f0 e0       	ldi	r31, 0x00	; 0
    14e6:	20 e0       	ldi	r18, 0x00	; 0
    14e8:	30 e0       	ldi	r19, 0x00	; 0
    14ea:	a9 01       	movw	r20, r18
    14ec:	8e 2f       	mov	r24, r30
    14ee:	87 95       	ror	r24
    14f0:	88 27       	eor	r24, r24
    14f2:	87 95       	ror	r24
    14f4:	94 2f       	mov	r25, r20
    14f6:	9f 77       	andi	r25, 0x7F	; 127
    14f8:	67 95       	ror	r22
    14fa:	66 27       	eor	r22, r22
    14fc:	67 95       	ror	r22
    14fe:	e6 95       	lsr	r30
    1500:	e2 2e       	mov	r14, r18
    1502:	a9 2f       	mov	r26, r25
    1504:	a8 2b       	or	r26, r24
    1506:	fe 2f       	mov	r31, r30
    1508:	f6 2b       	or	r31, r22
    150a:	62 2f       	mov	r22, r18
    150c:	73 2f       	mov	r23, r19
    150e:	8a 2f       	mov	r24, r26
    1510:	9f 2f       	mov	r25, r31
    1512:	cd b7       	in	r28, 0x3d	; 61
    1514:	de b7       	in	r29, 0x3e	; 62
    1516:	e6 e0       	ldi	r30, 0x06	; 6
    1518:	0c 94 78 0b 	jmp	0x16f0	; 0x16f0 <__epilogue_restores__+0x18>

0000151c <__unpack_f>:
    151c:	dc 01       	movw	r26, r24
    151e:	fb 01       	movw	r30, r22
    1520:	2c 91       	ld	r18, X
    1522:	11 96       	adiw	r26, 0x01	; 1
    1524:	3c 91       	ld	r19, X
    1526:	11 97       	sbiw	r26, 0x01	; 1
    1528:	12 96       	adiw	r26, 0x02	; 2
    152a:	8c 91       	ld	r24, X
    152c:	12 97       	sbiw	r26, 0x02	; 2
    152e:	48 2f       	mov	r20, r24
    1530:	4f 77       	andi	r20, 0x7F	; 127
    1532:	50 e0       	ldi	r21, 0x00	; 0
    1534:	98 2f       	mov	r25, r24
    1536:	99 1f       	adc	r25, r25
    1538:	99 27       	eor	r25, r25
    153a:	99 1f       	adc	r25, r25
    153c:	13 96       	adiw	r26, 0x03	; 3
    153e:	6c 91       	ld	r22, X
    1540:	13 97       	sbiw	r26, 0x03	; 3
    1542:	86 2f       	mov	r24, r22
    1544:	88 0f       	add	r24, r24
    1546:	89 2b       	or	r24, r25
    1548:	90 e0       	ldi	r25, 0x00	; 0
    154a:	66 1f       	adc	r22, r22
    154c:	66 27       	eor	r22, r22
    154e:	66 1f       	adc	r22, r22
    1550:	61 83       	std	Z+1, r22	; 0x01
    1552:	00 97       	sbiw	r24, 0x00	; 0
    1554:	39 f5       	brne	.+78     	; 0x15a4 <__unpack_f+0x88>
    1556:	21 15       	cp	r18, r1
    1558:	31 05       	cpc	r19, r1
    155a:	41 05       	cpc	r20, r1
    155c:	51 05       	cpc	r21, r1
    155e:	11 f4       	brne	.+4      	; 0x1564 <__unpack_f+0x48>
    1560:	82 e0       	ldi	r24, 0x02	; 2
    1562:	29 c0       	rjmp	.+82     	; 0x15b6 <__unpack_f+0x9a>
    1564:	82 e8       	ldi	r24, 0x82	; 130
    1566:	9f ef       	ldi	r25, 0xFF	; 255
    1568:	93 83       	std	Z+3, r25	; 0x03
    156a:	82 83       	std	Z+2, r24	; 0x02
    156c:	67 e0       	ldi	r22, 0x07	; 7
    156e:	22 0f       	add	r18, r18
    1570:	33 1f       	adc	r19, r19
    1572:	44 1f       	adc	r20, r20
    1574:	55 1f       	adc	r21, r21
    1576:	6a 95       	dec	r22
    1578:	d1 f7       	brne	.-12     	; 0x156e <__unpack_f+0x52>
    157a:	83 e0       	ldi	r24, 0x03	; 3
    157c:	80 83       	st	Z, r24
    157e:	09 c0       	rjmp	.+18     	; 0x1592 <__unpack_f+0x76>
    1580:	22 0f       	add	r18, r18
    1582:	33 1f       	adc	r19, r19
    1584:	44 1f       	adc	r20, r20
    1586:	55 1f       	adc	r21, r21
    1588:	82 81       	ldd	r24, Z+2	; 0x02
    158a:	93 81       	ldd	r25, Z+3	; 0x03
    158c:	01 97       	sbiw	r24, 0x01	; 1
    158e:	93 83       	std	Z+3, r25	; 0x03
    1590:	82 83       	std	Z+2, r24	; 0x02
    1592:	20 30       	cpi	r18, 0x00	; 0
    1594:	80 e0       	ldi	r24, 0x00	; 0
    1596:	38 07       	cpc	r19, r24
    1598:	80 e0       	ldi	r24, 0x00	; 0
    159a:	48 07       	cpc	r20, r24
    159c:	80 e4       	ldi	r24, 0x40	; 64
    159e:	58 07       	cpc	r21, r24
    15a0:	78 f3       	brcs	.-34     	; 0x1580 <__unpack_f+0x64>
    15a2:	20 c0       	rjmp	.+64     	; 0x15e4 <__unpack_f+0xc8>
    15a4:	8f 3f       	cpi	r24, 0xFF	; 255
    15a6:	91 05       	cpc	r25, r1
    15a8:	79 f4       	brne	.+30     	; 0x15c8 <__unpack_f+0xac>
    15aa:	21 15       	cp	r18, r1
    15ac:	31 05       	cpc	r19, r1
    15ae:	41 05       	cpc	r20, r1
    15b0:	51 05       	cpc	r21, r1
    15b2:	19 f4       	brne	.+6      	; 0x15ba <__unpack_f+0x9e>
    15b4:	84 e0       	ldi	r24, 0x04	; 4
    15b6:	80 83       	st	Z, r24
    15b8:	08 95       	ret
    15ba:	44 ff       	sbrs	r20, 4
    15bc:	03 c0       	rjmp	.+6      	; 0x15c4 <__unpack_f+0xa8>
    15be:	81 e0       	ldi	r24, 0x01	; 1
    15c0:	80 83       	st	Z, r24
    15c2:	10 c0       	rjmp	.+32     	; 0x15e4 <__unpack_f+0xc8>
    15c4:	10 82       	st	Z, r1
    15c6:	0e c0       	rjmp	.+28     	; 0x15e4 <__unpack_f+0xc8>
    15c8:	8f 57       	subi	r24, 0x7F	; 127
    15ca:	90 40       	sbci	r25, 0x00	; 0
    15cc:	93 83       	std	Z+3, r25	; 0x03
    15ce:	82 83       	std	Z+2, r24	; 0x02
    15d0:	83 e0       	ldi	r24, 0x03	; 3
    15d2:	80 83       	st	Z, r24
    15d4:	87 e0       	ldi	r24, 0x07	; 7
    15d6:	22 0f       	add	r18, r18
    15d8:	33 1f       	adc	r19, r19
    15da:	44 1f       	adc	r20, r20
    15dc:	55 1f       	adc	r21, r21
    15de:	8a 95       	dec	r24
    15e0:	d1 f7       	brne	.-12     	; 0x15d6 <__unpack_f+0xba>
    15e2:	50 64       	ori	r21, 0x40	; 64
    15e4:	24 83       	std	Z+4, r18	; 0x04
    15e6:	35 83       	std	Z+5, r19	; 0x05
    15e8:	46 83       	std	Z+6, r20	; 0x06
    15ea:	57 83       	std	Z+7, r21	; 0x07
    15ec:	08 95       	ret

000015ee <__fpcmp_parts_f>:
    15ee:	fc 01       	movw	r30, r24
    15f0:	db 01       	movw	r26, r22
    15f2:	90 81       	ld	r25, Z
    15f4:	92 30       	cpi	r25, 0x02	; 2
    15f6:	08 f4       	brcc	.+2      	; 0x15fa <__fpcmp_parts_f+0xc>
    15f8:	49 c0       	rjmp	.+146    	; 0x168c <__fpcmp_parts_f+0x9e>
    15fa:	8c 91       	ld	r24, X
    15fc:	82 30       	cpi	r24, 0x02	; 2
    15fe:	08 f4       	brcc	.+2      	; 0x1602 <__fpcmp_parts_f+0x14>
    1600:	45 c0       	rjmp	.+138    	; 0x168c <__fpcmp_parts_f+0x9e>
    1602:	94 30       	cpi	r25, 0x04	; 4
    1604:	51 f4       	brne	.+20     	; 0x161a <__fpcmp_parts_f+0x2c>
    1606:	61 81       	ldd	r22, Z+1	; 0x01
    1608:	84 30       	cpi	r24, 0x04	; 4
    160a:	b1 f5       	brne	.+108    	; 0x1678 <__fpcmp_parts_f+0x8a>
    160c:	11 96       	adiw	r26, 0x01	; 1
    160e:	2c 91       	ld	r18, X
    1610:	11 97       	sbiw	r26, 0x01	; 1
    1612:	30 e0       	ldi	r19, 0x00	; 0
    1614:	26 1b       	sub	r18, r22
    1616:	31 09       	sbc	r19, r1
    1618:	41 c0       	rjmp	.+130    	; 0x169c <__fpcmp_parts_f+0xae>
    161a:	84 30       	cpi	r24, 0x04	; 4
    161c:	21 f0       	breq	.+8      	; 0x1626 <__fpcmp_parts_f+0x38>
    161e:	92 30       	cpi	r25, 0x02	; 2
    1620:	41 f4       	brne	.+16     	; 0x1632 <__fpcmp_parts_f+0x44>
    1622:	82 30       	cpi	r24, 0x02	; 2
    1624:	b1 f1       	breq	.+108    	; 0x1692 <__fpcmp_parts_f+0xa4>
    1626:	11 96       	adiw	r26, 0x01	; 1
    1628:	8c 91       	ld	r24, X
    162a:	11 97       	sbiw	r26, 0x01	; 1
    162c:	88 23       	and	r24, r24
    162e:	a1 f1       	breq	.+104    	; 0x1698 <__fpcmp_parts_f+0xaa>
    1630:	2d c0       	rjmp	.+90     	; 0x168c <__fpcmp_parts_f+0x9e>
    1632:	61 81       	ldd	r22, Z+1	; 0x01
    1634:	82 30       	cpi	r24, 0x02	; 2
    1636:	01 f1       	breq	.+64     	; 0x1678 <__fpcmp_parts_f+0x8a>
    1638:	11 96       	adiw	r26, 0x01	; 1
    163a:	8c 91       	ld	r24, X
    163c:	11 97       	sbiw	r26, 0x01	; 1
    163e:	68 17       	cp	r22, r24
    1640:	d9 f4       	brne	.+54     	; 0x1678 <__fpcmp_parts_f+0x8a>
    1642:	22 81       	ldd	r18, Z+2	; 0x02
    1644:	33 81       	ldd	r19, Z+3	; 0x03
    1646:	12 96       	adiw	r26, 0x02	; 2
    1648:	8d 91       	ld	r24, X+
    164a:	9c 91       	ld	r25, X
    164c:	13 97       	sbiw	r26, 0x03	; 3
    164e:	82 17       	cp	r24, r18
    1650:	93 07       	cpc	r25, r19
    1652:	94 f0       	brlt	.+36     	; 0x1678 <__fpcmp_parts_f+0x8a>
    1654:	28 17       	cp	r18, r24
    1656:	39 07       	cpc	r19, r25
    1658:	bc f0       	brlt	.+46     	; 0x1688 <__fpcmp_parts_f+0x9a>
    165a:	24 81       	ldd	r18, Z+4	; 0x04
    165c:	35 81       	ldd	r19, Z+5	; 0x05
    165e:	46 81       	ldd	r20, Z+6	; 0x06
    1660:	57 81       	ldd	r21, Z+7	; 0x07
    1662:	14 96       	adiw	r26, 0x04	; 4
    1664:	8d 91       	ld	r24, X+
    1666:	9d 91       	ld	r25, X+
    1668:	0d 90       	ld	r0, X+
    166a:	bc 91       	ld	r27, X
    166c:	a0 2d       	mov	r26, r0
    166e:	82 17       	cp	r24, r18
    1670:	93 07       	cpc	r25, r19
    1672:	a4 07       	cpc	r26, r20
    1674:	b5 07       	cpc	r27, r21
    1676:	18 f4       	brcc	.+6      	; 0x167e <__fpcmp_parts_f+0x90>
    1678:	66 23       	and	r22, r22
    167a:	41 f0       	breq	.+16     	; 0x168c <__fpcmp_parts_f+0x9e>
    167c:	0d c0       	rjmp	.+26     	; 0x1698 <__fpcmp_parts_f+0xaa>
    167e:	28 17       	cp	r18, r24
    1680:	39 07       	cpc	r19, r25
    1682:	4a 07       	cpc	r20, r26
    1684:	5b 07       	cpc	r21, r27
    1686:	28 f4       	brcc	.+10     	; 0x1692 <__fpcmp_parts_f+0xa4>
    1688:	66 23       	and	r22, r22
    168a:	31 f0       	breq	.+12     	; 0x1698 <__fpcmp_parts_f+0xaa>
    168c:	21 e0       	ldi	r18, 0x01	; 1
    168e:	30 e0       	ldi	r19, 0x00	; 0
    1690:	05 c0       	rjmp	.+10     	; 0x169c <__fpcmp_parts_f+0xae>
    1692:	20 e0       	ldi	r18, 0x00	; 0
    1694:	30 e0       	ldi	r19, 0x00	; 0
    1696:	02 c0       	rjmp	.+4      	; 0x169c <__fpcmp_parts_f+0xae>
    1698:	2f ef       	ldi	r18, 0xFF	; 255
    169a:	3f ef       	ldi	r19, 0xFF	; 255
    169c:	c9 01       	movw	r24, r18
    169e:	08 95       	ret

000016a0 <__prologue_saves__>:
    16a0:	2f 92       	push	r2
    16a2:	3f 92       	push	r3
    16a4:	4f 92       	push	r4
    16a6:	5f 92       	push	r5
    16a8:	6f 92       	push	r6
    16aa:	7f 92       	push	r7
    16ac:	8f 92       	push	r8
    16ae:	9f 92       	push	r9
    16b0:	af 92       	push	r10
    16b2:	bf 92       	push	r11
    16b4:	cf 92       	push	r12
    16b6:	df 92       	push	r13
    16b8:	ef 92       	push	r14
    16ba:	ff 92       	push	r15
    16bc:	0f 93       	push	r16
    16be:	1f 93       	push	r17
    16c0:	cf 93       	push	r28
    16c2:	df 93       	push	r29
    16c4:	cd b7       	in	r28, 0x3d	; 61
    16c6:	de b7       	in	r29, 0x3e	; 62
    16c8:	ca 1b       	sub	r28, r26
    16ca:	db 0b       	sbc	r29, r27
    16cc:	0f b6       	in	r0, 0x3f	; 63
    16ce:	f8 94       	cli
    16d0:	de bf       	out	0x3e, r29	; 62
    16d2:	0f be       	out	0x3f, r0	; 63
    16d4:	cd bf       	out	0x3d, r28	; 61
    16d6:	09 94       	ijmp

000016d8 <__epilogue_restores__>:
    16d8:	2a 88       	ldd	r2, Y+18	; 0x12
    16da:	39 88       	ldd	r3, Y+17	; 0x11
    16dc:	48 88       	ldd	r4, Y+16	; 0x10
    16de:	5f 84       	ldd	r5, Y+15	; 0x0f
    16e0:	6e 84       	ldd	r6, Y+14	; 0x0e
    16e2:	7d 84       	ldd	r7, Y+13	; 0x0d
    16e4:	8c 84       	ldd	r8, Y+12	; 0x0c
    16e6:	9b 84       	ldd	r9, Y+11	; 0x0b
    16e8:	aa 84       	ldd	r10, Y+10	; 0x0a
    16ea:	b9 84       	ldd	r11, Y+9	; 0x09
    16ec:	c8 84       	ldd	r12, Y+8	; 0x08
    16ee:	df 80       	ldd	r13, Y+7	; 0x07
    16f0:	ee 80       	ldd	r14, Y+6	; 0x06
    16f2:	fd 80       	ldd	r15, Y+5	; 0x05
    16f4:	0c 81       	ldd	r16, Y+4	; 0x04
    16f6:	1b 81       	ldd	r17, Y+3	; 0x03
    16f8:	aa 81       	ldd	r26, Y+2	; 0x02
    16fa:	b9 81       	ldd	r27, Y+1	; 0x01
    16fc:	ce 0f       	add	r28, r30
    16fe:	d1 1d       	adc	r29, r1
    1700:	0f b6       	in	r0, 0x3f	; 63
    1702:	f8 94       	cli
    1704:	de bf       	out	0x3e, r29	; 62
    1706:	0f be       	out	0x3f, r0	; 63
    1708:	cd bf       	out	0x3d, r28	; 61
    170a:	ed 01       	movw	r28, r26
    170c:	08 95       	ret

0000170e <_exit>:
    170e:	f8 94       	cli

00001710 <__stop_program>:
    1710:	ff cf       	rjmp	.-2      	; 0x1710 <__stop_program>
