
Detector_1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000bc  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         000006cc  00000000  00000000  00000110  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      00000085  00000000  00000000  000007dc  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_aranges 00000020  00000000  00000000  00000861  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 0000001b  00000000  00000000  00000881  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000007d  00000000  00000000  0000089c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000004a  00000000  00000000  00000919  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000112  00000000  00000000  00000963  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000020  00000000  00000000  00000a78  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000000ac  00000000  00000000  00000a98  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_pubtypes 0000001e  00000000  00000000  00000b44  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 5c 00 	jmp	0xb8	; 0xb8 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
#include<avr/io.h>
#define F_CPU 16000000UL
#include<util/delay.h>
void main()
{
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	cd b7       	in	r28, 0x3d	; 61
  72:	de b7       	in	r29, 0x3e	; 62
	DDRA=0;
  74:	8a e3       	ldi	r24, 0x3A	; 58
  76:	90 e0       	ldi	r25, 0x00	; 0
  78:	fc 01       	movw	r30, r24
  7a:	10 82       	st	Z, r1
	DDRB=255;
  7c:	87 e3       	ldi	r24, 0x37	; 55
  7e:	90 e0       	ldi	r25, 0x00	; 0
  80:	2f ef       	ldi	r18, 0xFF	; 255
  82:	fc 01       	movw	r30, r24
  84:	20 83       	st	Z, r18
  86:	01 c0       	rjmp	.+2      	; 0x8a <main+0x1e>
		if(PINA==1)
		{
			while(PINA==1);	
			PORTB=~PORTB;
		}
	}
  88:	00 00       	nop
{
	DDRA=0;
	DDRB=255;
	while(1)
	{
		if(PINA==1)
  8a:	89 e3       	ldi	r24, 0x39	; 57
  8c:	90 e0       	ldi	r25, 0x00	; 0
  8e:	fc 01       	movw	r30, r24
  90:	80 81       	ld	r24, Z
  92:	81 30       	cpi	r24, 0x01	; 1
  94:	c9 f7       	brne	.-14     	; 0x88 <main+0x1c>
		{
			while(PINA==1);	
  96:	00 00       	nop
  98:	89 e3       	ldi	r24, 0x39	; 57
  9a:	90 e0       	ldi	r25, 0x00	; 0
  9c:	fc 01       	movw	r30, r24
  9e:	80 81       	ld	r24, Z
  a0:	81 30       	cpi	r24, 0x01	; 1
  a2:	d1 f3       	breq	.-12     	; 0x98 <main+0x2c>
			PORTB=~PORTB;
  a4:	88 e3       	ldi	r24, 0x38	; 56
  a6:	90 e0       	ldi	r25, 0x00	; 0
  a8:	28 e3       	ldi	r18, 0x38	; 56
  aa:	30 e0       	ldi	r19, 0x00	; 0
  ac:	f9 01       	movw	r30, r18
  ae:	20 81       	ld	r18, Z
  b0:	20 95       	com	r18
  b2:	fc 01       	movw	r30, r24
  b4:	20 83       	st	Z, r18
		}
	}
  b6:	e9 cf       	rjmp	.-46     	; 0x8a <main+0x1e>

000000b8 <_exit>:
  b8:	f8 94       	cli

000000ba <__stop_program>:
  ba:	ff cf       	rjmp	.-2      	; 0xba <__stop_program>
