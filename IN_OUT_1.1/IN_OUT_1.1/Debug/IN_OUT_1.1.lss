
IN_OUT_1.1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000016a8  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000016  00800060  000016a8  0000171c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         000006cc  00000000  00000000  00001734  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000085  00000000  00000000  00001e00  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000160  00000000  00000000  00001e85  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 000001c4  00000000  00000000  00001fe5  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000020ad  00000000  00000000  000021a9  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000edf  00000000  00000000  00004256  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000174e  00000000  00000000  00005135  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001c0  00000000  00000000  00006884  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003c5  00000000  00000000  00006a44  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000a79  00000000  00000000  00006e09  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_pubtypes 00000588  00000000  00000000  00007882  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000030  00000000  00000000  00007e0a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d4 e0       	ldi	r29, 0x04	; 4
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e8 ea       	ldi	r30, 0xA8	; 168
      68:	f6 e1       	ldi	r31, 0x16	; 22
      6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0
      70:	a6 37       	cpi	r26, 0x76	; 118
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
      76:	0e 94 1b 05 	call	0xa36	; 0xa36 <main>
      7a:	0c 94 52 0b 	jmp	0x16a4	; 0x16a4 <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <lcd_command>:
void lcd_command(unsigned char cmd)
{
      82:	0f 93       	push	r16
      84:	1f 93       	push	r17
      86:	df 93       	push	r29
      88:	cf 93       	push	r28
      8a:	cd b7       	in	r28, 0x3d	; 61
      8c:	de b7       	in	r29, 0x3e	; 62
      8e:	e9 97       	sbiw	r28, 0x39	; 57
      90:	0f b6       	in	r0, 0x3f	; 63
      92:	f8 94       	cli
      94:	de bf       	out	0x3e, r29	; 62
      96:	0f be       	out	0x3f, r0	; 63
      98:	cd bf       	out	0x3d, r28	; 61
      9a:	89 af       	std	Y+57, r24	; 0x39
	lcd=cmd&0xF0;
      9c:	82 e3       	ldi	r24, 0x32	; 50
      9e:	90 e0       	ldi	r25, 0x00	; 0
      a0:	29 ad       	ldd	r18, Y+57	; 0x39
      a2:	20 7f       	andi	r18, 0xF0	; 240
      a4:	fc 01       	movw	r30, r24
      a6:	20 83       	st	Z, r18
	lcd|=0x04;
      a8:	82 e3       	ldi	r24, 0x32	; 50
      aa:	90 e0       	ldi	r25, 0x00	; 0
      ac:	22 e3       	ldi	r18, 0x32	; 50
      ae:	30 e0       	ldi	r19, 0x00	; 0
      b0:	f9 01       	movw	r30, r18
      b2:	20 81       	ld	r18, Z
      b4:	24 60       	ori	r18, 0x04	; 4
      b6:	fc 01       	movw	r30, r24
      b8:	20 83       	st	Z, r18
      ba:	80 e0       	ldi	r24, 0x00	; 0
      bc:	90 e0       	ldi	r25, 0x00	; 0
      be:	a0 e8       	ldi	r26, 0x80	; 128
      c0:	bf e3       	ldi	r27, 0x3F	; 63
      c2:	89 83       	std	Y+1, r24	; 0x01
      c4:	9a 83       	std	Y+2, r25	; 0x02
      c6:	ab 83       	std	Y+3, r26	; 0x03
      c8:	bc 83       	std	Y+4, r27	; 0x04
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
      ca:	69 81       	ldd	r22, Y+1	; 0x01
      cc:	7a 81       	ldd	r23, Y+2	; 0x02
      ce:	8b 81       	ldd	r24, Y+3	; 0x03
      d0:	9c 81       	ldd	r25, Y+4	; 0x04
      d2:	20 e0       	ldi	r18, 0x00	; 0
      d4:	30 e0       	ldi	r19, 0x00	; 0
      d6:	4a e7       	ldi	r20, 0x7A	; 122
      d8:	55 e4       	ldi	r21, 0x45	; 69
      da:	0e 94 af 07 	call	0xf5e	; 0xf5e <__mulsf3>
      de:	dc 01       	movw	r26, r24
      e0:	cb 01       	movw	r24, r22
      e2:	8d 83       	std	Y+5, r24	; 0x05
      e4:	9e 83       	std	Y+6, r25	; 0x06
      e6:	af 83       	std	Y+7, r26	; 0x07
      e8:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
      ea:	11 e0       	ldi	r17, 0x01	; 1
      ec:	6d 81       	ldd	r22, Y+5	; 0x05
      ee:	7e 81       	ldd	r23, Y+6	; 0x06
      f0:	8f 81       	ldd	r24, Y+7	; 0x07
      f2:	98 85       	ldd	r25, Y+8	; 0x08
      f4:	20 e0       	ldi	r18, 0x00	; 0
      f6:	30 e0       	ldi	r19, 0x00	; 0
      f8:	40 e8       	ldi	r20, 0x80	; 128
      fa:	5f e3       	ldi	r21, 0x3F	; 63
      fc:	0e 94 09 09 	call	0x1212	; 0x1212 <__ltsf2>
     100:	88 23       	and	r24, r24
     102:	0c f0       	brlt	.+2      	; 0x106 <lcd_command+0x84>
     104:	10 e0       	ldi	r17, 0x00	; 0
     106:	11 23       	and	r17, r17
     108:	29 f0       	breq	.+10     	; 0x114 <lcd_command+0x92>
		__ticks = 1;
     10a:	81 e0       	ldi	r24, 0x01	; 1
     10c:	90 e0       	ldi	r25, 0x00	; 0
     10e:	9a 87       	std	Y+10, r25	; 0x0a
     110:	89 87       	std	Y+9, r24	; 0x09
     112:	46 c0       	rjmp	.+140    	; 0x1a0 <lcd_command+0x11e>
	else if (__tmp > 65535)
     114:	11 e0       	ldi	r17, 0x01	; 1
     116:	6d 81       	ldd	r22, Y+5	; 0x05
     118:	7e 81       	ldd	r23, Y+6	; 0x06
     11a:	8f 81       	ldd	r24, Y+7	; 0x07
     11c:	98 85       	ldd	r25, Y+8	; 0x08
     11e:	20 e0       	ldi	r18, 0x00	; 0
     120:	3f ef       	ldi	r19, 0xFF	; 255
     122:	4f e7       	ldi	r20, 0x7F	; 127
     124:	57 e4       	ldi	r21, 0x47	; 71
     126:	0e 94 a9 08 	call	0x1152	; 0x1152 <__gtsf2>
     12a:	18 16       	cp	r1, r24
     12c:	0c f0       	brlt	.+2      	; 0x130 <lcd_command+0xae>
     12e:	10 e0       	ldi	r17, 0x00	; 0
     130:	11 23       	and	r17, r17
     132:	61 f1       	breq	.+88     	; 0x18c <lcd_command+0x10a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     134:	69 81       	ldd	r22, Y+1	; 0x01
     136:	7a 81       	ldd	r23, Y+2	; 0x02
     138:	8b 81       	ldd	r24, Y+3	; 0x03
     13a:	9c 81       	ldd	r25, Y+4	; 0x04
     13c:	20 e0       	ldi	r18, 0x00	; 0
     13e:	30 e0       	ldi	r19, 0x00	; 0
     140:	40 e2       	ldi	r20, 0x20	; 32
     142:	51 e4       	ldi	r21, 0x41	; 65
     144:	0e 94 af 07 	call	0xf5e	; 0xf5e <__mulsf3>
     148:	dc 01       	movw	r26, r24
     14a:	cb 01       	movw	r24, r22
     14c:	bc 01       	movw	r22, r24
     14e:	cd 01       	movw	r24, r26
     150:	0e 94 db 05 	call	0xbb6	; 0xbb6 <__fixunssfsi>
     154:	dc 01       	movw	r26, r24
     156:	cb 01       	movw	r24, r22
     158:	9a 87       	std	Y+10, r25	; 0x0a
     15a:	89 87       	std	Y+9, r24	; 0x09
     15c:	12 c0       	rjmp	.+36     	; 0x182 <lcd_command+0x100>
     15e:	80 e9       	ldi	r24, 0x90	; 144
     160:	91 e0       	ldi	r25, 0x01	; 1
     162:	9c 87       	std	Y+12, r25	; 0x0c
     164:	8b 87       	std	Y+11, r24	; 0x0b
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     166:	8b 85       	ldd	r24, Y+11	; 0x0b
     168:	9c 85       	ldd	r25, Y+12	; 0x0c
     16a:	8c 01       	movw	r16, r24
     16c:	c8 01       	movw	r24, r16
     16e:	01 97       	sbiw	r24, 0x01	; 1
     170:	f1 f7       	brne	.-4      	; 0x16e <lcd_command+0xec>
     172:	8c 01       	movw	r16, r24
     174:	1c 87       	std	Y+12, r17	; 0x0c
     176:	0b 87       	std	Y+11, r16	; 0x0b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     178:	89 85       	ldd	r24, Y+9	; 0x09
     17a:	9a 85       	ldd	r25, Y+10	; 0x0a
     17c:	01 97       	sbiw	r24, 0x01	; 1
     17e:	9a 87       	std	Y+10, r25	; 0x0a
     180:	89 87       	std	Y+9, r24	; 0x09
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     182:	89 85       	ldd	r24, Y+9	; 0x09
     184:	9a 85       	ldd	r25, Y+10	; 0x0a
     186:	00 97       	sbiw	r24, 0x00	; 0
     188:	51 f7       	brne	.-44     	; 0x15e <lcd_command+0xdc>
     18a:	17 c0       	rjmp	.+46     	; 0x1ba <lcd_command+0x138>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     18c:	6d 81       	ldd	r22, Y+5	; 0x05
     18e:	7e 81       	ldd	r23, Y+6	; 0x06
     190:	8f 81       	ldd	r24, Y+7	; 0x07
     192:	98 85       	ldd	r25, Y+8	; 0x08
     194:	0e 94 db 05 	call	0xbb6	; 0xbb6 <__fixunssfsi>
     198:	dc 01       	movw	r26, r24
     19a:	cb 01       	movw	r24, r22
     19c:	9a 87       	std	Y+10, r25	; 0x0a
     19e:	89 87       	std	Y+9, r24	; 0x09
     1a0:	89 85       	ldd	r24, Y+9	; 0x09
     1a2:	9a 85       	ldd	r25, Y+10	; 0x0a
     1a4:	9e 87       	std	Y+14, r25	; 0x0e
     1a6:	8d 87       	std	Y+13, r24	; 0x0d
     1a8:	8d 85       	ldd	r24, Y+13	; 0x0d
     1aa:	9e 85       	ldd	r25, Y+14	; 0x0e
     1ac:	8c 01       	movw	r16, r24
     1ae:	f8 01       	movw	r30, r16
     1b0:	31 97       	sbiw	r30, 0x01	; 1
     1b2:	f1 f7       	brne	.-4      	; 0x1b0 <lcd_command+0x12e>
     1b4:	8f 01       	movw	r16, r30
     1b6:	1e 87       	std	Y+14, r17	; 0x0e
     1b8:	0d 87       	std	Y+13, r16	; 0x0d
	_delay_ms(1);
	lcd&=0xF0;
     1ba:	82 e3       	ldi	r24, 0x32	; 50
     1bc:	90 e0       	ldi	r25, 0x00	; 0
     1be:	22 e3       	ldi	r18, 0x32	; 50
     1c0:	30 e0       	ldi	r19, 0x00	; 0
     1c2:	f9 01       	movw	r30, r18
     1c4:	20 81       	ld	r18, Z
     1c6:	20 7f       	andi	r18, 0xF0	; 240
     1c8:	fc 01       	movw	r30, r24
     1ca:	20 83       	st	Z, r18
     1cc:	80 e0       	ldi	r24, 0x00	; 0
     1ce:	90 e0       	ldi	r25, 0x00	; 0
     1d0:	a0 e8       	ldi	r26, 0x80	; 128
     1d2:	bf e3       	ldi	r27, 0x3F	; 63
     1d4:	8f 87       	std	Y+15, r24	; 0x0f
     1d6:	98 8b       	std	Y+16, r25	; 0x10
     1d8:	a9 8b       	std	Y+17, r26	; 0x11
     1da:	ba 8b       	std	Y+18, r27	; 0x12
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     1dc:	6f 85       	ldd	r22, Y+15	; 0x0f
     1de:	78 89       	ldd	r23, Y+16	; 0x10
     1e0:	89 89       	ldd	r24, Y+17	; 0x11
     1e2:	9a 89       	ldd	r25, Y+18	; 0x12
     1e4:	20 e0       	ldi	r18, 0x00	; 0
     1e6:	30 e0       	ldi	r19, 0x00	; 0
     1e8:	4a e7       	ldi	r20, 0x7A	; 122
     1ea:	55 e4       	ldi	r21, 0x45	; 69
     1ec:	0e 94 af 07 	call	0xf5e	; 0xf5e <__mulsf3>
     1f0:	dc 01       	movw	r26, r24
     1f2:	cb 01       	movw	r24, r22
     1f4:	8b 8b       	std	Y+19, r24	; 0x13
     1f6:	9c 8b       	std	Y+20, r25	; 0x14
     1f8:	ad 8b       	std	Y+21, r26	; 0x15
     1fa:	be 8b       	std	Y+22, r27	; 0x16
	if (__tmp < 1.0)
     1fc:	11 e0       	ldi	r17, 0x01	; 1
     1fe:	6b 89       	ldd	r22, Y+19	; 0x13
     200:	7c 89       	ldd	r23, Y+20	; 0x14
     202:	8d 89       	ldd	r24, Y+21	; 0x15
     204:	9e 89       	ldd	r25, Y+22	; 0x16
     206:	20 e0       	ldi	r18, 0x00	; 0
     208:	30 e0       	ldi	r19, 0x00	; 0
     20a:	40 e8       	ldi	r20, 0x80	; 128
     20c:	5f e3       	ldi	r21, 0x3F	; 63
     20e:	0e 94 09 09 	call	0x1212	; 0x1212 <__ltsf2>
     212:	88 23       	and	r24, r24
     214:	0c f0       	brlt	.+2      	; 0x218 <lcd_command+0x196>
     216:	10 e0       	ldi	r17, 0x00	; 0
     218:	11 23       	and	r17, r17
     21a:	29 f0       	breq	.+10     	; 0x226 <lcd_command+0x1a4>
		__ticks = 1;
     21c:	81 e0       	ldi	r24, 0x01	; 1
     21e:	90 e0       	ldi	r25, 0x00	; 0
     220:	98 8f       	std	Y+24, r25	; 0x18
     222:	8f 8b       	std	Y+23, r24	; 0x17
     224:	46 c0       	rjmp	.+140    	; 0x2b2 <lcd_command+0x230>
	else if (__tmp > 65535)
     226:	11 e0       	ldi	r17, 0x01	; 1
     228:	6b 89       	ldd	r22, Y+19	; 0x13
     22a:	7c 89       	ldd	r23, Y+20	; 0x14
     22c:	8d 89       	ldd	r24, Y+21	; 0x15
     22e:	9e 89       	ldd	r25, Y+22	; 0x16
     230:	20 e0       	ldi	r18, 0x00	; 0
     232:	3f ef       	ldi	r19, 0xFF	; 255
     234:	4f e7       	ldi	r20, 0x7F	; 127
     236:	57 e4       	ldi	r21, 0x47	; 71
     238:	0e 94 a9 08 	call	0x1152	; 0x1152 <__gtsf2>
     23c:	18 16       	cp	r1, r24
     23e:	0c f0       	brlt	.+2      	; 0x242 <lcd_command+0x1c0>
     240:	10 e0       	ldi	r17, 0x00	; 0
     242:	11 23       	and	r17, r17
     244:	61 f1       	breq	.+88     	; 0x29e <lcd_command+0x21c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     246:	6f 85       	ldd	r22, Y+15	; 0x0f
     248:	78 89       	ldd	r23, Y+16	; 0x10
     24a:	89 89       	ldd	r24, Y+17	; 0x11
     24c:	9a 89       	ldd	r25, Y+18	; 0x12
     24e:	20 e0       	ldi	r18, 0x00	; 0
     250:	30 e0       	ldi	r19, 0x00	; 0
     252:	40 e2       	ldi	r20, 0x20	; 32
     254:	51 e4       	ldi	r21, 0x41	; 65
     256:	0e 94 af 07 	call	0xf5e	; 0xf5e <__mulsf3>
     25a:	dc 01       	movw	r26, r24
     25c:	cb 01       	movw	r24, r22
     25e:	bc 01       	movw	r22, r24
     260:	cd 01       	movw	r24, r26
     262:	0e 94 db 05 	call	0xbb6	; 0xbb6 <__fixunssfsi>
     266:	dc 01       	movw	r26, r24
     268:	cb 01       	movw	r24, r22
     26a:	98 8f       	std	Y+24, r25	; 0x18
     26c:	8f 8b       	std	Y+23, r24	; 0x17
     26e:	12 c0       	rjmp	.+36     	; 0x294 <lcd_command+0x212>
     270:	80 e9       	ldi	r24, 0x90	; 144
     272:	91 e0       	ldi	r25, 0x01	; 1
     274:	9a 8f       	std	Y+26, r25	; 0x1a
     276:	89 8f       	std	Y+25, r24	; 0x19
     278:	89 8d       	ldd	r24, Y+25	; 0x19
     27a:	9a 8d       	ldd	r25, Y+26	; 0x1a
     27c:	8c 01       	movw	r16, r24
     27e:	c8 01       	movw	r24, r16
     280:	01 97       	sbiw	r24, 0x01	; 1
     282:	f1 f7       	brne	.-4      	; 0x280 <lcd_command+0x1fe>
     284:	8c 01       	movw	r16, r24
     286:	1a 8f       	std	Y+26, r17	; 0x1a
     288:	09 8f       	std	Y+25, r16	; 0x19
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     28a:	8f 89       	ldd	r24, Y+23	; 0x17
     28c:	98 8d       	ldd	r25, Y+24	; 0x18
     28e:	01 97       	sbiw	r24, 0x01	; 1
     290:	98 8f       	std	Y+24, r25	; 0x18
     292:	8f 8b       	std	Y+23, r24	; 0x17
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     294:	8f 89       	ldd	r24, Y+23	; 0x17
     296:	98 8d       	ldd	r25, Y+24	; 0x18
     298:	00 97       	sbiw	r24, 0x00	; 0
     29a:	51 f7       	brne	.-44     	; 0x270 <lcd_command+0x1ee>
     29c:	17 c0       	rjmp	.+46     	; 0x2cc <lcd_command+0x24a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     29e:	6b 89       	ldd	r22, Y+19	; 0x13
     2a0:	7c 89       	ldd	r23, Y+20	; 0x14
     2a2:	8d 89       	ldd	r24, Y+21	; 0x15
     2a4:	9e 89       	ldd	r25, Y+22	; 0x16
     2a6:	0e 94 db 05 	call	0xbb6	; 0xbb6 <__fixunssfsi>
     2aa:	dc 01       	movw	r26, r24
     2ac:	cb 01       	movw	r24, r22
     2ae:	98 8f       	std	Y+24, r25	; 0x18
     2b0:	8f 8b       	std	Y+23, r24	; 0x17
     2b2:	8f 89       	ldd	r24, Y+23	; 0x17
     2b4:	98 8d       	ldd	r25, Y+24	; 0x18
     2b6:	9c 8f       	std	Y+28, r25	; 0x1c
     2b8:	8b 8f       	std	Y+27, r24	; 0x1b
     2ba:	8b 8d       	ldd	r24, Y+27	; 0x1b
     2bc:	9c 8d       	ldd	r25, Y+28	; 0x1c
     2be:	8c 01       	movw	r16, r24
     2c0:	f8 01       	movw	r30, r16
     2c2:	31 97       	sbiw	r30, 0x01	; 1
     2c4:	f1 f7       	brne	.-4      	; 0x2c2 <lcd_command+0x240>
     2c6:	8f 01       	movw	r16, r30
     2c8:	1c 8f       	std	Y+28, r17	; 0x1c
     2ca:	0b 8f       	std	Y+27, r16	; 0x1b
	_delay_ms(1);
	lcd=(cmd<<4)&0xF0;
     2cc:	82 e3       	ldi	r24, 0x32	; 50
     2ce:	90 e0       	ldi	r25, 0x00	; 0
     2d0:	29 ad       	ldd	r18, Y+57	; 0x39
     2d2:	22 2f       	mov	r18, r18
     2d4:	30 e0       	ldi	r19, 0x00	; 0
     2d6:	22 95       	swap	r18
     2d8:	32 95       	swap	r19
     2da:	30 7f       	andi	r19, 0xF0	; 240
     2dc:	32 27       	eor	r19, r18
     2de:	20 7f       	andi	r18, 0xF0	; 240
     2e0:	32 27       	eor	r19, r18
     2e2:	fc 01       	movw	r30, r24
     2e4:	20 83       	st	Z, r18
	lcd|=0x04;
     2e6:	82 e3       	ldi	r24, 0x32	; 50
     2e8:	90 e0       	ldi	r25, 0x00	; 0
     2ea:	22 e3       	ldi	r18, 0x32	; 50
     2ec:	30 e0       	ldi	r19, 0x00	; 0
     2ee:	f9 01       	movw	r30, r18
     2f0:	20 81       	ld	r18, Z
     2f2:	24 60       	ori	r18, 0x04	; 4
     2f4:	fc 01       	movw	r30, r24
     2f6:	20 83       	st	Z, r18
     2f8:	80 e0       	ldi	r24, 0x00	; 0
     2fa:	90 e0       	ldi	r25, 0x00	; 0
     2fc:	a0 e8       	ldi	r26, 0x80	; 128
     2fe:	bf e3       	ldi	r27, 0x3F	; 63
     300:	8d 8f       	std	Y+29, r24	; 0x1d
     302:	9e 8f       	std	Y+30, r25	; 0x1e
     304:	af 8f       	std	Y+31, r26	; 0x1f
     306:	b8 a3       	std	Y+32, r27	; 0x20
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     308:	6d 8d       	ldd	r22, Y+29	; 0x1d
     30a:	7e 8d       	ldd	r23, Y+30	; 0x1e
     30c:	8f 8d       	ldd	r24, Y+31	; 0x1f
     30e:	98 a1       	ldd	r25, Y+32	; 0x20
     310:	20 e0       	ldi	r18, 0x00	; 0
     312:	30 e0       	ldi	r19, 0x00	; 0
     314:	4a e7       	ldi	r20, 0x7A	; 122
     316:	55 e4       	ldi	r21, 0x45	; 69
     318:	0e 94 af 07 	call	0xf5e	; 0xf5e <__mulsf3>
     31c:	dc 01       	movw	r26, r24
     31e:	cb 01       	movw	r24, r22
     320:	89 a3       	std	Y+33, r24	; 0x21
     322:	9a a3       	std	Y+34, r25	; 0x22
     324:	ab a3       	std	Y+35, r26	; 0x23
     326:	bc a3       	std	Y+36, r27	; 0x24
	if (__tmp < 1.0)
     328:	11 e0       	ldi	r17, 0x01	; 1
     32a:	69 a1       	ldd	r22, Y+33	; 0x21
     32c:	7a a1       	ldd	r23, Y+34	; 0x22
     32e:	8b a1       	ldd	r24, Y+35	; 0x23
     330:	9c a1       	ldd	r25, Y+36	; 0x24
     332:	20 e0       	ldi	r18, 0x00	; 0
     334:	30 e0       	ldi	r19, 0x00	; 0
     336:	40 e8       	ldi	r20, 0x80	; 128
     338:	5f e3       	ldi	r21, 0x3F	; 63
     33a:	0e 94 09 09 	call	0x1212	; 0x1212 <__ltsf2>
     33e:	88 23       	and	r24, r24
     340:	0c f0       	brlt	.+2      	; 0x344 <lcd_command+0x2c2>
     342:	10 e0       	ldi	r17, 0x00	; 0
     344:	11 23       	and	r17, r17
     346:	29 f0       	breq	.+10     	; 0x352 <lcd_command+0x2d0>
		__ticks = 1;
     348:	81 e0       	ldi	r24, 0x01	; 1
     34a:	90 e0       	ldi	r25, 0x00	; 0
     34c:	9e a3       	std	Y+38, r25	; 0x26
     34e:	8d a3       	std	Y+37, r24	; 0x25
     350:	46 c0       	rjmp	.+140    	; 0x3de <lcd_command+0x35c>
	else if (__tmp > 65535)
     352:	11 e0       	ldi	r17, 0x01	; 1
     354:	69 a1       	ldd	r22, Y+33	; 0x21
     356:	7a a1       	ldd	r23, Y+34	; 0x22
     358:	8b a1       	ldd	r24, Y+35	; 0x23
     35a:	9c a1       	ldd	r25, Y+36	; 0x24
     35c:	20 e0       	ldi	r18, 0x00	; 0
     35e:	3f ef       	ldi	r19, 0xFF	; 255
     360:	4f e7       	ldi	r20, 0x7F	; 127
     362:	57 e4       	ldi	r21, 0x47	; 71
     364:	0e 94 a9 08 	call	0x1152	; 0x1152 <__gtsf2>
     368:	18 16       	cp	r1, r24
     36a:	0c f0       	brlt	.+2      	; 0x36e <lcd_command+0x2ec>
     36c:	10 e0       	ldi	r17, 0x00	; 0
     36e:	11 23       	and	r17, r17
     370:	61 f1       	breq	.+88     	; 0x3ca <lcd_command+0x348>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     372:	6d 8d       	ldd	r22, Y+29	; 0x1d
     374:	7e 8d       	ldd	r23, Y+30	; 0x1e
     376:	8f 8d       	ldd	r24, Y+31	; 0x1f
     378:	98 a1       	ldd	r25, Y+32	; 0x20
     37a:	20 e0       	ldi	r18, 0x00	; 0
     37c:	30 e0       	ldi	r19, 0x00	; 0
     37e:	40 e2       	ldi	r20, 0x20	; 32
     380:	51 e4       	ldi	r21, 0x41	; 65
     382:	0e 94 af 07 	call	0xf5e	; 0xf5e <__mulsf3>
     386:	dc 01       	movw	r26, r24
     388:	cb 01       	movw	r24, r22
     38a:	bc 01       	movw	r22, r24
     38c:	cd 01       	movw	r24, r26
     38e:	0e 94 db 05 	call	0xbb6	; 0xbb6 <__fixunssfsi>
     392:	dc 01       	movw	r26, r24
     394:	cb 01       	movw	r24, r22
     396:	9e a3       	std	Y+38, r25	; 0x26
     398:	8d a3       	std	Y+37, r24	; 0x25
     39a:	12 c0       	rjmp	.+36     	; 0x3c0 <lcd_command+0x33e>
     39c:	80 e9       	ldi	r24, 0x90	; 144
     39e:	91 e0       	ldi	r25, 0x01	; 1
     3a0:	98 a7       	std	Y+40, r25	; 0x28
     3a2:	8f a3       	std	Y+39, r24	; 0x27
     3a4:	8f a1       	ldd	r24, Y+39	; 0x27
     3a6:	98 a5       	ldd	r25, Y+40	; 0x28
     3a8:	8c 01       	movw	r16, r24
     3aa:	c8 01       	movw	r24, r16
     3ac:	01 97       	sbiw	r24, 0x01	; 1
     3ae:	f1 f7       	brne	.-4      	; 0x3ac <lcd_command+0x32a>
     3b0:	8c 01       	movw	r16, r24
     3b2:	18 a7       	std	Y+40, r17	; 0x28
     3b4:	0f a3       	std	Y+39, r16	; 0x27
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     3b6:	8d a1       	ldd	r24, Y+37	; 0x25
     3b8:	9e a1       	ldd	r25, Y+38	; 0x26
     3ba:	01 97       	sbiw	r24, 0x01	; 1
     3bc:	9e a3       	std	Y+38, r25	; 0x26
     3be:	8d a3       	std	Y+37, r24	; 0x25
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     3c0:	8d a1       	ldd	r24, Y+37	; 0x25
     3c2:	9e a1       	ldd	r25, Y+38	; 0x26
     3c4:	00 97       	sbiw	r24, 0x00	; 0
     3c6:	51 f7       	brne	.-44     	; 0x39c <lcd_command+0x31a>
     3c8:	17 c0       	rjmp	.+46     	; 0x3f8 <lcd_command+0x376>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     3ca:	69 a1       	ldd	r22, Y+33	; 0x21
     3cc:	7a a1       	ldd	r23, Y+34	; 0x22
     3ce:	8b a1       	ldd	r24, Y+35	; 0x23
     3d0:	9c a1       	ldd	r25, Y+36	; 0x24
     3d2:	0e 94 db 05 	call	0xbb6	; 0xbb6 <__fixunssfsi>
     3d6:	dc 01       	movw	r26, r24
     3d8:	cb 01       	movw	r24, r22
     3da:	9e a3       	std	Y+38, r25	; 0x26
     3dc:	8d a3       	std	Y+37, r24	; 0x25
     3de:	8d a1       	ldd	r24, Y+37	; 0x25
     3e0:	9e a1       	ldd	r25, Y+38	; 0x26
     3e2:	9a a7       	std	Y+42, r25	; 0x2a
     3e4:	89 a7       	std	Y+41, r24	; 0x29
     3e6:	89 a5       	ldd	r24, Y+41	; 0x29
     3e8:	9a a5       	ldd	r25, Y+42	; 0x2a
     3ea:	8c 01       	movw	r16, r24
     3ec:	f8 01       	movw	r30, r16
     3ee:	31 97       	sbiw	r30, 0x01	; 1
     3f0:	f1 f7       	brne	.-4      	; 0x3ee <lcd_command+0x36c>
     3f2:	8f 01       	movw	r16, r30
     3f4:	1a a7       	std	Y+42, r17	; 0x2a
     3f6:	09 a7       	std	Y+41, r16	; 0x29
	_delay_ms(1);
	lcd&=0xF0;
     3f8:	82 e3       	ldi	r24, 0x32	; 50
     3fa:	90 e0       	ldi	r25, 0x00	; 0
     3fc:	22 e3       	ldi	r18, 0x32	; 50
     3fe:	30 e0       	ldi	r19, 0x00	; 0
     400:	f9 01       	movw	r30, r18
     402:	20 81       	ld	r18, Z
     404:	20 7f       	andi	r18, 0xF0	; 240
     406:	fc 01       	movw	r30, r24
     408:	20 83       	st	Z, r18
     40a:	80 e0       	ldi	r24, 0x00	; 0
     40c:	90 e0       	ldi	r25, 0x00	; 0
     40e:	a0 e8       	ldi	r26, 0x80	; 128
     410:	bf e3       	ldi	r27, 0x3F	; 63
     412:	8b a7       	std	Y+43, r24	; 0x2b
     414:	9c a7       	std	Y+44, r25	; 0x2c
     416:	ad a7       	std	Y+45, r26	; 0x2d
     418:	be a7       	std	Y+46, r27	; 0x2e
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     41a:	6b a5       	ldd	r22, Y+43	; 0x2b
     41c:	7c a5       	ldd	r23, Y+44	; 0x2c
     41e:	8d a5       	ldd	r24, Y+45	; 0x2d
     420:	9e a5       	ldd	r25, Y+46	; 0x2e
     422:	20 e0       	ldi	r18, 0x00	; 0
     424:	30 e0       	ldi	r19, 0x00	; 0
     426:	4a e7       	ldi	r20, 0x7A	; 122
     428:	55 e4       	ldi	r21, 0x45	; 69
     42a:	0e 94 af 07 	call	0xf5e	; 0xf5e <__mulsf3>
     42e:	dc 01       	movw	r26, r24
     430:	cb 01       	movw	r24, r22
     432:	8f a7       	std	Y+47, r24	; 0x2f
     434:	98 ab       	std	Y+48, r25	; 0x30
     436:	a9 ab       	std	Y+49, r26	; 0x31
     438:	ba ab       	std	Y+50, r27	; 0x32
	if (__tmp < 1.0)
     43a:	11 e0       	ldi	r17, 0x01	; 1
     43c:	6f a5       	ldd	r22, Y+47	; 0x2f
     43e:	78 a9       	ldd	r23, Y+48	; 0x30
     440:	89 a9       	ldd	r24, Y+49	; 0x31
     442:	9a a9       	ldd	r25, Y+50	; 0x32
     444:	20 e0       	ldi	r18, 0x00	; 0
     446:	30 e0       	ldi	r19, 0x00	; 0
     448:	40 e8       	ldi	r20, 0x80	; 128
     44a:	5f e3       	ldi	r21, 0x3F	; 63
     44c:	0e 94 09 09 	call	0x1212	; 0x1212 <__ltsf2>
     450:	88 23       	and	r24, r24
     452:	0c f0       	brlt	.+2      	; 0x456 <lcd_command+0x3d4>
     454:	10 e0       	ldi	r17, 0x00	; 0
     456:	11 23       	and	r17, r17
     458:	29 f0       	breq	.+10     	; 0x464 <__stack+0x5>
		__ticks = 1;
     45a:	81 e0       	ldi	r24, 0x01	; 1
     45c:	90 e0       	ldi	r25, 0x00	; 0
     45e:	9c ab       	std	Y+52, r25	; 0x34
     460:	8b ab       	std	Y+51, r24	; 0x33
     462:	46 c0       	rjmp	.+140    	; 0x4f0 <__stack+0x91>
	else if (__tmp > 65535)
     464:	11 e0       	ldi	r17, 0x01	; 1
     466:	6f a5       	ldd	r22, Y+47	; 0x2f
     468:	78 a9       	ldd	r23, Y+48	; 0x30
     46a:	89 a9       	ldd	r24, Y+49	; 0x31
     46c:	9a a9       	ldd	r25, Y+50	; 0x32
     46e:	20 e0       	ldi	r18, 0x00	; 0
     470:	3f ef       	ldi	r19, 0xFF	; 255
     472:	4f e7       	ldi	r20, 0x7F	; 127
     474:	57 e4       	ldi	r21, 0x47	; 71
     476:	0e 94 a9 08 	call	0x1152	; 0x1152 <__gtsf2>
     47a:	18 16       	cp	r1, r24
     47c:	0c f0       	brlt	.+2      	; 0x480 <__stack+0x21>
     47e:	10 e0       	ldi	r17, 0x00	; 0
     480:	11 23       	and	r17, r17
     482:	61 f1       	breq	.+88     	; 0x4dc <__stack+0x7d>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     484:	6b a5       	ldd	r22, Y+43	; 0x2b
     486:	7c a5       	ldd	r23, Y+44	; 0x2c
     488:	8d a5       	ldd	r24, Y+45	; 0x2d
     48a:	9e a5       	ldd	r25, Y+46	; 0x2e
     48c:	20 e0       	ldi	r18, 0x00	; 0
     48e:	30 e0       	ldi	r19, 0x00	; 0
     490:	40 e2       	ldi	r20, 0x20	; 32
     492:	51 e4       	ldi	r21, 0x41	; 65
     494:	0e 94 af 07 	call	0xf5e	; 0xf5e <__mulsf3>
     498:	dc 01       	movw	r26, r24
     49a:	cb 01       	movw	r24, r22
     49c:	bc 01       	movw	r22, r24
     49e:	cd 01       	movw	r24, r26
     4a0:	0e 94 db 05 	call	0xbb6	; 0xbb6 <__fixunssfsi>
     4a4:	dc 01       	movw	r26, r24
     4a6:	cb 01       	movw	r24, r22
     4a8:	9c ab       	std	Y+52, r25	; 0x34
     4aa:	8b ab       	std	Y+51, r24	; 0x33
     4ac:	12 c0       	rjmp	.+36     	; 0x4d2 <__stack+0x73>
     4ae:	80 e9       	ldi	r24, 0x90	; 144
     4b0:	91 e0       	ldi	r25, 0x01	; 1
     4b2:	9e ab       	std	Y+54, r25	; 0x36
     4b4:	8d ab       	std	Y+53, r24	; 0x35
     4b6:	8d a9       	ldd	r24, Y+53	; 0x35
     4b8:	9e a9       	ldd	r25, Y+54	; 0x36
     4ba:	8c 01       	movw	r16, r24
     4bc:	c8 01       	movw	r24, r16
     4be:	01 97       	sbiw	r24, 0x01	; 1
     4c0:	f1 f7       	brne	.-4      	; 0x4be <__stack+0x5f>
     4c2:	8c 01       	movw	r16, r24
     4c4:	1e ab       	std	Y+54, r17	; 0x36
     4c6:	0d ab       	std	Y+53, r16	; 0x35
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     4c8:	8b a9       	ldd	r24, Y+51	; 0x33
     4ca:	9c a9       	ldd	r25, Y+52	; 0x34
     4cc:	01 97       	sbiw	r24, 0x01	; 1
     4ce:	9c ab       	std	Y+52, r25	; 0x34
     4d0:	8b ab       	std	Y+51, r24	; 0x33
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     4d2:	8b a9       	ldd	r24, Y+51	; 0x33
     4d4:	9c a9       	ldd	r25, Y+52	; 0x34
     4d6:	00 97       	sbiw	r24, 0x00	; 0
     4d8:	51 f7       	brne	.-44     	; 0x4ae <__stack+0x4f>
     4da:	17 c0       	rjmp	.+46     	; 0x50a <__stack+0xab>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     4dc:	6f a5       	ldd	r22, Y+47	; 0x2f
     4de:	78 a9       	ldd	r23, Y+48	; 0x30
     4e0:	89 a9       	ldd	r24, Y+49	; 0x31
     4e2:	9a a9       	ldd	r25, Y+50	; 0x32
     4e4:	0e 94 db 05 	call	0xbb6	; 0xbb6 <__fixunssfsi>
     4e8:	dc 01       	movw	r26, r24
     4ea:	cb 01       	movw	r24, r22
     4ec:	9c ab       	std	Y+52, r25	; 0x34
     4ee:	8b ab       	std	Y+51, r24	; 0x33
     4f0:	8b a9       	ldd	r24, Y+51	; 0x33
     4f2:	9c a9       	ldd	r25, Y+52	; 0x34
     4f4:	98 af       	std	Y+56, r25	; 0x38
     4f6:	8f ab       	std	Y+55, r24	; 0x37
     4f8:	8f a9       	ldd	r24, Y+55	; 0x37
     4fa:	98 ad       	ldd	r25, Y+56	; 0x38
     4fc:	8c 01       	movw	r16, r24
     4fe:	f8 01       	movw	r30, r16
     500:	31 97       	sbiw	r30, 0x01	; 1
     502:	f1 f7       	brne	.-4      	; 0x500 <__stack+0xa1>
     504:	8f 01       	movw	r16, r30
     506:	18 af       	std	Y+56, r17	; 0x38
     508:	0f ab       	std	Y+55, r16	; 0x37
	_delay_ms(1);
}
     50a:	e9 96       	adiw	r28, 0x39	; 57
     50c:	0f b6       	in	r0, 0x3f	; 63
     50e:	f8 94       	cli
     510:	de bf       	out	0x3e, r29	; 62
     512:	0f be       	out	0x3f, r0	; 63
     514:	cd bf       	out	0x3d, r28	; 61
     516:	cf 91       	pop	r28
     518:	df 91       	pop	r29
     51a:	1f 91       	pop	r17
     51c:	0f 91       	pop	r16
     51e:	08 95       	ret

00000520 <lcd_data>:

void lcd_data(unsigned char da)
{
     520:	0f 93       	push	r16
     522:	1f 93       	push	r17
     524:	df 93       	push	r29
     526:	cf 93       	push	r28
     528:	cd b7       	in	r28, 0x3d	; 61
     52a:	de b7       	in	r29, 0x3e	; 62
     52c:	e9 97       	sbiw	r28, 0x39	; 57
     52e:	0f b6       	in	r0, 0x3f	; 63
     530:	f8 94       	cli
     532:	de bf       	out	0x3e, r29	; 62
     534:	0f be       	out	0x3f, r0	; 63
     536:	cd bf       	out	0x3d, r28	; 61
     538:	89 af       	std	Y+57, r24	; 0x39
	lcd=da&0xF0;
     53a:	82 e3       	ldi	r24, 0x32	; 50
     53c:	90 e0       	ldi	r25, 0x00	; 0
     53e:	29 ad       	ldd	r18, Y+57	; 0x39
     540:	20 7f       	andi	r18, 0xF0	; 240
     542:	fc 01       	movw	r30, r24
     544:	20 83       	st	Z, r18
	lcd|=0x05;
     546:	82 e3       	ldi	r24, 0x32	; 50
     548:	90 e0       	ldi	r25, 0x00	; 0
     54a:	22 e3       	ldi	r18, 0x32	; 50
     54c:	30 e0       	ldi	r19, 0x00	; 0
     54e:	f9 01       	movw	r30, r18
     550:	20 81       	ld	r18, Z
     552:	25 60       	ori	r18, 0x05	; 5
     554:	fc 01       	movw	r30, r24
     556:	20 83       	st	Z, r18
     558:	80 e0       	ldi	r24, 0x00	; 0
     55a:	90 e0       	ldi	r25, 0x00	; 0
     55c:	a0 e8       	ldi	r26, 0x80	; 128
     55e:	bf e3       	ldi	r27, 0x3F	; 63
     560:	89 83       	std	Y+1, r24	; 0x01
     562:	9a 83       	std	Y+2, r25	; 0x02
     564:	ab 83       	std	Y+3, r26	; 0x03
     566:	bc 83       	std	Y+4, r27	; 0x04
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     568:	69 81       	ldd	r22, Y+1	; 0x01
     56a:	7a 81       	ldd	r23, Y+2	; 0x02
     56c:	8b 81       	ldd	r24, Y+3	; 0x03
     56e:	9c 81       	ldd	r25, Y+4	; 0x04
     570:	20 e0       	ldi	r18, 0x00	; 0
     572:	30 e0       	ldi	r19, 0x00	; 0
     574:	4a e7       	ldi	r20, 0x7A	; 122
     576:	55 e4       	ldi	r21, 0x45	; 69
     578:	0e 94 af 07 	call	0xf5e	; 0xf5e <__mulsf3>
     57c:	dc 01       	movw	r26, r24
     57e:	cb 01       	movw	r24, r22
     580:	8d 83       	std	Y+5, r24	; 0x05
     582:	9e 83       	std	Y+6, r25	; 0x06
     584:	af 83       	std	Y+7, r26	; 0x07
     586:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
     588:	11 e0       	ldi	r17, 0x01	; 1
     58a:	6d 81       	ldd	r22, Y+5	; 0x05
     58c:	7e 81       	ldd	r23, Y+6	; 0x06
     58e:	8f 81       	ldd	r24, Y+7	; 0x07
     590:	98 85       	ldd	r25, Y+8	; 0x08
     592:	20 e0       	ldi	r18, 0x00	; 0
     594:	30 e0       	ldi	r19, 0x00	; 0
     596:	40 e8       	ldi	r20, 0x80	; 128
     598:	5f e3       	ldi	r21, 0x3F	; 63
     59a:	0e 94 09 09 	call	0x1212	; 0x1212 <__ltsf2>
     59e:	88 23       	and	r24, r24
     5a0:	0c f0       	brlt	.+2      	; 0x5a4 <lcd_data+0x84>
     5a2:	10 e0       	ldi	r17, 0x00	; 0
     5a4:	11 23       	and	r17, r17
     5a6:	29 f0       	breq	.+10     	; 0x5b2 <lcd_data+0x92>
		__ticks = 1;
     5a8:	81 e0       	ldi	r24, 0x01	; 1
     5aa:	90 e0       	ldi	r25, 0x00	; 0
     5ac:	9a 87       	std	Y+10, r25	; 0x0a
     5ae:	89 87       	std	Y+9, r24	; 0x09
     5b0:	46 c0       	rjmp	.+140    	; 0x63e <lcd_data+0x11e>
	else if (__tmp > 65535)
     5b2:	11 e0       	ldi	r17, 0x01	; 1
     5b4:	6d 81       	ldd	r22, Y+5	; 0x05
     5b6:	7e 81       	ldd	r23, Y+6	; 0x06
     5b8:	8f 81       	ldd	r24, Y+7	; 0x07
     5ba:	98 85       	ldd	r25, Y+8	; 0x08
     5bc:	20 e0       	ldi	r18, 0x00	; 0
     5be:	3f ef       	ldi	r19, 0xFF	; 255
     5c0:	4f e7       	ldi	r20, 0x7F	; 127
     5c2:	57 e4       	ldi	r21, 0x47	; 71
     5c4:	0e 94 a9 08 	call	0x1152	; 0x1152 <__gtsf2>
     5c8:	18 16       	cp	r1, r24
     5ca:	0c f0       	brlt	.+2      	; 0x5ce <lcd_data+0xae>
     5cc:	10 e0       	ldi	r17, 0x00	; 0
     5ce:	11 23       	and	r17, r17
     5d0:	61 f1       	breq	.+88     	; 0x62a <lcd_data+0x10a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     5d2:	69 81       	ldd	r22, Y+1	; 0x01
     5d4:	7a 81       	ldd	r23, Y+2	; 0x02
     5d6:	8b 81       	ldd	r24, Y+3	; 0x03
     5d8:	9c 81       	ldd	r25, Y+4	; 0x04
     5da:	20 e0       	ldi	r18, 0x00	; 0
     5dc:	30 e0       	ldi	r19, 0x00	; 0
     5de:	40 e2       	ldi	r20, 0x20	; 32
     5e0:	51 e4       	ldi	r21, 0x41	; 65
     5e2:	0e 94 af 07 	call	0xf5e	; 0xf5e <__mulsf3>
     5e6:	dc 01       	movw	r26, r24
     5e8:	cb 01       	movw	r24, r22
     5ea:	bc 01       	movw	r22, r24
     5ec:	cd 01       	movw	r24, r26
     5ee:	0e 94 db 05 	call	0xbb6	; 0xbb6 <__fixunssfsi>
     5f2:	dc 01       	movw	r26, r24
     5f4:	cb 01       	movw	r24, r22
     5f6:	9a 87       	std	Y+10, r25	; 0x0a
     5f8:	89 87       	std	Y+9, r24	; 0x09
     5fa:	12 c0       	rjmp	.+36     	; 0x620 <lcd_data+0x100>
     5fc:	80 e9       	ldi	r24, 0x90	; 144
     5fe:	91 e0       	ldi	r25, 0x01	; 1
     600:	9c 87       	std	Y+12, r25	; 0x0c
     602:	8b 87       	std	Y+11, r24	; 0x0b
     604:	8b 85       	ldd	r24, Y+11	; 0x0b
     606:	9c 85       	ldd	r25, Y+12	; 0x0c
     608:	8c 01       	movw	r16, r24
     60a:	c8 01       	movw	r24, r16
     60c:	01 97       	sbiw	r24, 0x01	; 1
     60e:	f1 f7       	brne	.-4      	; 0x60c <lcd_data+0xec>
     610:	8c 01       	movw	r16, r24
     612:	1c 87       	std	Y+12, r17	; 0x0c
     614:	0b 87       	std	Y+11, r16	; 0x0b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     616:	89 85       	ldd	r24, Y+9	; 0x09
     618:	9a 85       	ldd	r25, Y+10	; 0x0a
     61a:	01 97       	sbiw	r24, 0x01	; 1
     61c:	9a 87       	std	Y+10, r25	; 0x0a
     61e:	89 87       	std	Y+9, r24	; 0x09
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     620:	89 85       	ldd	r24, Y+9	; 0x09
     622:	9a 85       	ldd	r25, Y+10	; 0x0a
     624:	00 97       	sbiw	r24, 0x00	; 0
     626:	51 f7       	brne	.-44     	; 0x5fc <lcd_data+0xdc>
     628:	17 c0       	rjmp	.+46     	; 0x658 <lcd_data+0x138>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     62a:	6d 81       	ldd	r22, Y+5	; 0x05
     62c:	7e 81       	ldd	r23, Y+6	; 0x06
     62e:	8f 81       	ldd	r24, Y+7	; 0x07
     630:	98 85       	ldd	r25, Y+8	; 0x08
     632:	0e 94 db 05 	call	0xbb6	; 0xbb6 <__fixunssfsi>
     636:	dc 01       	movw	r26, r24
     638:	cb 01       	movw	r24, r22
     63a:	9a 87       	std	Y+10, r25	; 0x0a
     63c:	89 87       	std	Y+9, r24	; 0x09
     63e:	89 85       	ldd	r24, Y+9	; 0x09
     640:	9a 85       	ldd	r25, Y+10	; 0x0a
     642:	9e 87       	std	Y+14, r25	; 0x0e
     644:	8d 87       	std	Y+13, r24	; 0x0d
     646:	8d 85       	ldd	r24, Y+13	; 0x0d
     648:	9e 85       	ldd	r25, Y+14	; 0x0e
     64a:	8c 01       	movw	r16, r24
     64c:	f8 01       	movw	r30, r16
     64e:	31 97       	sbiw	r30, 0x01	; 1
     650:	f1 f7       	brne	.-4      	; 0x64e <lcd_data+0x12e>
     652:	8f 01       	movw	r16, r30
     654:	1e 87       	std	Y+14, r17	; 0x0e
     656:	0d 87       	std	Y+13, r16	; 0x0d
	_delay_ms(1);
	lcd&=0xF1;
     658:	82 e3       	ldi	r24, 0x32	; 50
     65a:	90 e0       	ldi	r25, 0x00	; 0
     65c:	22 e3       	ldi	r18, 0x32	; 50
     65e:	30 e0       	ldi	r19, 0x00	; 0
     660:	f9 01       	movw	r30, r18
     662:	20 81       	ld	r18, Z
     664:	21 7f       	andi	r18, 0xF1	; 241
     666:	fc 01       	movw	r30, r24
     668:	20 83       	st	Z, r18
     66a:	80 e0       	ldi	r24, 0x00	; 0
     66c:	90 e0       	ldi	r25, 0x00	; 0
     66e:	a0 e8       	ldi	r26, 0x80	; 128
     670:	bf e3       	ldi	r27, 0x3F	; 63
     672:	8f 87       	std	Y+15, r24	; 0x0f
     674:	98 8b       	std	Y+16, r25	; 0x10
     676:	a9 8b       	std	Y+17, r26	; 0x11
     678:	ba 8b       	std	Y+18, r27	; 0x12
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     67a:	6f 85       	ldd	r22, Y+15	; 0x0f
     67c:	78 89       	ldd	r23, Y+16	; 0x10
     67e:	89 89       	ldd	r24, Y+17	; 0x11
     680:	9a 89       	ldd	r25, Y+18	; 0x12
     682:	20 e0       	ldi	r18, 0x00	; 0
     684:	30 e0       	ldi	r19, 0x00	; 0
     686:	4a e7       	ldi	r20, 0x7A	; 122
     688:	55 e4       	ldi	r21, 0x45	; 69
     68a:	0e 94 af 07 	call	0xf5e	; 0xf5e <__mulsf3>
     68e:	dc 01       	movw	r26, r24
     690:	cb 01       	movw	r24, r22
     692:	8b 8b       	std	Y+19, r24	; 0x13
     694:	9c 8b       	std	Y+20, r25	; 0x14
     696:	ad 8b       	std	Y+21, r26	; 0x15
     698:	be 8b       	std	Y+22, r27	; 0x16
	if (__tmp < 1.0)
     69a:	11 e0       	ldi	r17, 0x01	; 1
     69c:	6b 89       	ldd	r22, Y+19	; 0x13
     69e:	7c 89       	ldd	r23, Y+20	; 0x14
     6a0:	8d 89       	ldd	r24, Y+21	; 0x15
     6a2:	9e 89       	ldd	r25, Y+22	; 0x16
     6a4:	20 e0       	ldi	r18, 0x00	; 0
     6a6:	30 e0       	ldi	r19, 0x00	; 0
     6a8:	40 e8       	ldi	r20, 0x80	; 128
     6aa:	5f e3       	ldi	r21, 0x3F	; 63
     6ac:	0e 94 09 09 	call	0x1212	; 0x1212 <__ltsf2>
     6b0:	88 23       	and	r24, r24
     6b2:	0c f0       	brlt	.+2      	; 0x6b6 <lcd_data+0x196>
     6b4:	10 e0       	ldi	r17, 0x00	; 0
     6b6:	11 23       	and	r17, r17
     6b8:	29 f0       	breq	.+10     	; 0x6c4 <lcd_data+0x1a4>
		__ticks = 1;
     6ba:	81 e0       	ldi	r24, 0x01	; 1
     6bc:	90 e0       	ldi	r25, 0x00	; 0
     6be:	98 8f       	std	Y+24, r25	; 0x18
     6c0:	8f 8b       	std	Y+23, r24	; 0x17
     6c2:	46 c0       	rjmp	.+140    	; 0x750 <lcd_data+0x230>
	else if (__tmp > 65535)
     6c4:	11 e0       	ldi	r17, 0x01	; 1
     6c6:	6b 89       	ldd	r22, Y+19	; 0x13
     6c8:	7c 89       	ldd	r23, Y+20	; 0x14
     6ca:	8d 89       	ldd	r24, Y+21	; 0x15
     6cc:	9e 89       	ldd	r25, Y+22	; 0x16
     6ce:	20 e0       	ldi	r18, 0x00	; 0
     6d0:	3f ef       	ldi	r19, 0xFF	; 255
     6d2:	4f e7       	ldi	r20, 0x7F	; 127
     6d4:	57 e4       	ldi	r21, 0x47	; 71
     6d6:	0e 94 a9 08 	call	0x1152	; 0x1152 <__gtsf2>
     6da:	18 16       	cp	r1, r24
     6dc:	0c f0       	brlt	.+2      	; 0x6e0 <lcd_data+0x1c0>
     6de:	10 e0       	ldi	r17, 0x00	; 0
     6e0:	11 23       	and	r17, r17
     6e2:	61 f1       	breq	.+88     	; 0x73c <lcd_data+0x21c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     6e4:	6f 85       	ldd	r22, Y+15	; 0x0f
     6e6:	78 89       	ldd	r23, Y+16	; 0x10
     6e8:	89 89       	ldd	r24, Y+17	; 0x11
     6ea:	9a 89       	ldd	r25, Y+18	; 0x12
     6ec:	20 e0       	ldi	r18, 0x00	; 0
     6ee:	30 e0       	ldi	r19, 0x00	; 0
     6f0:	40 e2       	ldi	r20, 0x20	; 32
     6f2:	51 e4       	ldi	r21, 0x41	; 65
     6f4:	0e 94 af 07 	call	0xf5e	; 0xf5e <__mulsf3>
     6f8:	dc 01       	movw	r26, r24
     6fa:	cb 01       	movw	r24, r22
     6fc:	bc 01       	movw	r22, r24
     6fe:	cd 01       	movw	r24, r26
     700:	0e 94 db 05 	call	0xbb6	; 0xbb6 <__fixunssfsi>
     704:	dc 01       	movw	r26, r24
     706:	cb 01       	movw	r24, r22
     708:	98 8f       	std	Y+24, r25	; 0x18
     70a:	8f 8b       	std	Y+23, r24	; 0x17
     70c:	12 c0       	rjmp	.+36     	; 0x732 <lcd_data+0x212>
     70e:	80 e9       	ldi	r24, 0x90	; 144
     710:	91 e0       	ldi	r25, 0x01	; 1
     712:	9a 8f       	std	Y+26, r25	; 0x1a
     714:	89 8f       	std	Y+25, r24	; 0x19
     716:	89 8d       	ldd	r24, Y+25	; 0x19
     718:	9a 8d       	ldd	r25, Y+26	; 0x1a
     71a:	8c 01       	movw	r16, r24
     71c:	c8 01       	movw	r24, r16
     71e:	01 97       	sbiw	r24, 0x01	; 1
     720:	f1 f7       	brne	.-4      	; 0x71e <lcd_data+0x1fe>
     722:	8c 01       	movw	r16, r24
     724:	1a 8f       	std	Y+26, r17	; 0x1a
     726:	09 8f       	std	Y+25, r16	; 0x19
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     728:	8f 89       	ldd	r24, Y+23	; 0x17
     72a:	98 8d       	ldd	r25, Y+24	; 0x18
     72c:	01 97       	sbiw	r24, 0x01	; 1
     72e:	98 8f       	std	Y+24, r25	; 0x18
     730:	8f 8b       	std	Y+23, r24	; 0x17
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     732:	8f 89       	ldd	r24, Y+23	; 0x17
     734:	98 8d       	ldd	r25, Y+24	; 0x18
     736:	00 97       	sbiw	r24, 0x00	; 0
     738:	51 f7       	brne	.-44     	; 0x70e <lcd_data+0x1ee>
     73a:	17 c0       	rjmp	.+46     	; 0x76a <lcd_data+0x24a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     73c:	6b 89       	ldd	r22, Y+19	; 0x13
     73e:	7c 89       	ldd	r23, Y+20	; 0x14
     740:	8d 89       	ldd	r24, Y+21	; 0x15
     742:	9e 89       	ldd	r25, Y+22	; 0x16
     744:	0e 94 db 05 	call	0xbb6	; 0xbb6 <__fixunssfsi>
     748:	dc 01       	movw	r26, r24
     74a:	cb 01       	movw	r24, r22
     74c:	98 8f       	std	Y+24, r25	; 0x18
     74e:	8f 8b       	std	Y+23, r24	; 0x17
     750:	8f 89       	ldd	r24, Y+23	; 0x17
     752:	98 8d       	ldd	r25, Y+24	; 0x18
     754:	9c 8f       	std	Y+28, r25	; 0x1c
     756:	8b 8f       	std	Y+27, r24	; 0x1b
     758:	8b 8d       	ldd	r24, Y+27	; 0x1b
     75a:	9c 8d       	ldd	r25, Y+28	; 0x1c
     75c:	8c 01       	movw	r16, r24
     75e:	f8 01       	movw	r30, r16
     760:	31 97       	sbiw	r30, 0x01	; 1
     762:	f1 f7       	brne	.-4      	; 0x760 <lcd_data+0x240>
     764:	8f 01       	movw	r16, r30
     766:	1c 8f       	std	Y+28, r17	; 0x1c
     768:	0b 8f       	std	Y+27, r16	; 0x1b
	_delay_ms(1);
	lcd=(da<<4)&0xF0;
     76a:	82 e3       	ldi	r24, 0x32	; 50
     76c:	90 e0       	ldi	r25, 0x00	; 0
     76e:	29 ad       	ldd	r18, Y+57	; 0x39
     770:	22 2f       	mov	r18, r18
     772:	30 e0       	ldi	r19, 0x00	; 0
     774:	22 95       	swap	r18
     776:	32 95       	swap	r19
     778:	30 7f       	andi	r19, 0xF0	; 240
     77a:	32 27       	eor	r19, r18
     77c:	20 7f       	andi	r18, 0xF0	; 240
     77e:	32 27       	eor	r19, r18
     780:	fc 01       	movw	r30, r24
     782:	20 83       	st	Z, r18
	lcd|=0x05;
     784:	82 e3       	ldi	r24, 0x32	; 50
     786:	90 e0       	ldi	r25, 0x00	; 0
     788:	22 e3       	ldi	r18, 0x32	; 50
     78a:	30 e0       	ldi	r19, 0x00	; 0
     78c:	f9 01       	movw	r30, r18
     78e:	20 81       	ld	r18, Z
     790:	25 60       	ori	r18, 0x05	; 5
     792:	fc 01       	movw	r30, r24
     794:	20 83       	st	Z, r18
     796:	80 e0       	ldi	r24, 0x00	; 0
     798:	90 e0       	ldi	r25, 0x00	; 0
     79a:	a0 e8       	ldi	r26, 0x80	; 128
     79c:	bf e3       	ldi	r27, 0x3F	; 63
     79e:	8d 8f       	std	Y+29, r24	; 0x1d
     7a0:	9e 8f       	std	Y+30, r25	; 0x1e
     7a2:	af 8f       	std	Y+31, r26	; 0x1f
     7a4:	b8 a3       	std	Y+32, r27	; 0x20
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     7a6:	6d 8d       	ldd	r22, Y+29	; 0x1d
     7a8:	7e 8d       	ldd	r23, Y+30	; 0x1e
     7aa:	8f 8d       	ldd	r24, Y+31	; 0x1f
     7ac:	98 a1       	ldd	r25, Y+32	; 0x20
     7ae:	20 e0       	ldi	r18, 0x00	; 0
     7b0:	30 e0       	ldi	r19, 0x00	; 0
     7b2:	4a e7       	ldi	r20, 0x7A	; 122
     7b4:	55 e4       	ldi	r21, 0x45	; 69
     7b6:	0e 94 af 07 	call	0xf5e	; 0xf5e <__mulsf3>
     7ba:	dc 01       	movw	r26, r24
     7bc:	cb 01       	movw	r24, r22
     7be:	89 a3       	std	Y+33, r24	; 0x21
     7c0:	9a a3       	std	Y+34, r25	; 0x22
     7c2:	ab a3       	std	Y+35, r26	; 0x23
     7c4:	bc a3       	std	Y+36, r27	; 0x24
	if (__tmp < 1.0)
     7c6:	11 e0       	ldi	r17, 0x01	; 1
     7c8:	69 a1       	ldd	r22, Y+33	; 0x21
     7ca:	7a a1       	ldd	r23, Y+34	; 0x22
     7cc:	8b a1       	ldd	r24, Y+35	; 0x23
     7ce:	9c a1       	ldd	r25, Y+36	; 0x24
     7d0:	20 e0       	ldi	r18, 0x00	; 0
     7d2:	30 e0       	ldi	r19, 0x00	; 0
     7d4:	40 e8       	ldi	r20, 0x80	; 128
     7d6:	5f e3       	ldi	r21, 0x3F	; 63
     7d8:	0e 94 09 09 	call	0x1212	; 0x1212 <__ltsf2>
     7dc:	88 23       	and	r24, r24
     7de:	0c f0       	brlt	.+2      	; 0x7e2 <lcd_data+0x2c2>
     7e0:	10 e0       	ldi	r17, 0x00	; 0
     7e2:	11 23       	and	r17, r17
     7e4:	29 f0       	breq	.+10     	; 0x7f0 <lcd_data+0x2d0>
		__ticks = 1;
     7e6:	81 e0       	ldi	r24, 0x01	; 1
     7e8:	90 e0       	ldi	r25, 0x00	; 0
     7ea:	9e a3       	std	Y+38, r25	; 0x26
     7ec:	8d a3       	std	Y+37, r24	; 0x25
     7ee:	46 c0       	rjmp	.+140    	; 0x87c <lcd_data+0x35c>
	else if (__tmp > 65535)
     7f0:	11 e0       	ldi	r17, 0x01	; 1
     7f2:	69 a1       	ldd	r22, Y+33	; 0x21
     7f4:	7a a1       	ldd	r23, Y+34	; 0x22
     7f6:	8b a1       	ldd	r24, Y+35	; 0x23
     7f8:	9c a1       	ldd	r25, Y+36	; 0x24
     7fa:	20 e0       	ldi	r18, 0x00	; 0
     7fc:	3f ef       	ldi	r19, 0xFF	; 255
     7fe:	4f e7       	ldi	r20, 0x7F	; 127
     800:	57 e4       	ldi	r21, 0x47	; 71
     802:	0e 94 a9 08 	call	0x1152	; 0x1152 <__gtsf2>
     806:	18 16       	cp	r1, r24
     808:	0c f0       	brlt	.+2      	; 0x80c <lcd_data+0x2ec>
     80a:	10 e0       	ldi	r17, 0x00	; 0
     80c:	11 23       	and	r17, r17
     80e:	61 f1       	breq	.+88     	; 0x868 <lcd_data+0x348>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     810:	6d 8d       	ldd	r22, Y+29	; 0x1d
     812:	7e 8d       	ldd	r23, Y+30	; 0x1e
     814:	8f 8d       	ldd	r24, Y+31	; 0x1f
     816:	98 a1       	ldd	r25, Y+32	; 0x20
     818:	20 e0       	ldi	r18, 0x00	; 0
     81a:	30 e0       	ldi	r19, 0x00	; 0
     81c:	40 e2       	ldi	r20, 0x20	; 32
     81e:	51 e4       	ldi	r21, 0x41	; 65
     820:	0e 94 af 07 	call	0xf5e	; 0xf5e <__mulsf3>
     824:	dc 01       	movw	r26, r24
     826:	cb 01       	movw	r24, r22
     828:	bc 01       	movw	r22, r24
     82a:	cd 01       	movw	r24, r26
     82c:	0e 94 db 05 	call	0xbb6	; 0xbb6 <__fixunssfsi>
     830:	dc 01       	movw	r26, r24
     832:	cb 01       	movw	r24, r22
     834:	9e a3       	std	Y+38, r25	; 0x26
     836:	8d a3       	std	Y+37, r24	; 0x25
     838:	12 c0       	rjmp	.+36     	; 0x85e <lcd_data+0x33e>
     83a:	80 e9       	ldi	r24, 0x90	; 144
     83c:	91 e0       	ldi	r25, 0x01	; 1
     83e:	98 a7       	std	Y+40, r25	; 0x28
     840:	8f a3       	std	Y+39, r24	; 0x27
     842:	8f a1       	ldd	r24, Y+39	; 0x27
     844:	98 a5       	ldd	r25, Y+40	; 0x28
     846:	8c 01       	movw	r16, r24
     848:	c8 01       	movw	r24, r16
     84a:	01 97       	sbiw	r24, 0x01	; 1
     84c:	f1 f7       	brne	.-4      	; 0x84a <lcd_data+0x32a>
     84e:	8c 01       	movw	r16, r24
     850:	18 a7       	std	Y+40, r17	; 0x28
     852:	0f a3       	std	Y+39, r16	; 0x27
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     854:	8d a1       	ldd	r24, Y+37	; 0x25
     856:	9e a1       	ldd	r25, Y+38	; 0x26
     858:	01 97       	sbiw	r24, 0x01	; 1
     85a:	9e a3       	std	Y+38, r25	; 0x26
     85c:	8d a3       	std	Y+37, r24	; 0x25
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     85e:	8d a1       	ldd	r24, Y+37	; 0x25
     860:	9e a1       	ldd	r25, Y+38	; 0x26
     862:	00 97       	sbiw	r24, 0x00	; 0
     864:	51 f7       	brne	.-44     	; 0x83a <lcd_data+0x31a>
     866:	17 c0       	rjmp	.+46     	; 0x896 <lcd_data+0x376>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     868:	69 a1       	ldd	r22, Y+33	; 0x21
     86a:	7a a1       	ldd	r23, Y+34	; 0x22
     86c:	8b a1       	ldd	r24, Y+35	; 0x23
     86e:	9c a1       	ldd	r25, Y+36	; 0x24
     870:	0e 94 db 05 	call	0xbb6	; 0xbb6 <__fixunssfsi>
     874:	dc 01       	movw	r26, r24
     876:	cb 01       	movw	r24, r22
     878:	9e a3       	std	Y+38, r25	; 0x26
     87a:	8d a3       	std	Y+37, r24	; 0x25
     87c:	8d a1       	ldd	r24, Y+37	; 0x25
     87e:	9e a1       	ldd	r25, Y+38	; 0x26
     880:	9a a7       	std	Y+42, r25	; 0x2a
     882:	89 a7       	std	Y+41, r24	; 0x29
     884:	89 a5       	ldd	r24, Y+41	; 0x29
     886:	9a a5       	ldd	r25, Y+42	; 0x2a
     888:	8c 01       	movw	r16, r24
     88a:	f8 01       	movw	r30, r16
     88c:	31 97       	sbiw	r30, 0x01	; 1
     88e:	f1 f7       	brne	.-4      	; 0x88c <lcd_data+0x36c>
     890:	8f 01       	movw	r16, r30
     892:	1a a7       	std	Y+42, r17	; 0x2a
     894:	09 a7       	std	Y+41, r16	; 0x29
	_delay_ms(1);
	lcd&=0xF1;
     896:	82 e3       	ldi	r24, 0x32	; 50
     898:	90 e0       	ldi	r25, 0x00	; 0
     89a:	22 e3       	ldi	r18, 0x32	; 50
     89c:	30 e0       	ldi	r19, 0x00	; 0
     89e:	f9 01       	movw	r30, r18
     8a0:	20 81       	ld	r18, Z
     8a2:	21 7f       	andi	r18, 0xF1	; 241
     8a4:	fc 01       	movw	r30, r24
     8a6:	20 83       	st	Z, r18
     8a8:	80 e0       	ldi	r24, 0x00	; 0
     8aa:	90 e0       	ldi	r25, 0x00	; 0
     8ac:	a0 e8       	ldi	r26, 0x80	; 128
     8ae:	bf e3       	ldi	r27, 0x3F	; 63
     8b0:	8b a7       	std	Y+43, r24	; 0x2b
     8b2:	9c a7       	std	Y+44, r25	; 0x2c
     8b4:	ad a7       	std	Y+45, r26	; 0x2d
     8b6:	be a7       	std	Y+46, r27	; 0x2e
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     8b8:	6b a5       	ldd	r22, Y+43	; 0x2b
     8ba:	7c a5       	ldd	r23, Y+44	; 0x2c
     8bc:	8d a5       	ldd	r24, Y+45	; 0x2d
     8be:	9e a5       	ldd	r25, Y+46	; 0x2e
     8c0:	20 e0       	ldi	r18, 0x00	; 0
     8c2:	30 e0       	ldi	r19, 0x00	; 0
     8c4:	4a e7       	ldi	r20, 0x7A	; 122
     8c6:	55 e4       	ldi	r21, 0x45	; 69
     8c8:	0e 94 af 07 	call	0xf5e	; 0xf5e <__mulsf3>
     8cc:	dc 01       	movw	r26, r24
     8ce:	cb 01       	movw	r24, r22
     8d0:	8f a7       	std	Y+47, r24	; 0x2f
     8d2:	98 ab       	std	Y+48, r25	; 0x30
     8d4:	a9 ab       	std	Y+49, r26	; 0x31
     8d6:	ba ab       	std	Y+50, r27	; 0x32
	if (__tmp < 1.0)
     8d8:	11 e0       	ldi	r17, 0x01	; 1
     8da:	6f a5       	ldd	r22, Y+47	; 0x2f
     8dc:	78 a9       	ldd	r23, Y+48	; 0x30
     8de:	89 a9       	ldd	r24, Y+49	; 0x31
     8e0:	9a a9       	ldd	r25, Y+50	; 0x32
     8e2:	20 e0       	ldi	r18, 0x00	; 0
     8e4:	30 e0       	ldi	r19, 0x00	; 0
     8e6:	40 e8       	ldi	r20, 0x80	; 128
     8e8:	5f e3       	ldi	r21, 0x3F	; 63
     8ea:	0e 94 09 09 	call	0x1212	; 0x1212 <__ltsf2>
     8ee:	88 23       	and	r24, r24
     8f0:	0c f0       	brlt	.+2      	; 0x8f4 <lcd_data+0x3d4>
     8f2:	10 e0       	ldi	r17, 0x00	; 0
     8f4:	11 23       	and	r17, r17
     8f6:	29 f0       	breq	.+10     	; 0x902 <lcd_data+0x3e2>
		__ticks = 1;
     8f8:	81 e0       	ldi	r24, 0x01	; 1
     8fa:	90 e0       	ldi	r25, 0x00	; 0
     8fc:	9c ab       	std	Y+52, r25	; 0x34
     8fe:	8b ab       	std	Y+51, r24	; 0x33
     900:	46 c0       	rjmp	.+140    	; 0x98e <lcd_data+0x46e>
	else if (__tmp > 65535)
     902:	11 e0       	ldi	r17, 0x01	; 1
     904:	6f a5       	ldd	r22, Y+47	; 0x2f
     906:	78 a9       	ldd	r23, Y+48	; 0x30
     908:	89 a9       	ldd	r24, Y+49	; 0x31
     90a:	9a a9       	ldd	r25, Y+50	; 0x32
     90c:	20 e0       	ldi	r18, 0x00	; 0
     90e:	3f ef       	ldi	r19, 0xFF	; 255
     910:	4f e7       	ldi	r20, 0x7F	; 127
     912:	57 e4       	ldi	r21, 0x47	; 71
     914:	0e 94 a9 08 	call	0x1152	; 0x1152 <__gtsf2>
     918:	18 16       	cp	r1, r24
     91a:	0c f0       	brlt	.+2      	; 0x91e <lcd_data+0x3fe>
     91c:	10 e0       	ldi	r17, 0x00	; 0
     91e:	11 23       	and	r17, r17
     920:	61 f1       	breq	.+88     	; 0x97a <lcd_data+0x45a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     922:	6b a5       	ldd	r22, Y+43	; 0x2b
     924:	7c a5       	ldd	r23, Y+44	; 0x2c
     926:	8d a5       	ldd	r24, Y+45	; 0x2d
     928:	9e a5       	ldd	r25, Y+46	; 0x2e
     92a:	20 e0       	ldi	r18, 0x00	; 0
     92c:	30 e0       	ldi	r19, 0x00	; 0
     92e:	40 e2       	ldi	r20, 0x20	; 32
     930:	51 e4       	ldi	r21, 0x41	; 65
     932:	0e 94 af 07 	call	0xf5e	; 0xf5e <__mulsf3>
     936:	dc 01       	movw	r26, r24
     938:	cb 01       	movw	r24, r22
     93a:	bc 01       	movw	r22, r24
     93c:	cd 01       	movw	r24, r26
     93e:	0e 94 db 05 	call	0xbb6	; 0xbb6 <__fixunssfsi>
     942:	dc 01       	movw	r26, r24
     944:	cb 01       	movw	r24, r22
     946:	9c ab       	std	Y+52, r25	; 0x34
     948:	8b ab       	std	Y+51, r24	; 0x33
     94a:	12 c0       	rjmp	.+36     	; 0x970 <lcd_data+0x450>
     94c:	80 e9       	ldi	r24, 0x90	; 144
     94e:	91 e0       	ldi	r25, 0x01	; 1
     950:	9e ab       	std	Y+54, r25	; 0x36
     952:	8d ab       	std	Y+53, r24	; 0x35
     954:	8d a9       	ldd	r24, Y+53	; 0x35
     956:	9e a9       	ldd	r25, Y+54	; 0x36
     958:	8c 01       	movw	r16, r24
     95a:	c8 01       	movw	r24, r16
     95c:	01 97       	sbiw	r24, 0x01	; 1
     95e:	f1 f7       	brne	.-4      	; 0x95c <lcd_data+0x43c>
     960:	8c 01       	movw	r16, r24
     962:	1e ab       	std	Y+54, r17	; 0x36
     964:	0d ab       	std	Y+53, r16	; 0x35
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     966:	8b a9       	ldd	r24, Y+51	; 0x33
     968:	9c a9       	ldd	r25, Y+52	; 0x34
     96a:	01 97       	sbiw	r24, 0x01	; 1
     96c:	9c ab       	std	Y+52, r25	; 0x34
     96e:	8b ab       	std	Y+51, r24	; 0x33
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     970:	8b a9       	ldd	r24, Y+51	; 0x33
     972:	9c a9       	ldd	r25, Y+52	; 0x34
     974:	00 97       	sbiw	r24, 0x00	; 0
     976:	51 f7       	brne	.-44     	; 0x94c <lcd_data+0x42c>
     978:	17 c0       	rjmp	.+46     	; 0x9a8 <lcd_data+0x488>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     97a:	6f a5       	ldd	r22, Y+47	; 0x2f
     97c:	78 a9       	ldd	r23, Y+48	; 0x30
     97e:	89 a9       	ldd	r24, Y+49	; 0x31
     980:	9a a9       	ldd	r25, Y+50	; 0x32
     982:	0e 94 db 05 	call	0xbb6	; 0xbb6 <__fixunssfsi>
     986:	dc 01       	movw	r26, r24
     988:	cb 01       	movw	r24, r22
     98a:	9c ab       	std	Y+52, r25	; 0x34
     98c:	8b ab       	std	Y+51, r24	; 0x33
     98e:	8b a9       	ldd	r24, Y+51	; 0x33
     990:	9c a9       	ldd	r25, Y+52	; 0x34
     992:	98 af       	std	Y+56, r25	; 0x38
     994:	8f ab       	std	Y+55, r24	; 0x37
     996:	8f a9       	ldd	r24, Y+55	; 0x37
     998:	98 ad       	ldd	r25, Y+56	; 0x38
     99a:	8c 01       	movw	r16, r24
     99c:	f8 01       	movw	r30, r16
     99e:	31 97       	sbiw	r30, 0x01	; 1
     9a0:	f1 f7       	brne	.-4      	; 0x99e <lcd_data+0x47e>
     9a2:	8f 01       	movw	r16, r30
     9a4:	18 af       	std	Y+56, r17	; 0x38
     9a6:	0f ab       	std	Y+55, r16	; 0x37
	_delay_ms(1);
}
     9a8:	e9 96       	adiw	r28, 0x39	; 57
     9aa:	0f b6       	in	r0, 0x3f	; 63
     9ac:	f8 94       	cli
     9ae:	de bf       	out	0x3e, r29	; 62
     9b0:	0f be       	out	0x3f, r0	; 63
     9b2:	cd bf       	out	0x3d, r28	; 61
     9b4:	cf 91       	pop	r28
     9b6:	df 91       	pop	r29
     9b8:	1f 91       	pop	r17
     9ba:	0f 91       	pop	r16
     9bc:	08 95       	ret

000009be <lcd_init>:

void lcd_init()
{
     9be:	df 93       	push	r29
     9c0:	cf 93       	push	r28
     9c2:	cd b7       	in	r28, 0x3d	; 61
     9c4:	de b7       	in	r29, 0x3e	; 62
	lcd_command(0x02);//home position
     9c6:	82 e0       	ldi	r24, 0x02	; 2
     9c8:	0e 94 41 00 	call	0x82	; 0x82 <lcd_command>
	lcd_command(0x28);//enable 4 bit mode
     9cc:	88 e2       	ldi	r24, 0x28	; 40
     9ce:	0e 94 41 00 	call	0x82	; 0x82 <lcd_command>
	lcd_command(0x0c);//display on cursor off
     9d2:	8c e0       	ldi	r24, 0x0C	; 12
     9d4:	0e 94 41 00 	call	0x82	; 0x82 <lcd_command>
	//lcd_command(0x0e);//display off cursor on
	lcd_command(0x06);//auto increment
     9d8:	86 e0       	ldi	r24, 0x06	; 6
     9da:	0e 94 41 00 	call	0x82	; 0x82 <lcd_command>
}
     9de:	cf 91       	pop	r28
     9e0:	df 91       	pop	r29
     9e2:	08 95       	ret

000009e4 <lcd_string>:

void lcd_string(char *str)
{
     9e4:	df 93       	push	r29
     9e6:	cf 93       	push	r28
     9e8:	00 d0       	rcall	.+0      	; 0x9ea <lcd_string+0x6>
     9ea:	0f 92       	push	r0
     9ec:	cd b7       	in	r28, 0x3d	; 61
     9ee:	de b7       	in	r29, 0x3e	; 62
     9f0:	9b 83       	std	Y+3, r25	; 0x03
     9f2:	8a 83       	std	Y+2, r24	; 0x02
	char i = 0;
     9f4:	19 82       	std	Y+1, r1	; 0x01
	while (str[i]!='\0')
     9f6:	0e c0       	rjmp	.+28     	; 0xa14 <lcd_string+0x30>
	{
		lcd_data(str[i]);
     9f8:	89 81       	ldd	r24, Y+1	; 0x01
     9fa:	88 2f       	mov	r24, r24
     9fc:	90 e0       	ldi	r25, 0x00	; 0
     9fe:	2a 81       	ldd	r18, Y+2	; 0x02
     a00:	3b 81       	ldd	r19, Y+3	; 0x03
     a02:	82 0f       	add	r24, r18
     a04:	93 1f       	adc	r25, r19
     a06:	fc 01       	movw	r30, r24
     a08:	80 81       	ld	r24, Z
     a0a:	0e 94 90 02 	call	0x520	; 0x520 <lcd_data>
		i++;
     a0e:	89 81       	ldd	r24, Y+1	; 0x01
     a10:	8f 5f       	subi	r24, 0xFF	; 255
     a12:	89 83       	std	Y+1, r24	; 0x01
}

void lcd_string(char *str)
{
	char i = 0;
	while (str[i]!='\0')
     a14:	89 81       	ldd	r24, Y+1	; 0x01
     a16:	88 2f       	mov	r24, r24
     a18:	90 e0       	ldi	r25, 0x00	; 0
     a1a:	2a 81       	ldd	r18, Y+2	; 0x02
     a1c:	3b 81       	ldd	r19, Y+3	; 0x03
     a1e:	82 0f       	add	r24, r18
     a20:	93 1f       	adc	r25, r19
     a22:	fc 01       	movw	r30, r24
     a24:	80 81       	ld	r24, Z
     a26:	88 23       	and	r24, r24
     a28:	39 f7       	brne	.-50     	; 0x9f8 <lcd_string+0x14>
	{
		lcd_data(str[i]);
		i++;
	}
     a2a:	0f 90       	pop	r0
     a2c:	0f 90       	pop	r0
     a2e:	0f 90       	pop	r0
     a30:	cf 91       	pop	r28
     a32:	df 91       	pop	r29
     a34:	08 95       	ret

00000a36 <main>:
#define F_CPU 16000000UL
#include<util/delay.h>
#define lcd PORTD
#include<lib/lcd.h>
void main()
{
     a36:	df 93       	push	r29
     a38:	cf 93       	push	r28
     a3a:	00 d0       	rcall	.+0      	; 0xa3c <main+0x6>
     a3c:	00 d0       	rcall	.+0      	; 0xa3e <main+0x8>
     a3e:	00 d0       	rcall	.+0      	; 0xa40 <main+0xa>
     a40:	cd b7       	in	r28, 0x3d	; 61
     a42:	de b7       	in	r29, 0x3e	; 62
	DDRA=0b01111110;
     a44:	8a e3       	ldi	r24, 0x3A	; 58
     a46:	90 e0       	ldi	r25, 0x00	; 0
     a48:	2e e7       	ldi	r18, 0x7E	; 126
     a4a:	fc 01       	movw	r30, r24
     a4c:	20 83       	st	Z, r18
	DDRB=255;
     a4e:	87 e3       	ldi	r24, 0x37	; 55
     a50:	90 e0       	ldi	r25, 0x00	; 0
     a52:	2f ef       	ldi	r18, 0xFF	; 255
     a54:	fc 01       	movw	r30, r24
     a56:	20 83       	st	Z, r18
	DDRC=255;
     a58:	84 e3       	ldi	r24, 0x34	; 52
     a5a:	90 e0       	ldi	r25, 0x00	; 0
     a5c:	2f ef       	ldi	r18, 0xFF	; 255
     a5e:	fc 01       	movw	r30, r24
     a60:	20 83       	st	Z, r18
	DDRD=255;
     a62:	81 e3       	ldi	r24, 0x31	; 49
     a64:	90 e0       	ldi	r25, 0x00	; 0
     a66:	2f ef       	ldi	r18, 0xFF	; 255
     a68:	fc 01       	movw	r30, r24
     a6a:	20 83       	st	Z, r18
	PORTA=0b1000001;
     a6c:	8b e3       	ldi	r24, 0x3B	; 59
     a6e:	90 e0       	ldi	r25, 0x00	; 0
     a70:	21 e4       	ldi	r18, 0x41	; 65
     a72:	fc 01       	movw	r30, r24
     a74:	20 83       	st	Z, r18
	lcd_init();
     a76:	0e 94 df 04 	call	0x9be	; 0x9be <lcd_init>
	int z=0, x=0, t=0;
     a7a:	1a 82       	std	Y+2, r1	; 0x02
     a7c:	19 82       	std	Y+1, r1	; 0x01
     a7e:	1c 82       	std	Y+4, r1	; 0x04
     a80:	1b 82       	std	Y+3, r1	; 0x03
     a82:	1e 82       	std	Y+6, r1	; 0x06
     a84:	1d 82       	std	Y+5, r1	; 0x05
     a86:	03 c0       	rjmp	.+6      	; 0xa8e <main+0x58>
				lcd_command(0xc8);
				lcd_data(t);
				PORTC=t;
			}
		}
	}
     a88:	00 00       	nop
     a8a:	01 c0       	rjmp	.+2      	; 0xa8e <main+0x58>
     a8c:	00 00       	nop
	PORTA=0b1000001;
	lcd_init();
	int z=0, x=0, t=0;
	while(1)
	{
		if((PINA&0x01)==0)
     a8e:	89 e3       	ldi	r24, 0x39	; 57
     a90:	90 e0       	ldi	r25, 0x00	; 0
     a92:	fc 01       	movw	r30, r24
     a94:	80 81       	ld	r24, Z
     a96:	88 2f       	mov	r24, r24
     a98:	90 e0       	ldi	r25, 0x00	; 0
     a9a:	81 70       	andi	r24, 0x01	; 1
     a9c:	90 70       	andi	r25, 0x00	; 0
     a9e:	00 97       	sbiw	r24, 0x00	; 0
     aa0:	09 f0       	breq	.+2      	; 0xaa4 <main+0x6e>
     aa2:	42 c0       	rjmp	.+132    	; 0xb28 <main+0xf2>
		{
			while(!(PINA&0x01));
     aa4:	00 00       	nop
     aa6:	89 e3       	ldi	r24, 0x39	; 57
     aa8:	90 e0       	ldi	r25, 0x00	; 0
     aaa:	fc 01       	movw	r30, r24
     aac:	80 81       	ld	r24, Z
     aae:	88 2f       	mov	r24, r24
     ab0:	90 e0       	ldi	r25, 0x00	; 0
     ab2:	81 70       	andi	r24, 0x01	; 1
     ab4:	90 70       	andi	r25, 0x00	; 0
     ab6:	00 97       	sbiw	r24, 0x00	; 0
     ab8:	b1 f3       	breq	.-20     	; 0xaa6 <main+0x70>
			PORTB=1;
     aba:	88 e3       	ldi	r24, 0x38	; 56
     abc:	90 e0       	ldi	r25, 0x00	; 0
     abe:	21 e0       	ldi	r18, 0x01	; 1
     ac0:	fc 01       	movw	r30, r24
     ac2:	20 83       	st	Z, r18
			z++;
     ac4:	89 81       	ldd	r24, Y+1	; 0x01
     ac6:	9a 81       	ldd	r25, Y+2	; 0x02
     ac8:	01 96       	adiw	r24, 0x01	; 1
     aca:	9a 83       	std	Y+2, r25	; 0x02
     acc:	89 83       	std	Y+1, r24	; 0x01
			lcd_command(0x81);
     ace:	81 e8       	ldi	r24, 0x81	; 129
     ad0:	0e 94 41 00 	call	0x82	; 0x82 <lcd_command>
			lcd_string("IN");
     ad4:	80 e6       	ldi	r24, 0x60	; 96
     ad6:	90 e0       	ldi	r25, 0x00	; 0
     ad8:	0e 94 f2 04 	call	0x9e4	; 0x9e4 <lcd_string>
			lcd_command(0xc2);
     adc:	82 ec       	ldi	r24, 0xC2	; 194
     ade:	0e 94 41 00 	call	0x82	; 0x82 <lcd_command>
			lcd_data(z);
     ae2:	89 81       	ldd	r24, Y+1	; 0x01
     ae4:	0e 94 90 02 	call	0x520	; 0x520 <lcd_data>
			lcd_command(0x85);
     ae8:	85 e8       	ldi	r24, 0x85	; 133
     aea:	0e 94 41 00 	call	0x82	; 0x82 <lcd_command>
			lcd_string("IN B/W");
     aee:	83 e6       	ldi	r24, 0x63	; 99
     af0:	90 e0       	ldi	r25, 0x00	; 0
     af2:	0e 94 f2 04 	call	0x9e4	; 0x9e4 <lcd_string>
			t=z-x;
     af6:	29 81       	ldd	r18, Y+1	; 0x01
     af8:	3a 81       	ldd	r19, Y+2	; 0x02
     afa:	8b 81       	ldd	r24, Y+3	; 0x03
     afc:	9c 81       	ldd	r25, Y+4	; 0x04
     afe:	a9 01       	movw	r20, r18
     b00:	48 1b       	sub	r20, r24
     b02:	59 0b       	sbc	r21, r25
     b04:	ca 01       	movw	r24, r20
     b06:	9e 83       	std	Y+6, r25	; 0x06
     b08:	8d 83       	std	Y+5, r24	; 0x05
			if(t>=0)
     b0a:	8d 81       	ldd	r24, Y+5	; 0x05
     b0c:	9e 81       	ldd	r25, Y+6	; 0x06
     b0e:	99 23       	and	r25, r25
     b10:	5c f0       	brlt	.+22     	; 0xb28 <main+0xf2>
			{
				lcd_command(0xc8);
     b12:	88 ec       	ldi	r24, 0xC8	; 200
     b14:	0e 94 41 00 	call	0x82	; 0x82 <lcd_command>
				lcd_data(t);
     b18:	8d 81       	ldd	r24, Y+5	; 0x05
     b1a:	0e 94 90 02 	call	0x520	; 0x520 <lcd_data>
				PORTC=t;
     b1e:	85 e3       	ldi	r24, 0x35	; 53
     b20:	90 e0       	ldi	r25, 0x00	; 0
     b22:	2d 81       	ldd	r18, Y+5	; 0x05
     b24:	fc 01       	movw	r30, r24
     b26:	20 83       	st	Z, r18
			}
		}
		if((PINA&0x80)==0)
     b28:	89 e3       	ldi	r24, 0x39	; 57
     b2a:	90 e0       	ldi	r25, 0x00	; 0
     b2c:	fc 01       	movw	r30, r24
     b2e:	80 81       	ld	r24, Z
     b30:	88 23       	and	r24, r24
     b32:	0c f4       	brge	.+2      	; 0xb36 <main+0x100>
     b34:	a9 cf       	rjmp	.-174    	; 0xa88 <main+0x52>
		{
			while(!(PINA&0x80));
     b36:	00 00       	nop
     b38:	89 e3       	ldi	r24, 0x39	; 57
     b3a:	90 e0       	ldi	r25, 0x00	; 0
     b3c:	fc 01       	movw	r30, r24
     b3e:	80 81       	ld	r24, Z
     b40:	88 23       	and	r24, r24
     b42:	d4 f7       	brge	.-12     	; 0xb38 <main+0x102>
			PORTB=128;
     b44:	88 e3       	ldi	r24, 0x38	; 56
     b46:	90 e0       	ldi	r25, 0x00	; 0
     b48:	20 e8       	ldi	r18, 0x80	; 128
     b4a:	fc 01       	movw	r30, r24
     b4c:	20 83       	st	Z, r18
			x++;
     b4e:	8b 81       	ldd	r24, Y+3	; 0x03
     b50:	9c 81       	ldd	r25, Y+4	; 0x04
     b52:	01 96       	adiw	r24, 0x01	; 1
     b54:	9c 83       	std	Y+4, r25	; 0x04
     b56:	8b 83       	std	Y+3, r24	; 0x03
			lcd_command(0x8d);
     b58:	8d e8       	ldi	r24, 0x8D	; 141
     b5a:	0e 94 41 00 	call	0x82	; 0x82 <lcd_command>
			lcd_string("OUT");
     b5e:	8a e6       	ldi	r24, 0x6A	; 106
     b60:	90 e0       	ldi	r25, 0x00	; 0
     b62:	0e 94 f2 04 	call	0x9e4	; 0x9e4 <lcd_string>
			lcd_command(0xcf);
     b66:	8f ec       	ldi	r24, 0xCF	; 207
     b68:	0e 94 41 00 	call	0x82	; 0x82 <lcd_command>
			lcd_data(x);
     b6c:	8b 81       	ldd	r24, Y+3	; 0x03
     b6e:	0e 94 90 02 	call	0x520	; 0x520 <lcd_data>
			lcd_command(0x85);
     b72:	85 e8       	ldi	r24, 0x85	; 133
     b74:	0e 94 41 00 	call	0x82	; 0x82 <lcd_command>
			lcd_string("IN B/W");
     b78:	83 e6       	ldi	r24, 0x63	; 99
     b7a:	90 e0       	ldi	r25, 0x00	; 0
     b7c:	0e 94 f2 04 	call	0x9e4	; 0x9e4 <lcd_string>
			t=z-x;
     b80:	29 81       	ldd	r18, Y+1	; 0x01
     b82:	3a 81       	ldd	r19, Y+2	; 0x02
     b84:	8b 81       	ldd	r24, Y+3	; 0x03
     b86:	9c 81       	ldd	r25, Y+4	; 0x04
     b88:	a9 01       	movw	r20, r18
     b8a:	48 1b       	sub	r20, r24
     b8c:	59 0b       	sbc	r21, r25
     b8e:	ca 01       	movw	r24, r20
     b90:	9e 83       	std	Y+6, r25	; 0x06
     b92:	8d 83       	std	Y+5, r24	; 0x05
			if(t>=0)
     b94:	8d 81       	ldd	r24, Y+5	; 0x05
     b96:	9e 81       	ldd	r25, Y+6	; 0x06
     b98:	99 23       	and	r25, r25
     b9a:	0c f4       	brge	.+2      	; 0xb9e <main+0x168>
     b9c:	77 cf       	rjmp	.-274    	; 0xa8c <main+0x56>
			{
				lcd_command(0xc8);
     b9e:	88 ec       	ldi	r24, 0xC8	; 200
     ba0:	0e 94 41 00 	call	0x82	; 0x82 <lcd_command>
				lcd_data(t);
     ba4:	8d 81       	ldd	r24, Y+5	; 0x05
     ba6:	0e 94 90 02 	call	0x520	; 0x520 <lcd_data>
				PORTC=t;
     baa:	85 e3       	ldi	r24, 0x35	; 53
     bac:	90 e0       	ldi	r25, 0x00	; 0
     bae:	2d 81       	ldd	r18, Y+5	; 0x05
     bb0:	fc 01       	movw	r30, r24
     bb2:	20 83       	st	Z, r18
			}
		}
	}
     bb4:	6c cf       	rjmp	.-296    	; 0xa8e <main+0x58>

00000bb6 <__fixunssfsi>:
     bb6:	ef 92       	push	r14
     bb8:	ff 92       	push	r15
     bba:	0f 93       	push	r16
     bbc:	1f 93       	push	r17
     bbe:	7b 01       	movw	r14, r22
     bc0:	8c 01       	movw	r16, r24
     bc2:	20 e0       	ldi	r18, 0x00	; 0
     bc4:	30 e0       	ldi	r19, 0x00	; 0
     bc6:	40 e0       	ldi	r20, 0x00	; 0
     bc8:	5f e4       	ldi	r21, 0x4F	; 79
     bca:	0e 94 d9 08 	call	0x11b2	; 0x11b2 <__gesf2>
     bce:	87 fd       	sbrc	r24, 7
     bd0:	11 c0       	rjmp	.+34     	; 0xbf4 <__fixunssfsi+0x3e>
     bd2:	c8 01       	movw	r24, r16
     bd4:	b7 01       	movw	r22, r14
     bd6:	20 e0       	ldi	r18, 0x00	; 0
     bd8:	30 e0       	ldi	r19, 0x00	; 0
     bda:	40 e0       	ldi	r20, 0x00	; 0
     bdc:	5f e4       	ldi	r21, 0x4F	; 79
     bde:	0e 94 7e 07 	call	0xefc	; 0xefc <__subsf3>
     be2:	0e 94 39 09 	call	0x1272	; 0x1272 <__fixsfsi>
     be6:	9b 01       	movw	r18, r22
     be8:	ac 01       	movw	r20, r24
     bea:	20 50       	subi	r18, 0x00	; 0
     bec:	30 40       	sbci	r19, 0x00	; 0
     bee:	40 40       	sbci	r20, 0x00	; 0
     bf0:	50 48       	sbci	r21, 0x80	; 128
     bf2:	06 c0       	rjmp	.+12     	; 0xc00 <__fixunssfsi+0x4a>
     bf4:	c8 01       	movw	r24, r16
     bf6:	b7 01       	movw	r22, r14
     bf8:	0e 94 39 09 	call	0x1272	; 0x1272 <__fixsfsi>
     bfc:	9b 01       	movw	r18, r22
     bfe:	ac 01       	movw	r20, r24
     c00:	b9 01       	movw	r22, r18
     c02:	ca 01       	movw	r24, r20
     c04:	1f 91       	pop	r17
     c06:	0f 91       	pop	r16
     c08:	ff 90       	pop	r15
     c0a:	ef 90       	pop	r14
     c0c:	08 95       	ret

00000c0e <_fpadd_parts>:
     c0e:	a0 e0       	ldi	r26, 0x00	; 0
     c10:	b0 e0       	ldi	r27, 0x00	; 0
     c12:	ed e0       	ldi	r30, 0x0D	; 13
     c14:	f6 e0       	ldi	r31, 0x06	; 6
     c16:	0c 94 1f 0b 	jmp	0x163e	; 0x163e <__prologue_saves__+0x8>
     c1a:	fc 01       	movw	r30, r24
     c1c:	ea 01       	movw	r28, r20
     c1e:	80 81       	ld	r24, Z
     c20:	82 30       	cpi	r24, 0x02	; 2
     c22:	08 f4       	brcc	.+2      	; 0xc26 <_fpadd_parts+0x18>
     c24:	38 c1       	rjmp	.+624    	; 0xe96 <_fpadd_parts+0x288>
     c26:	db 01       	movw	r26, r22
     c28:	9c 91       	ld	r25, X
     c2a:	92 30       	cpi	r25, 0x02	; 2
     c2c:	08 f4       	brcc	.+2      	; 0xc30 <_fpadd_parts+0x22>
     c2e:	30 c1       	rjmp	.+608    	; 0xe90 <_fpadd_parts+0x282>
     c30:	84 30       	cpi	r24, 0x04	; 4
     c32:	59 f4       	brne	.+22     	; 0xc4a <_fpadd_parts+0x3c>
     c34:	94 30       	cpi	r25, 0x04	; 4
     c36:	09 f0       	breq	.+2      	; 0xc3a <_fpadd_parts+0x2c>
     c38:	2e c1       	rjmp	.+604    	; 0xe96 <_fpadd_parts+0x288>
     c3a:	91 81       	ldd	r25, Z+1	; 0x01
     c3c:	11 96       	adiw	r26, 0x01	; 1
     c3e:	8c 91       	ld	r24, X
     c40:	11 97       	sbiw	r26, 0x01	; 1
     c42:	98 17       	cp	r25, r24
     c44:	09 f0       	breq	.+2      	; 0xc48 <_fpadd_parts+0x3a>
     c46:	21 c1       	rjmp	.+578    	; 0xe8a <_fpadd_parts+0x27c>
     c48:	26 c1       	rjmp	.+588    	; 0xe96 <_fpadd_parts+0x288>
     c4a:	94 30       	cpi	r25, 0x04	; 4
     c4c:	09 f4       	brne	.+2      	; 0xc50 <_fpadd_parts+0x42>
     c4e:	20 c1       	rjmp	.+576    	; 0xe90 <_fpadd_parts+0x282>
     c50:	92 30       	cpi	r25, 0x02	; 2
     c52:	b1 f4       	brne	.+44     	; 0xc80 <_fpadd_parts+0x72>
     c54:	82 30       	cpi	r24, 0x02	; 2
     c56:	09 f0       	breq	.+2      	; 0xc5a <_fpadd_parts+0x4c>
     c58:	1e c1       	rjmp	.+572    	; 0xe96 <_fpadd_parts+0x288>
     c5a:	ca 01       	movw	r24, r20
     c5c:	af 01       	movw	r20, r30
     c5e:	28 e0       	ldi	r18, 0x08	; 8
     c60:	da 01       	movw	r26, r20
     c62:	0d 90       	ld	r0, X+
     c64:	ad 01       	movw	r20, r26
     c66:	dc 01       	movw	r26, r24
     c68:	0d 92       	st	X+, r0
     c6a:	cd 01       	movw	r24, r26
     c6c:	21 50       	subi	r18, 0x01	; 1
     c6e:	c1 f7       	brne	.-16     	; 0xc60 <_fpadd_parts+0x52>
     c70:	db 01       	movw	r26, r22
     c72:	11 96       	adiw	r26, 0x01	; 1
     c74:	8c 91       	ld	r24, X
     c76:	11 97       	sbiw	r26, 0x01	; 1
     c78:	91 81       	ldd	r25, Z+1	; 0x01
     c7a:	89 23       	and	r24, r25
     c7c:	89 83       	std	Y+1, r24	; 0x01
     c7e:	0a c1       	rjmp	.+532    	; 0xe94 <_fpadd_parts+0x286>
     c80:	82 30       	cpi	r24, 0x02	; 2
     c82:	09 f4       	brne	.+2      	; 0xc86 <_fpadd_parts+0x78>
     c84:	05 c1       	rjmp	.+522    	; 0xe90 <_fpadd_parts+0x282>
     c86:	c2 80       	ldd	r12, Z+2	; 0x02
     c88:	d3 80       	ldd	r13, Z+3	; 0x03
     c8a:	db 01       	movw	r26, r22
     c8c:	12 96       	adiw	r26, 0x02	; 2
     c8e:	6d 90       	ld	r6, X+
     c90:	7c 90       	ld	r7, X
     c92:	13 97       	sbiw	r26, 0x03	; 3
     c94:	24 81       	ldd	r18, Z+4	; 0x04
     c96:	35 81       	ldd	r19, Z+5	; 0x05
     c98:	46 81       	ldd	r20, Z+6	; 0x06
     c9a:	57 81       	ldd	r21, Z+7	; 0x07
     c9c:	14 96       	adiw	r26, 0x04	; 4
     c9e:	ed 90       	ld	r14, X+
     ca0:	fd 90       	ld	r15, X+
     ca2:	0d 91       	ld	r16, X+
     ca4:	1c 91       	ld	r17, X
     ca6:	17 97       	sbiw	r26, 0x07	; 7
     ca8:	c6 01       	movw	r24, r12
     caa:	86 19       	sub	r24, r6
     cac:	97 09       	sbc	r25, r7
     cae:	5c 01       	movw	r10, r24
     cb0:	97 ff       	sbrs	r25, 7
     cb2:	04 c0       	rjmp	.+8      	; 0xcbc <_fpadd_parts+0xae>
     cb4:	aa 24       	eor	r10, r10
     cb6:	bb 24       	eor	r11, r11
     cb8:	a8 1a       	sub	r10, r24
     cba:	b9 0a       	sbc	r11, r25
     cbc:	b0 e2       	ldi	r27, 0x20	; 32
     cbe:	ab 16       	cp	r10, r27
     cc0:	b1 04       	cpc	r11, r1
     cc2:	0c f0       	brlt	.+2      	; 0xcc6 <_fpadd_parts+0xb8>
     cc4:	61 c0       	rjmp	.+194    	; 0xd88 <_fpadd_parts+0x17a>
     cc6:	18 16       	cp	r1, r24
     cc8:	19 06       	cpc	r1, r25
     cca:	6c f5       	brge	.+90     	; 0xd26 <_fpadd_parts+0x118>
     ccc:	37 01       	movw	r6, r14
     cce:	48 01       	movw	r8, r16
     cd0:	0a 2c       	mov	r0, r10
     cd2:	04 c0       	rjmp	.+8      	; 0xcdc <_fpadd_parts+0xce>
     cd4:	96 94       	lsr	r9
     cd6:	87 94       	ror	r8
     cd8:	77 94       	ror	r7
     cda:	67 94       	ror	r6
     cdc:	0a 94       	dec	r0
     cde:	d2 f7       	brpl	.-12     	; 0xcd4 <_fpadd_parts+0xc6>
     ce0:	81 e0       	ldi	r24, 0x01	; 1
     ce2:	90 e0       	ldi	r25, 0x00	; 0
     ce4:	a0 e0       	ldi	r26, 0x00	; 0
     ce6:	b0 e0       	ldi	r27, 0x00	; 0
     ce8:	0a 2c       	mov	r0, r10
     cea:	04 c0       	rjmp	.+8      	; 0xcf4 <_fpadd_parts+0xe6>
     cec:	88 0f       	add	r24, r24
     cee:	99 1f       	adc	r25, r25
     cf0:	aa 1f       	adc	r26, r26
     cf2:	bb 1f       	adc	r27, r27
     cf4:	0a 94       	dec	r0
     cf6:	d2 f7       	brpl	.-12     	; 0xcec <_fpadd_parts+0xde>
     cf8:	01 97       	sbiw	r24, 0x01	; 1
     cfa:	a1 09       	sbc	r26, r1
     cfc:	b1 09       	sbc	r27, r1
     cfe:	8e 21       	and	r24, r14
     d00:	9f 21       	and	r25, r15
     d02:	a0 23       	and	r26, r16
     d04:	b1 23       	and	r27, r17
     d06:	ee 24       	eor	r14, r14
     d08:	ff 24       	eor	r15, r15
     d0a:	87 01       	movw	r16, r14
     d0c:	e3 94       	inc	r14
     d0e:	00 97       	sbiw	r24, 0x00	; 0
     d10:	a1 05       	cpc	r26, r1
     d12:	b1 05       	cpc	r27, r1
     d14:	19 f4       	brne	.+6      	; 0xd1c <_fpadd_parts+0x10e>
     d16:	ee 24       	eor	r14, r14
     d18:	ff 24       	eor	r15, r15
     d1a:	87 01       	movw	r16, r14
     d1c:	e6 28       	or	r14, r6
     d1e:	f7 28       	or	r15, r7
     d20:	08 29       	or	r16, r8
     d22:	19 29       	or	r17, r9
     d24:	3c c0       	rjmp	.+120    	; 0xd9e <_fpadd_parts+0x190>
     d26:	00 97       	sbiw	r24, 0x00	; 0
     d28:	d1 f1       	breq	.+116    	; 0xd9e <_fpadd_parts+0x190>
     d2a:	ca 0c       	add	r12, r10
     d2c:	db 1c       	adc	r13, r11
     d2e:	39 01       	movw	r6, r18
     d30:	4a 01       	movw	r8, r20
     d32:	0a 2c       	mov	r0, r10
     d34:	04 c0       	rjmp	.+8      	; 0xd3e <_fpadd_parts+0x130>
     d36:	96 94       	lsr	r9
     d38:	87 94       	ror	r8
     d3a:	77 94       	ror	r7
     d3c:	67 94       	ror	r6
     d3e:	0a 94       	dec	r0
     d40:	d2 f7       	brpl	.-12     	; 0xd36 <_fpadd_parts+0x128>
     d42:	81 e0       	ldi	r24, 0x01	; 1
     d44:	90 e0       	ldi	r25, 0x00	; 0
     d46:	a0 e0       	ldi	r26, 0x00	; 0
     d48:	b0 e0       	ldi	r27, 0x00	; 0
     d4a:	0a 2c       	mov	r0, r10
     d4c:	04 c0       	rjmp	.+8      	; 0xd56 <_fpadd_parts+0x148>
     d4e:	88 0f       	add	r24, r24
     d50:	99 1f       	adc	r25, r25
     d52:	aa 1f       	adc	r26, r26
     d54:	bb 1f       	adc	r27, r27
     d56:	0a 94       	dec	r0
     d58:	d2 f7       	brpl	.-12     	; 0xd4e <_fpadd_parts+0x140>
     d5a:	01 97       	sbiw	r24, 0x01	; 1
     d5c:	a1 09       	sbc	r26, r1
     d5e:	b1 09       	sbc	r27, r1
     d60:	82 23       	and	r24, r18
     d62:	93 23       	and	r25, r19
     d64:	a4 23       	and	r26, r20
     d66:	b5 23       	and	r27, r21
     d68:	21 e0       	ldi	r18, 0x01	; 1
     d6a:	30 e0       	ldi	r19, 0x00	; 0
     d6c:	40 e0       	ldi	r20, 0x00	; 0
     d6e:	50 e0       	ldi	r21, 0x00	; 0
     d70:	00 97       	sbiw	r24, 0x00	; 0
     d72:	a1 05       	cpc	r26, r1
     d74:	b1 05       	cpc	r27, r1
     d76:	19 f4       	brne	.+6      	; 0xd7e <_fpadd_parts+0x170>
     d78:	20 e0       	ldi	r18, 0x00	; 0
     d7a:	30 e0       	ldi	r19, 0x00	; 0
     d7c:	a9 01       	movw	r20, r18
     d7e:	26 29       	or	r18, r6
     d80:	37 29       	or	r19, r7
     d82:	48 29       	or	r20, r8
     d84:	59 29       	or	r21, r9
     d86:	0b c0       	rjmp	.+22     	; 0xd9e <_fpadd_parts+0x190>
     d88:	6c 14       	cp	r6, r12
     d8a:	7d 04       	cpc	r7, r13
     d8c:	24 f4       	brge	.+8      	; 0xd96 <_fpadd_parts+0x188>
     d8e:	ee 24       	eor	r14, r14
     d90:	ff 24       	eor	r15, r15
     d92:	87 01       	movw	r16, r14
     d94:	04 c0       	rjmp	.+8      	; 0xd9e <_fpadd_parts+0x190>
     d96:	63 01       	movw	r12, r6
     d98:	20 e0       	ldi	r18, 0x00	; 0
     d9a:	30 e0       	ldi	r19, 0x00	; 0
     d9c:	a9 01       	movw	r20, r18
     d9e:	81 81       	ldd	r24, Z+1	; 0x01
     da0:	fb 01       	movw	r30, r22
     da2:	91 81       	ldd	r25, Z+1	; 0x01
     da4:	89 17       	cp	r24, r25
     da6:	09 f4       	brne	.+2      	; 0xdaa <_fpadd_parts+0x19c>
     da8:	45 c0       	rjmp	.+138    	; 0xe34 <_fpadd_parts+0x226>
     daa:	88 23       	and	r24, r24
     dac:	49 f0       	breq	.+18     	; 0xdc0 <_fpadd_parts+0x1b2>
     dae:	d8 01       	movw	r26, r16
     db0:	c7 01       	movw	r24, r14
     db2:	82 1b       	sub	r24, r18
     db4:	93 0b       	sbc	r25, r19
     db6:	a4 0b       	sbc	r26, r20
     db8:	b5 0b       	sbc	r27, r21
     dba:	9c 01       	movw	r18, r24
     dbc:	ad 01       	movw	r20, r26
     dbe:	04 c0       	rjmp	.+8      	; 0xdc8 <_fpadd_parts+0x1ba>
     dc0:	2e 19       	sub	r18, r14
     dc2:	3f 09       	sbc	r19, r15
     dc4:	40 0b       	sbc	r20, r16
     dc6:	51 0b       	sbc	r21, r17
     dc8:	57 fd       	sbrc	r21, 7
     dca:	04 c0       	rjmp	.+8      	; 0xdd4 <_fpadd_parts+0x1c6>
     dcc:	19 82       	std	Y+1, r1	; 0x01
     dce:	db 82       	std	Y+3, r13	; 0x03
     dd0:	ca 82       	std	Y+2, r12	; 0x02
     dd2:	0b c0       	rjmp	.+22     	; 0xdea <_fpadd_parts+0x1dc>
     dd4:	81 e0       	ldi	r24, 0x01	; 1
     dd6:	89 83       	std	Y+1, r24	; 0x01
     dd8:	db 82       	std	Y+3, r13	; 0x03
     dda:	ca 82       	std	Y+2, r12	; 0x02
     ddc:	50 95       	com	r21
     dde:	40 95       	com	r20
     de0:	30 95       	com	r19
     de2:	21 95       	neg	r18
     de4:	3f 4f       	sbci	r19, 0xFF	; 255
     de6:	4f 4f       	sbci	r20, 0xFF	; 255
     de8:	5f 4f       	sbci	r21, 0xFF	; 255
     dea:	2c 83       	std	Y+4, r18	; 0x04
     dec:	3d 83       	std	Y+5, r19	; 0x05
     dee:	4e 83       	std	Y+6, r20	; 0x06
     df0:	5f 83       	std	Y+7, r21	; 0x07
     df2:	0d c0       	rjmp	.+26     	; 0xe0e <_fpadd_parts+0x200>
     df4:	88 0f       	add	r24, r24
     df6:	99 1f       	adc	r25, r25
     df8:	aa 1f       	adc	r26, r26
     dfa:	bb 1f       	adc	r27, r27
     dfc:	8c 83       	std	Y+4, r24	; 0x04
     dfe:	9d 83       	std	Y+5, r25	; 0x05
     e00:	ae 83       	std	Y+6, r26	; 0x06
     e02:	bf 83       	std	Y+7, r27	; 0x07
     e04:	8a 81       	ldd	r24, Y+2	; 0x02
     e06:	9b 81       	ldd	r25, Y+3	; 0x03
     e08:	01 97       	sbiw	r24, 0x01	; 1
     e0a:	9b 83       	std	Y+3, r25	; 0x03
     e0c:	8a 83       	std	Y+2, r24	; 0x02
     e0e:	8c 81       	ldd	r24, Y+4	; 0x04
     e10:	9d 81       	ldd	r25, Y+5	; 0x05
     e12:	ae 81       	ldd	r26, Y+6	; 0x06
     e14:	bf 81       	ldd	r27, Y+7	; 0x07
     e16:	9c 01       	movw	r18, r24
     e18:	ad 01       	movw	r20, r26
     e1a:	21 50       	subi	r18, 0x01	; 1
     e1c:	30 40       	sbci	r19, 0x00	; 0
     e1e:	40 40       	sbci	r20, 0x00	; 0
     e20:	50 40       	sbci	r21, 0x00	; 0
     e22:	2f 3f       	cpi	r18, 0xFF	; 255
     e24:	ef ef       	ldi	r30, 0xFF	; 255
     e26:	3e 07       	cpc	r19, r30
     e28:	ef ef       	ldi	r30, 0xFF	; 255
     e2a:	4e 07       	cpc	r20, r30
     e2c:	ef e3       	ldi	r30, 0x3F	; 63
     e2e:	5e 07       	cpc	r21, r30
     e30:	08 f3       	brcs	.-62     	; 0xdf4 <_fpadd_parts+0x1e6>
     e32:	0b c0       	rjmp	.+22     	; 0xe4a <_fpadd_parts+0x23c>
     e34:	89 83       	std	Y+1, r24	; 0x01
     e36:	db 82       	std	Y+3, r13	; 0x03
     e38:	ca 82       	std	Y+2, r12	; 0x02
     e3a:	2e 0d       	add	r18, r14
     e3c:	3f 1d       	adc	r19, r15
     e3e:	40 1f       	adc	r20, r16
     e40:	51 1f       	adc	r21, r17
     e42:	2c 83       	std	Y+4, r18	; 0x04
     e44:	3d 83       	std	Y+5, r19	; 0x05
     e46:	4e 83       	std	Y+6, r20	; 0x06
     e48:	5f 83       	std	Y+7, r21	; 0x07
     e4a:	83 e0       	ldi	r24, 0x03	; 3
     e4c:	88 83       	st	Y, r24
     e4e:	2c 81       	ldd	r18, Y+4	; 0x04
     e50:	3d 81       	ldd	r19, Y+5	; 0x05
     e52:	4e 81       	ldd	r20, Y+6	; 0x06
     e54:	5f 81       	ldd	r21, Y+7	; 0x07
     e56:	57 ff       	sbrs	r21, 7
     e58:	1d c0       	rjmp	.+58     	; 0xe94 <_fpadd_parts+0x286>
     e5a:	da 01       	movw	r26, r20
     e5c:	c9 01       	movw	r24, r18
     e5e:	81 70       	andi	r24, 0x01	; 1
     e60:	90 70       	andi	r25, 0x00	; 0
     e62:	a0 70       	andi	r26, 0x00	; 0
     e64:	b0 70       	andi	r27, 0x00	; 0
     e66:	56 95       	lsr	r21
     e68:	47 95       	ror	r20
     e6a:	37 95       	ror	r19
     e6c:	27 95       	ror	r18
     e6e:	82 2b       	or	r24, r18
     e70:	93 2b       	or	r25, r19
     e72:	a4 2b       	or	r26, r20
     e74:	b5 2b       	or	r27, r21
     e76:	8c 83       	std	Y+4, r24	; 0x04
     e78:	9d 83       	std	Y+5, r25	; 0x05
     e7a:	ae 83       	std	Y+6, r26	; 0x06
     e7c:	bf 83       	std	Y+7, r27	; 0x07
     e7e:	8a 81       	ldd	r24, Y+2	; 0x02
     e80:	9b 81       	ldd	r25, Y+3	; 0x03
     e82:	01 96       	adiw	r24, 0x01	; 1
     e84:	9b 83       	std	Y+3, r25	; 0x03
     e86:	8a 83       	std	Y+2, r24	; 0x02
     e88:	05 c0       	rjmp	.+10     	; 0xe94 <_fpadd_parts+0x286>
     e8a:	ee e6       	ldi	r30, 0x6E	; 110
     e8c:	f0 e0       	ldi	r31, 0x00	; 0
     e8e:	03 c0       	rjmp	.+6      	; 0xe96 <_fpadd_parts+0x288>
     e90:	fb 01       	movw	r30, r22
     e92:	01 c0       	rjmp	.+2      	; 0xe96 <_fpadd_parts+0x288>
     e94:	fe 01       	movw	r30, r28
     e96:	cf 01       	movw	r24, r30
     e98:	cd b7       	in	r28, 0x3d	; 61
     e9a:	de b7       	in	r29, 0x3e	; 62
     e9c:	ee e0       	ldi	r30, 0x0E	; 14
     e9e:	0c 94 3b 0b 	jmp	0x1676	; 0x1676 <__epilogue_restores__+0x8>

00000ea2 <__addsf3>:
     ea2:	a0 e2       	ldi	r26, 0x20	; 32
     ea4:	b0 e0       	ldi	r27, 0x00	; 0
     ea6:	e7 e5       	ldi	r30, 0x57	; 87
     ea8:	f7 e0       	ldi	r31, 0x07	; 7
     eaa:	0c 94 27 0b 	jmp	0x164e	; 0x164e <__prologue_saves__+0x18>
     eae:	69 83       	std	Y+1, r22	; 0x01
     eb0:	7a 83       	std	Y+2, r23	; 0x02
     eb2:	8b 83       	std	Y+3, r24	; 0x03
     eb4:	9c 83       	std	Y+4, r25	; 0x04
     eb6:	2d 83       	std	Y+5, r18	; 0x05
     eb8:	3e 83       	std	Y+6, r19	; 0x06
     eba:	4f 83       	std	Y+7, r20	; 0x07
     ebc:	58 87       	std	Y+8, r21	; 0x08
     ebe:	89 e0       	ldi	r24, 0x09	; 9
     ec0:	e8 2e       	mov	r14, r24
     ec2:	f1 2c       	mov	r15, r1
     ec4:	ec 0e       	add	r14, r28
     ec6:	fd 1e       	adc	r15, r29
     ec8:	ce 01       	movw	r24, r28
     eca:	01 96       	adiw	r24, 0x01	; 1
     ecc:	b7 01       	movw	r22, r14
     ece:	0e 94 59 0a 	call	0x14b2	; 0x14b2 <__unpack_f>
     ed2:	8e 01       	movw	r16, r28
     ed4:	0f 5e       	subi	r16, 0xEF	; 239
     ed6:	1f 4f       	sbci	r17, 0xFF	; 255
     ed8:	ce 01       	movw	r24, r28
     eda:	05 96       	adiw	r24, 0x05	; 5
     edc:	b8 01       	movw	r22, r16
     ede:	0e 94 59 0a 	call	0x14b2	; 0x14b2 <__unpack_f>
     ee2:	c7 01       	movw	r24, r14
     ee4:	b8 01       	movw	r22, r16
     ee6:	ae 01       	movw	r20, r28
     ee8:	47 5e       	subi	r20, 0xE7	; 231
     eea:	5f 4f       	sbci	r21, 0xFF	; 255
     eec:	0e 94 07 06 	call	0xc0e	; 0xc0e <_fpadd_parts>
     ef0:	0e 94 8b 09 	call	0x1316	; 0x1316 <__pack_f>
     ef4:	a0 96       	adiw	r28, 0x20	; 32
     ef6:	e6 e0       	ldi	r30, 0x06	; 6
     ef8:	0c 94 43 0b 	jmp	0x1686	; 0x1686 <__epilogue_restores__+0x18>

00000efc <__subsf3>:
     efc:	a0 e2       	ldi	r26, 0x20	; 32
     efe:	b0 e0       	ldi	r27, 0x00	; 0
     f00:	e4 e8       	ldi	r30, 0x84	; 132
     f02:	f7 e0       	ldi	r31, 0x07	; 7
     f04:	0c 94 27 0b 	jmp	0x164e	; 0x164e <__prologue_saves__+0x18>
     f08:	69 83       	std	Y+1, r22	; 0x01
     f0a:	7a 83       	std	Y+2, r23	; 0x02
     f0c:	8b 83       	std	Y+3, r24	; 0x03
     f0e:	9c 83       	std	Y+4, r25	; 0x04
     f10:	2d 83       	std	Y+5, r18	; 0x05
     f12:	3e 83       	std	Y+6, r19	; 0x06
     f14:	4f 83       	std	Y+7, r20	; 0x07
     f16:	58 87       	std	Y+8, r21	; 0x08
     f18:	8e 01       	movw	r16, r28
     f1a:	07 5f       	subi	r16, 0xF7	; 247
     f1c:	1f 4f       	sbci	r17, 0xFF	; 255
     f1e:	ce 01       	movw	r24, r28
     f20:	01 96       	adiw	r24, 0x01	; 1
     f22:	b8 01       	movw	r22, r16
     f24:	0e 94 59 0a 	call	0x14b2	; 0x14b2 <__unpack_f>
     f28:	91 e1       	ldi	r25, 0x11	; 17
     f2a:	e9 2e       	mov	r14, r25
     f2c:	f1 2c       	mov	r15, r1
     f2e:	ec 0e       	add	r14, r28
     f30:	fd 1e       	adc	r15, r29
     f32:	ce 01       	movw	r24, r28
     f34:	05 96       	adiw	r24, 0x05	; 5
     f36:	b7 01       	movw	r22, r14
     f38:	0e 94 59 0a 	call	0x14b2	; 0x14b2 <__unpack_f>
     f3c:	8a 89       	ldd	r24, Y+18	; 0x12
     f3e:	91 e0       	ldi	r25, 0x01	; 1
     f40:	89 27       	eor	r24, r25
     f42:	8a 8b       	std	Y+18, r24	; 0x12
     f44:	c8 01       	movw	r24, r16
     f46:	b7 01       	movw	r22, r14
     f48:	ae 01       	movw	r20, r28
     f4a:	47 5e       	subi	r20, 0xE7	; 231
     f4c:	5f 4f       	sbci	r21, 0xFF	; 255
     f4e:	0e 94 07 06 	call	0xc0e	; 0xc0e <_fpadd_parts>
     f52:	0e 94 8b 09 	call	0x1316	; 0x1316 <__pack_f>
     f56:	a0 96       	adiw	r28, 0x20	; 32
     f58:	e6 e0       	ldi	r30, 0x06	; 6
     f5a:	0c 94 43 0b 	jmp	0x1686	; 0x1686 <__epilogue_restores__+0x18>

00000f5e <__mulsf3>:
     f5e:	a0 e2       	ldi	r26, 0x20	; 32
     f60:	b0 e0       	ldi	r27, 0x00	; 0
     f62:	e5 eb       	ldi	r30, 0xB5	; 181
     f64:	f7 e0       	ldi	r31, 0x07	; 7
     f66:	0c 94 1b 0b 	jmp	0x1636	; 0x1636 <__prologue_saves__>
     f6a:	69 83       	std	Y+1, r22	; 0x01
     f6c:	7a 83       	std	Y+2, r23	; 0x02
     f6e:	8b 83       	std	Y+3, r24	; 0x03
     f70:	9c 83       	std	Y+4, r25	; 0x04
     f72:	2d 83       	std	Y+5, r18	; 0x05
     f74:	3e 83       	std	Y+6, r19	; 0x06
     f76:	4f 83       	std	Y+7, r20	; 0x07
     f78:	58 87       	std	Y+8, r21	; 0x08
     f7a:	ce 01       	movw	r24, r28
     f7c:	01 96       	adiw	r24, 0x01	; 1
     f7e:	be 01       	movw	r22, r28
     f80:	67 5f       	subi	r22, 0xF7	; 247
     f82:	7f 4f       	sbci	r23, 0xFF	; 255
     f84:	0e 94 59 0a 	call	0x14b2	; 0x14b2 <__unpack_f>
     f88:	ce 01       	movw	r24, r28
     f8a:	05 96       	adiw	r24, 0x05	; 5
     f8c:	be 01       	movw	r22, r28
     f8e:	6f 5e       	subi	r22, 0xEF	; 239
     f90:	7f 4f       	sbci	r23, 0xFF	; 255
     f92:	0e 94 59 0a 	call	0x14b2	; 0x14b2 <__unpack_f>
     f96:	99 85       	ldd	r25, Y+9	; 0x09
     f98:	92 30       	cpi	r25, 0x02	; 2
     f9a:	78 f0       	brcs	.+30     	; 0xfba <__mulsf3+0x5c>
     f9c:	89 89       	ldd	r24, Y+17	; 0x11
     f9e:	82 30       	cpi	r24, 0x02	; 2
     fa0:	c0 f0       	brcs	.+48     	; 0xfd2 <__mulsf3+0x74>
     fa2:	94 30       	cpi	r25, 0x04	; 4
     fa4:	19 f4       	brne	.+6      	; 0xfac <__mulsf3+0x4e>
     fa6:	82 30       	cpi	r24, 0x02	; 2
     fa8:	41 f4       	brne	.+16     	; 0xfba <__mulsf3+0x5c>
     faa:	cb c0       	rjmp	.+406    	; 0x1142 <__mulsf3+0x1e4>
     fac:	84 30       	cpi	r24, 0x04	; 4
     fae:	19 f4       	brne	.+6      	; 0xfb6 <__mulsf3+0x58>
     fb0:	92 30       	cpi	r25, 0x02	; 2
     fb2:	79 f4       	brne	.+30     	; 0xfd2 <__mulsf3+0x74>
     fb4:	c6 c0       	rjmp	.+396    	; 0x1142 <__mulsf3+0x1e4>
     fb6:	92 30       	cpi	r25, 0x02	; 2
     fb8:	51 f4       	brne	.+20     	; 0xfce <__mulsf3+0x70>
     fba:	81 e0       	ldi	r24, 0x01	; 1
     fbc:	2a 85       	ldd	r18, Y+10	; 0x0a
     fbe:	9a 89       	ldd	r25, Y+18	; 0x12
     fc0:	29 17       	cp	r18, r25
     fc2:	09 f4       	brne	.+2      	; 0xfc6 <__mulsf3+0x68>
     fc4:	80 e0       	ldi	r24, 0x00	; 0
     fc6:	8a 87       	std	Y+10, r24	; 0x0a
     fc8:	ce 01       	movw	r24, r28
     fca:	09 96       	adiw	r24, 0x09	; 9
     fcc:	bc c0       	rjmp	.+376    	; 0x1146 <__mulsf3+0x1e8>
     fce:	82 30       	cpi	r24, 0x02	; 2
     fd0:	51 f4       	brne	.+20     	; 0xfe6 <__mulsf3+0x88>
     fd2:	81 e0       	ldi	r24, 0x01	; 1
     fd4:	2a 85       	ldd	r18, Y+10	; 0x0a
     fd6:	9a 89       	ldd	r25, Y+18	; 0x12
     fd8:	29 17       	cp	r18, r25
     fda:	09 f4       	brne	.+2      	; 0xfde <__mulsf3+0x80>
     fdc:	80 e0       	ldi	r24, 0x00	; 0
     fde:	8a 8b       	std	Y+18, r24	; 0x12
     fe0:	ce 01       	movw	r24, r28
     fe2:	41 96       	adiw	r24, 0x11	; 17
     fe4:	b0 c0       	rjmp	.+352    	; 0x1146 <__mulsf3+0x1e8>
     fe6:	6d 84       	ldd	r6, Y+13	; 0x0d
     fe8:	7e 84       	ldd	r7, Y+14	; 0x0e
     fea:	8f 84       	ldd	r8, Y+15	; 0x0f
     fec:	98 88       	ldd	r9, Y+16	; 0x10
     fee:	ed 88       	ldd	r14, Y+21	; 0x15
     ff0:	fe 88       	ldd	r15, Y+22	; 0x16
     ff2:	0f 89       	ldd	r16, Y+23	; 0x17
     ff4:	18 8d       	ldd	r17, Y+24	; 0x18
     ff6:	e0 e2       	ldi	r30, 0x20	; 32
     ff8:	f0 e0       	ldi	r31, 0x00	; 0
     ffa:	80 e0       	ldi	r24, 0x00	; 0
     ffc:	90 e0       	ldi	r25, 0x00	; 0
     ffe:	dc 01       	movw	r26, r24
    1000:	aa 24       	eor	r10, r10
    1002:	bb 24       	eor	r11, r11
    1004:	65 01       	movw	r12, r10
    1006:	20 e0       	ldi	r18, 0x00	; 0
    1008:	30 e0       	ldi	r19, 0x00	; 0
    100a:	a9 01       	movw	r20, r18
    100c:	b3 01       	movw	r22, r6
    100e:	61 70       	andi	r22, 0x01	; 1
    1010:	70 70       	andi	r23, 0x00	; 0
    1012:	61 15       	cp	r22, r1
    1014:	71 05       	cpc	r23, r1
    1016:	d1 f0       	breq	.+52     	; 0x104c <__mulsf3+0xee>
    1018:	2e 0d       	add	r18, r14
    101a:	3f 1d       	adc	r19, r15
    101c:	40 1f       	adc	r20, r16
    101e:	51 1f       	adc	r21, r17
    1020:	15 01       	movw	r2, r10
    1022:	26 01       	movw	r4, r12
    1024:	28 0e       	add	r2, r24
    1026:	39 1e       	adc	r3, r25
    1028:	4a 1e       	adc	r4, r26
    102a:	5b 1e       	adc	r5, r27
    102c:	81 e0       	ldi	r24, 0x01	; 1
    102e:	90 e0       	ldi	r25, 0x00	; 0
    1030:	a0 e0       	ldi	r26, 0x00	; 0
    1032:	b0 e0       	ldi	r27, 0x00	; 0
    1034:	2e 15       	cp	r18, r14
    1036:	3f 05       	cpc	r19, r15
    1038:	40 07       	cpc	r20, r16
    103a:	51 07       	cpc	r21, r17
    103c:	18 f0       	brcs	.+6      	; 0x1044 <__mulsf3+0xe6>
    103e:	80 e0       	ldi	r24, 0x00	; 0
    1040:	90 e0       	ldi	r25, 0x00	; 0
    1042:	dc 01       	movw	r26, r24
    1044:	82 0d       	add	r24, r2
    1046:	93 1d       	adc	r25, r3
    1048:	a4 1d       	adc	r26, r4
    104a:	b5 1d       	adc	r27, r5
    104c:	aa 0c       	add	r10, r10
    104e:	bb 1c       	adc	r11, r11
    1050:	cc 1c       	adc	r12, r12
    1052:	dd 1c       	adc	r13, r13
    1054:	17 ff       	sbrs	r17, 7
    1056:	09 c0       	rjmp	.+18     	; 0x106a <__mulsf3+0x10c>
    1058:	61 e0       	ldi	r22, 0x01	; 1
    105a:	26 2e       	mov	r2, r22
    105c:	31 2c       	mov	r3, r1
    105e:	41 2c       	mov	r4, r1
    1060:	51 2c       	mov	r5, r1
    1062:	a2 28       	or	r10, r2
    1064:	b3 28       	or	r11, r3
    1066:	c4 28       	or	r12, r4
    1068:	d5 28       	or	r13, r5
    106a:	31 97       	sbiw	r30, 0x01	; 1
    106c:	49 f0       	breq	.+18     	; 0x1080 <__mulsf3+0x122>
    106e:	ee 0c       	add	r14, r14
    1070:	ff 1c       	adc	r15, r15
    1072:	00 1f       	adc	r16, r16
    1074:	11 1f       	adc	r17, r17
    1076:	96 94       	lsr	r9
    1078:	87 94       	ror	r8
    107a:	77 94       	ror	r7
    107c:	67 94       	ror	r6
    107e:	c6 cf       	rjmp	.-116    	; 0x100c <__mulsf3+0xae>
    1080:	6b 89       	ldd	r22, Y+19	; 0x13
    1082:	7c 89       	ldd	r23, Y+20	; 0x14
    1084:	eb 85       	ldd	r30, Y+11	; 0x0b
    1086:	fc 85       	ldd	r31, Y+12	; 0x0c
    1088:	6e 0f       	add	r22, r30
    108a:	7f 1f       	adc	r23, r31
    108c:	6e 5f       	subi	r22, 0xFE	; 254
    108e:	7f 4f       	sbci	r23, 0xFF	; 255
    1090:	7c 8f       	std	Y+28, r23	; 0x1c
    1092:	6b 8f       	std	Y+27, r22	; 0x1b
    1094:	61 e0       	ldi	r22, 0x01	; 1
    1096:	ea 85       	ldd	r30, Y+10	; 0x0a
    1098:	7a 89       	ldd	r23, Y+18	; 0x12
    109a:	e7 17       	cp	r30, r23
    109c:	09 f4       	brne	.+2      	; 0x10a0 <__mulsf3+0x142>
    109e:	60 e0       	ldi	r22, 0x00	; 0
    10a0:	6a 8f       	std	Y+26, r22	; 0x1a
    10a2:	6b 8d       	ldd	r22, Y+27	; 0x1b
    10a4:	7c 8d       	ldd	r23, Y+28	; 0x1c
    10a6:	10 c0       	rjmp	.+32     	; 0x10c8 <__mulsf3+0x16a>
    10a8:	fc 01       	movw	r30, r24
    10aa:	e1 70       	andi	r30, 0x01	; 1
    10ac:	f0 70       	andi	r31, 0x00	; 0
    10ae:	30 97       	sbiw	r30, 0x00	; 0
    10b0:	29 f0       	breq	.+10     	; 0x10bc <__mulsf3+0x15e>
    10b2:	56 95       	lsr	r21
    10b4:	47 95       	ror	r20
    10b6:	37 95       	ror	r19
    10b8:	27 95       	ror	r18
    10ba:	50 68       	ori	r21, 0x80	; 128
    10bc:	b6 95       	lsr	r27
    10be:	a7 95       	ror	r26
    10c0:	97 95       	ror	r25
    10c2:	87 95       	ror	r24
    10c4:	6f 5f       	subi	r22, 0xFF	; 255
    10c6:	7f 4f       	sbci	r23, 0xFF	; 255
    10c8:	b7 fd       	sbrc	r27, 7
    10ca:	ee cf       	rjmp	.-36     	; 0x10a8 <__mulsf3+0x14a>
    10cc:	0c c0       	rjmp	.+24     	; 0x10e6 <__mulsf3+0x188>
    10ce:	88 0f       	add	r24, r24
    10d0:	99 1f       	adc	r25, r25
    10d2:	aa 1f       	adc	r26, r26
    10d4:	bb 1f       	adc	r27, r27
    10d6:	57 fd       	sbrc	r21, 7
    10d8:	81 60       	ori	r24, 0x01	; 1
    10da:	22 0f       	add	r18, r18
    10dc:	33 1f       	adc	r19, r19
    10de:	44 1f       	adc	r20, r20
    10e0:	55 1f       	adc	r21, r21
    10e2:	61 50       	subi	r22, 0x01	; 1
    10e4:	70 40       	sbci	r23, 0x00	; 0
    10e6:	80 30       	cpi	r24, 0x00	; 0
    10e8:	e0 e0       	ldi	r30, 0x00	; 0
    10ea:	9e 07       	cpc	r25, r30
    10ec:	e0 e0       	ldi	r30, 0x00	; 0
    10ee:	ae 07       	cpc	r26, r30
    10f0:	e0 e4       	ldi	r30, 0x40	; 64
    10f2:	be 07       	cpc	r27, r30
    10f4:	60 f3       	brcs	.-40     	; 0x10ce <__mulsf3+0x170>
    10f6:	6b 8f       	std	Y+27, r22	; 0x1b
    10f8:	7c 8f       	std	Y+28, r23	; 0x1c
    10fa:	6f e7       	ldi	r22, 0x7F	; 127
    10fc:	e6 2e       	mov	r14, r22
    10fe:	f1 2c       	mov	r15, r1
    1100:	01 2d       	mov	r16, r1
    1102:	11 2d       	mov	r17, r1
    1104:	e8 22       	and	r14, r24
    1106:	f9 22       	and	r15, r25
    1108:	0a 23       	and	r16, r26
    110a:	1b 23       	and	r17, r27
    110c:	60 e4       	ldi	r22, 0x40	; 64
    110e:	e6 16       	cp	r14, r22
    1110:	f1 04       	cpc	r15, r1
    1112:	01 05       	cpc	r16, r1
    1114:	11 05       	cpc	r17, r1
    1116:	61 f4       	brne	.+24     	; 0x1130 <__mulsf3+0x1d2>
    1118:	87 fd       	sbrc	r24, 7
    111a:	0a c0       	rjmp	.+20     	; 0x1130 <__mulsf3+0x1d2>
    111c:	21 15       	cp	r18, r1
    111e:	31 05       	cpc	r19, r1
    1120:	41 05       	cpc	r20, r1
    1122:	51 05       	cpc	r21, r1
    1124:	29 f0       	breq	.+10     	; 0x1130 <__mulsf3+0x1d2>
    1126:	80 5c       	subi	r24, 0xC0	; 192
    1128:	9f 4f       	sbci	r25, 0xFF	; 255
    112a:	af 4f       	sbci	r26, 0xFF	; 255
    112c:	bf 4f       	sbci	r27, 0xFF	; 255
    112e:	80 78       	andi	r24, 0x80	; 128
    1130:	8d 8f       	std	Y+29, r24	; 0x1d
    1132:	9e 8f       	std	Y+30, r25	; 0x1e
    1134:	af 8f       	std	Y+31, r26	; 0x1f
    1136:	b8 a3       	std	Y+32, r27	; 0x20
    1138:	83 e0       	ldi	r24, 0x03	; 3
    113a:	89 8f       	std	Y+25, r24	; 0x19
    113c:	ce 01       	movw	r24, r28
    113e:	49 96       	adiw	r24, 0x19	; 25
    1140:	02 c0       	rjmp	.+4      	; 0x1146 <__mulsf3+0x1e8>
    1142:	8e e6       	ldi	r24, 0x6E	; 110
    1144:	90 e0       	ldi	r25, 0x00	; 0
    1146:	0e 94 8b 09 	call	0x1316	; 0x1316 <__pack_f>
    114a:	a0 96       	adiw	r28, 0x20	; 32
    114c:	e2 e1       	ldi	r30, 0x12	; 18
    114e:	0c 94 37 0b 	jmp	0x166e	; 0x166e <__epilogue_restores__>

00001152 <__gtsf2>:
    1152:	a8 e1       	ldi	r26, 0x18	; 24
    1154:	b0 e0       	ldi	r27, 0x00	; 0
    1156:	ef ea       	ldi	r30, 0xAF	; 175
    1158:	f8 e0       	ldi	r31, 0x08	; 8
    115a:	0c 94 27 0b 	jmp	0x164e	; 0x164e <__prologue_saves__+0x18>
    115e:	69 83       	std	Y+1, r22	; 0x01
    1160:	7a 83       	std	Y+2, r23	; 0x02
    1162:	8b 83       	std	Y+3, r24	; 0x03
    1164:	9c 83       	std	Y+4, r25	; 0x04
    1166:	2d 83       	std	Y+5, r18	; 0x05
    1168:	3e 83       	std	Y+6, r19	; 0x06
    116a:	4f 83       	std	Y+7, r20	; 0x07
    116c:	58 87       	std	Y+8, r21	; 0x08
    116e:	8e 01       	movw	r16, r28
    1170:	07 5f       	subi	r16, 0xF7	; 247
    1172:	1f 4f       	sbci	r17, 0xFF	; 255
    1174:	ce 01       	movw	r24, r28
    1176:	01 96       	adiw	r24, 0x01	; 1
    1178:	b8 01       	movw	r22, r16
    117a:	0e 94 59 0a 	call	0x14b2	; 0x14b2 <__unpack_f>
    117e:	81 e1       	ldi	r24, 0x11	; 17
    1180:	e8 2e       	mov	r14, r24
    1182:	f1 2c       	mov	r15, r1
    1184:	ec 0e       	add	r14, r28
    1186:	fd 1e       	adc	r15, r29
    1188:	ce 01       	movw	r24, r28
    118a:	05 96       	adiw	r24, 0x05	; 5
    118c:	b7 01       	movw	r22, r14
    118e:	0e 94 59 0a 	call	0x14b2	; 0x14b2 <__unpack_f>
    1192:	89 85       	ldd	r24, Y+9	; 0x09
    1194:	82 30       	cpi	r24, 0x02	; 2
    1196:	40 f0       	brcs	.+16     	; 0x11a8 <__gtsf2+0x56>
    1198:	89 89       	ldd	r24, Y+17	; 0x11
    119a:	82 30       	cpi	r24, 0x02	; 2
    119c:	28 f0       	brcs	.+10     	; 0x11a8 <__gtsf2+0x56>
    119e:	c8 01       	movw	r24, r16
    11a0:	b7 01       	movw	r22, r14
    11a2:	0e 94 c2 0a 	call	0x1584	; 0x1584 <__fpcmp_parts_f>
    11a6:	01 c0       	rjmp	.+2      	; 0x11aa <__gtsf2+0x58>
    11a8:	8f ef       	ldi	r24, 0xFF	; 255
    11aa:	68 96       	adiw	r28, 0x18	; 24
    11ac:	e6 e0       	ldi	r30, 0x06	; 6
    11ae:	0c 94 43 0b 	jmp	0x1686	; 0x1686 <__epilogue_restores__+0x18>

000011b2 <__gesf2>:
    11b2:	a8 e1       	ldi	r26, 0x18	; 24
    11b4:	b0 e0       	ldi	r27, 0x00	; 0
    11b6:	ef ed       	ldi	r30, 0xDF	; 223
    11b8:	f8 e0       	ldi	r31, 0x08	; 8
    11ba:	0c 94 27 0b 	jmp	0x164e	; 0x164e <__prologue_saves__+0x18>
    11be:	69 83       	std	Y+1, r22	; 0x01
    11c0:	7a 83       	std	Y+2, r23	; 0x02
    11c2:	8b 83       	std	Y+3, r24	; 0x03
    11c4:	9c 83       	std	Y+4, r25	; 0x04
    11c6:	2d 83       	std	Y+5, r18	; 0x05
    11c8:	3e 83       	std	Y+6, r19	; 0x06
    11ca:	4f 83       	std	Y+7, r20	; 0x07
    11cc:	58 87       	std	Y+8, r21	; 0x08
    11ce:	8e 01       	movw	r16, r28
    11d0:	07 5f       	subi	r16, 0xF7	; 247
    11d2:	1f 4f       	sbci	r17, 0xFF	; 255
    11d4:	ce 01       	movw	r24, r28
    11d6:	01 96       	adiw	r24, 0x01	; 1
    11d8:	b8 01       	movw	r22, r16
    11da:	0e 94 59 0a 	call	0x14b2	; 0x14b2 <__unpack_f>
    11de:	81 e1       	ldi	r24, 0x11	; 17
    11e0:	e8 2e       	mov	r14, r24
    11e2:	f1 2c       	mov	r15, r1
    11e4:	ec 0e       	add	r14, r28
    11e6:	fd 1e       	adc	r15, r29
    11e8:	ce 01       	movw	r24, r28
    11ea:	05 96       	adiw	r24, 0x05	; 5
    11ec:	b7 01       	movw	r22, r14
    11ee:	0e 94 59 0a 	call	0x14b2	; 0x14b2 <__unpack_f>
    11f2:	89 85       	ldd	r24, Y+9	; 0x09
    11f4:	82 30       	cpi	r24, 0x02	; 2
    11f6:	40 f0       	brcs	.+16     	; 0x1208 <__gesf2+0x56>
    11f8:	89 89       	ldd	r24, Y+17	; 0x11
    11fa:	82 30       	cpi	r24, 0x02	; 2
    11fc:	28 f0       	brcs	.+10     	; 0x1208 <__gesf2+0x56>
    11fe:	c8 01       	movw	r24, r16
    1200:	b7 01       	movw	r22, r14
    1202:	0e 94 c2 0a 	call	0x1584	; 0x1584 <__fpcmp_parts_f>
    1206:	01 c0       	rjmp	.+2      	; 0x120a <__gesf2+0x58>
    1208:	8f ef       	ldi	r24, 0xFF	; 255
    120a:	68 96       	adiw	r28, 0x18	; 24
    120c:	e6 e0       	ldi	r30, 0x06	; 6
    120e:	0c 94 43 0b 	jmp	0x1686	; 0x1686 <__epilogue_restores__+0x18>

00001212 <__ltsf2>:
    1212:	a8 e1       	ldi	r26, 0x18	; 24
    1214:	b0 e0       	ldi	r27, 0x00	; 0
    1216:	ef e0       	ldi	r30, 0x0F	; 15
    1218:	f9 e0       	ldi	r31, 0x09	; 9
    121a:	0c 94 27 0b 	jmp	0x164e	; 0x164e <__prologue_saves__+0x18>
    121e:	69 83       	std	Y+1, r22	; 0x01
    1220:	7a 83       	std	Y+2, r23	; 0x02
    1222:	8b 83       	std	Y+3, r24	; 0x03
    1224:	9c 83       	std	Y+4, r25	; 0x04
    1226:	2d 83       	std	Y+5, r18	; 0x05
    1228:	3e 83       	std	Y+6, r19	; 0x06
    122a:	4f 83       	std	Y+7, r20	; 0x07
    122c:	58 87       	std	Y+8, r21	; 0x08
    122e:	8e 01       	movw	r16, r28
    1230:	07 5f       	subi	r16, 0xF7	; 247
    1232:	1f 4f       	sbci	r17, 0xFF	; 255
    1234:	ce 01       	movw	r24, r28
    1236:	01 96       	adiw	r24, 0x01	; 1
    1238:	b8 01       	movw	r22, r16
    123a:	0e 94 59 0a 	call	0x14b2	; 0x14b2 <__unpack_f>
    123e:	81 e1       	ldi	r24, 0x11	; 17
    1240:	e8 2e       	mov	r14, r24
    1242:	f1 2c       	mov	r15, r1
    1244:	ec 0e       	add	r14, r28
    1246:	fd 1e       	adc	r15, r29
    1248:	ce 01       	movw	r24, r28
    124a:	05 96       	adiw	r24, 0x05	; 5
    124c:	b7 01       	movw	r22, r14
    124e:	0e 94 59 0a 	call	0x14b2	; 0x14b2 <__unpack_f>
    1252:	89 85       	ldd	r24, Y+9	; 0x09
    1254:	82 30       	cpi	r24, 0x02	; 2
    1256:	40 f0       	brcs	.+16     	; 0x1268 <__ltsf2+0x56>
    1258:	89 89       	ldd	r24, Y+17	; 0x11
    125a:	82 30       	cpi	r24, 0x02	; 2
    125c:	28 f0       	brcs	.+10     	; 0x1268 <__ltsf2+0x56>
    125e:	c8 01       	movw	r24, r16
    1260:	b7 01       	movw	r22, r14
    1262:	0e 94 c2 0a 	call	0x1584	; 0x1584 <__fpcmp_parts_f>
    1266:	01 c0       	rjmp	.+2      	; 0x126a <__ltsf2+0x58>
    1268:	81 e0       	ldi	r24, 0x01	; 1
    126a:	68 96       	adiw	r28, 0x18	; 24
    126c:	e6 e0       	ldi	r30, 0x06	; 6
    126e:	0c 94 43 0b 	jmp	0x1686	; 0x1686 <__epilogue_restores__+0x18>

00001272 <__fixsfsi>:
    1272:	ac e0       	ldi	r26, 0x0C	; 12
    1274:	b0 e0       	ldi	r27, 0x00	; 0
    1276:	ef e3       	ldi	r30, 0x3F	; 63
    1278:	f9 e0       	ldi	r31, 0x09	; 9
    127a:	0c 94 2b 0b 	jmp	0x1656	; 0x1656 <__prologue_saves__+0x20>
    127e:	69 83       	std	Y+1, r22	; 0x01
    1280:	7a 83       	std	Y+2, r23	; 0x02
    1282:	8b 83       	std	Y+3, r24	; 0x03
    1284:	9c 83       	std	Y+4, r25	; 0x04
    1286:	ce 01       	movw	r24, r28
    1288:	01 96       	adiw	r24, 0x01	; 1
    128a:	be 01       	movw	r22, r28
    128c:	6b 5f       	subi	r22, 0xFB	; 251
    128e:	7f 4f       	sbci	r23, 0xFF	; 255
    1290:	0e 94 59 0a 	call	0x14b2	; 0x14b2 <__unpack_f>
    1294:	8d 81       	ldd	r24, Y+5	; 0x05
    1296:	82 30       	cpi	r24, 0x02	; 2
    1298:	81 f1       	breq	.+96     	; 0x12fa <__fixsfsi+0x88>
    129a:	82 30       	cpi	r24, 0x02	; 2
    129c:	70 f1       	brcs	.+92     	; 0x12fa <__fixsfsi+0x88>
    129e:	84 30       	cpi	r24, 0x04	; 4
    12a0:	21 f4       	brne	.+8      	; 0x12aa <__fixsfsi+0x38>
    12a2:	8e 81       	ldd	r24, Y+6	; 0x06
    12a4:	88 23       	and	r24, r24
    12a6:	69 f1       	breq	.+90     	; 0x1302 <__fixsfsi+0x90>
    12a8:	0a c0       	rjmp	.+20     	; 0x12be <__fixsfsi+0x4c>
    12aa:	2f 81       	ldd	r18, Y+7	; 0x07
    12ac:	38 85       	ldd	r19, Y+8	; 0x08
    12ae:	37 fd       	sbrc	r19, 7
    12b0:	24 c0       	rjmp	.+72     	; 0x12fa <__fixsfsi+0x88>
    12b2:	6e 81       	ldd	r22, Y+6	; 0x06
    12b4:	2f 31       	cpi	r18, 0x1F	; 31
    12b6:	31 05       	cpc	r19, r1
    12b8:	3c f0       	brlt	.+14     	; 0x12c8 <__fixsfsi+0x56>
    12ba:	66 23       	and	r22, r22
    12bc:	11 f1       	breq	.+68     	; 0x1302 <__fixsfsi+0x90>
    12be:	20 e0       	ldi	r18, 0x00	; 0
    12c0:	30 e0       	ldi	r19, 0x00	; 0
    12c2:	40 e0       	ldi	r20, 0x00	; 0
    12c4:	50 e8       	ldi	r21, 0x80	; 128
    12c6:	21 c0       	rjmp	.+66     	; 0x130a <__fixsfsi+0x98>
    12c8:	8e e1       	ldi	r24, 0x1E	; 30
    12ca:	90 e0       	ldi	r25, 0x00	; 0
    12cc:	82 1b       	sub	r24, r18
    12ce:	93 0b       	sbc	r25, r19
    12d0:	29 85       	ldd	r18, Y+9	; 0x09
    12d2:	3a 85       	ldd	r19, Y+10	; 0x0a
    12d4:	4b 85       	ldd	r20, Y+11	; 0x0b
    12d6:	5c 85       	ldd	r21, Y+12	; 0x0c
    12d8:	04 c0       	rjmp	.+8      	; 0x12e2 <__fixsfsi+0x70>
    12da:	56 95       	lsr	r21
    12dc:	47 95       	ror	r20
    12de:	37 95       	ror	r19
    12e0:	27 95       	ror	r18
    12e2:	8a 95       	dec	r24
    12e4:	d2 f7       	brpl	.-12     	; 0x12da <__fixsfsi+0x68>
    12e6:	66 23       	and	r22, r22
    12e8:	81 f0       	breq	.+32     	; 0x130a <__fixsfsi+0x98>
    12ea:	50 95       	com	r21
    12ec:	40 95       	com	r20
    12ee:	30 95       	com	r19
    12f0:	21 95       	neg	r18
    12f2:	3f 4f       	sbci	r19, 0xFF	; 255
    12f4:	4f 4f       	sbci	r20, 0xFF	; 255
    12f6:	5f 4f       	sbci	r21, 0xFF	; 255
    12f8:	08 c0       	rjmp	.+16     	; 0x130a <__fixsfsi+0x98>
    12fa:	20 e0       	ldi	r18, 0x00	; 0
    12fc:	30 e0       	ldi	r19, 0x00	; 0
    12fe:	a9 01       	movw	r20, r18
    1300:	04 c0       	rjmp	.+8      	; 0x130a <__fixsfsi+0x98>
    1302:	2f ef       	ldi	r18, 0xFF	; 255
    1304:	3f ef       	ldi	r19, 0xFF	; 255
    1306:	4f ef       	ldi	r20, 0xFF	; 255
    1308:	5f e7       	ldi	r21, 0x7F	; 127
    130a:	b9 01       	movw	r22, r18
    130c:	ca 01       	movw	r24, r20
    130e:	2c 96       	adiw	r28, 0x0c	; 12
    1310:	e2 e0       	ldi	r30, 0x02	; 2
    1312:	0c 94 47 0b 	jmp	0x168e	; 0x168e <__epilogue_restores__+0x20>

00001316 <__pack_f>:
    1316:	ef 92       	push	r14
    1318:	ff 92       	push	r15
    131a:	0f 93       	push	r16
    131c:	1f 93       	push	r17
    131e:	cf 93       	push	r28
    1320:	df 93       	push	r29
    1322:	fc 01       	movw	r30, r24
    1324:	24 81       	ldd	r18, Z+4	; 0x04
    1326:	35 81       	ldd	r19, Z+5	; 0x05
    1328:	46 81       	ldd	r20, Z+6	; 0x06
    132a:	57 81       	ldd	r21, Z+7	; 0x07
    132c:	61 81       	ldd	r22, Z+1	; 0x01
    132e:	80 81       	ld	r24, Z
    1330:	82 30       	cpi	r24, 0x02	; 2
    1332:	20 f4       	brcc	.+8      	; 0x133c <__pack_f+0x26>
    1334:	40 61       	ori	r20, 0x10	; 16
    1336:	ef ef       	ldi	r30, 0xFF	; 255
    1338:	f0 e0       	ldi	r31, 0x00	; 0
    133a:	a3 c0       	rjmp	.+326    	; 0x1482 <__pack_f+0x16c>
    133c:	84 30       	cpi	r24, 0x04	; 4
    133e:	09 f4       	brne	.+2      	; 0x1342 <__pack_f+0x2c>
    1340:	9b c0       	rjmp	.+310    	; 0x1478 <__pack_f+0x162>
    1342:	82 30       	cpi	r24, 0x02	; 2
    1344:	09 f4       	brne	.+2      	; 0x1348 <__pack_f+0x32>
    1346:	92 c0       	rjmp	.+292    	; 0x146c <__pack_f+0x156>
    1348:	21 15       	cp	r18, r1
    134a:	31 05       	cpc	r19, r1
    134c:	41 05       	cpc	r20, r1
    134e:	51 05       	cpc	r21, r1
    1350:	09 f4       	brne	.+2      	; 0x1354 <__pack_f+0x3e>
    1352:	8f c0       	rjmp	.+286    	; 0x1472 <__pack_f+0x15c>
    1354:	02 80       	ldd	r0, Z+2	; 0x02
    1356:	f3 81       	ldd	r31, Z+3	; 0x03
    1358:	e0 2d       	mov	r30, r0
    135a:	8f ef       	ldi	r24, 0xFF	; 255
    135c:	e2 38       	cpi	r30, 0x82	; 130
    135e:	f8 07       	cpc	r31, r24
    1360:	0c f0       	brlt	.+2      	; 0x1364 <__pack_f+0x4e>
    1362:	5a c0       	rjmp	.+180    	; 0x1418 <__pack_f+0x102>
    1364:	c2 e8       	ldi	r28, 0x82	; 130
    1366:	df ef       	ldi	r29, 0xFF	; 255
    1368:	ce 1b       	sub	r28, r30
    136a:	df 0b       	sbc	r29, r31
    136c:	ca 31       	cpi	r28, 0x1A	; 26
    136e:	d1 05       	cpc	r29, r1
    1370:	6c f5       	brge	.+90     	; 0x13cc <__pack_f+0xb6>
    1372:	79 01       	movw	r14, r18
    1374:	8a 01       	movw	r16, r20
    1376:	0c 2e       	mov	r0, r28
    1378:	04 c0       	rjmp	.+8      	; 0x1382 <__pack_f+0x6c>
    137a:	16 95       	lsr	r17
    137c:	07 95       	ror	r16
    137e:	f7 94       	ror	r15
    1380:	e7 94       	ror	r14
    1382:	0a 94       	dec	r0
    1384:	d2 f7       	brpl	.-12     	; 0x137a <__pack_f+0x64>
    1386:	81 e0       	ldi	r24, 0x01	; 1
    1388:	90 e0       	ldi	r25, 0x00	; 0
    138a:	a0 e0       	ldi	r26, 0x00	; 0
    138c:	b0 e0       	ldi	r27, 0x00	; 0
    138e:	0c 2e       	mov	r0, r28
    1390:	04 c0       	rjmp	.+8      	; 0x139a <__pack_f+0x84>
    1392:	88 0f       	add	r24, r24
    1394:	99 1f       	adc	r25, r25
    1396:	aa 1f       	adc	r26, r26
    1398:	bb 1f       	adc	r27, r27
    139a:	0a 94       	dec	r0
    139c:	d2 f7       	brpl	.-12     	; 0x1392 <__pack_f+0x7c>
    139e:	01 97       	sbiw	r24, 0x01	; 1
    13a0:	a1 09       	sbc	r26, r1
    13a2:	b1 09       	sbc	r27, r1
    13a4:	82 23       	and	r24, r18
    13a6:	93 23       	and	r25, r19
    13a8:	a4 23       	and	r26, r20
    13aa:	b5 23       	and	r27, r21
    13ac:	21 e0       	ldi	r18, 0x01	; 1
    13ae:	30 e0       	ldi	r19, 0x00	; 0
    13b0:	40 e0       	ldi	r20, 0x00	; 0
    13b2:	50 e0       	ldi	r21, 0x00	; 0
    13b4:	00 97       	sbiw	r24, 0x00	; 0
    13b6:	a1 05       	cpc	r26, r1
    13b8:	b1 05       	cpc	r27, r1
    13ba:	19 f4       	brne	.+6      	; 0x13c2 <__pack_f+0xac>
    13bc:	20 e0       	ldi	r18, 0x00	; 0
    13be:	30 e0       	ldi	r19, 0x00	; 0
    13c0:	a9 01       	movw	r20, r18
    13c2:	2e 29       	or	r18, r14
    13c4:	3f 29       	or	r19, r15
    13c6:	40 2b       	or	r20, r16
    13c8:	51 2b       	or	r21, r17
    13ca:	03 c0       	rjmp	.+6      	; 0x13d2 <__pack_f+0xbc>
    13cc:	20 e0       	ldi	r18, 0x00	; 0
    13ce:	30 e0       	ldi	r19, 0x00	; 0
    13d0:	a9 01       	movw	r20, r18
    13d2:	da 01       	movw	r26, r20
    13d4:	c9 01       	movw	r24, r18
    13d6:	8f 77       	andi	r24, 0x7F	; 127
    13d8:	90 70       	andi	r25, 0x00	; 0
    13da:	a0 70       	andi	r26, 0x00	; 0
    13dc:	b0 70       	andi	r27, 0x00	; 0
    13de:	80 34       	cpi	r24, 0x40	; 64
    13e0:	91 05       	cpc	r25, r1
    13e2:	a1 05       	cpc	r26, r1
    13e4:	b1 05       	cpc	r27, r1
    13e6:	39 f4       	brne	.+14     	; 0x13f6 <__pack_f+0xe0>
    13e8:	27 ff       	sbrs	r18, 7
    13ea:	09 c0       	rjmp	.+18     	; 0x13fe <__pack_f+0xe8>
    13ec:	20 5c       	subi	r18, 0xC0	; 192
    13ee:	3f 4f       	sbci	r19, 0xFF	; 255
    13f0:	4f 4f       	sbci	r20, 0xFF	; 255
    13f2:	5f 4f       	sbci	r21, 0xFF	; 255
    13f4:	04 c0       	rjmp	.+8      	; 0x13fe <__pack_f+0xe8>
    13f6:	21 5c       	subi	r18, 0xC1	; 193
    13f8:	3f 4f       	sbci	r19, 0xFF	; 255
    13fa:	4f 4f       	sbci	r20, 0xFF	; 255
    13fc:	5f 4f       	sbci	r21, 0xFF	; 255
    13fe:	e1 e0       	ldi	r30, 0x01	; 1
    1400:	f0 e0       	ldi	r31, 0x00	; 0
    1402:	20 30       	cpi	r18, 0x00	; 0
    1404:	80 e0       	ldi	r24, 0x00	; 0
    1406:	38 07       	cpc	r19, r24
    1408:	80 e0       	ldi	r24, 0x00	; 0
    140a:	48 07       	cpc	r20, r24
    140c:	80 e4       	ldi	r24, 0x40	; 64
    140e:	58 07       	cpc	r21, r24
    1410:	28 f5       	brcc	.+74     	; 0x145c <__pack_f+0x146>
    1412:	e0 e0       	ldi	r30, 0x00	; 0
    1414:	f0 e0       	ldi	r31, 0x00	; 0
    1416:	22 c0       	rjmp	.+68     	; 0x145c <__pack_f+0x146>
    1418:	e0 38       	cpi	r30, 0x80	; 128
    141a:	f1 05       	cpc	r31, r1
    141c:	6c f5       	brge	.+90     	; 0x1478 <__pack_f+0x162>
    141e:	e1 58       	subi	r30, 0x81	; 129
    1420:	ff 4f       	sbci	r31, 0xFF	; 255
    1422:	da 01       	movw	r26, r20
    1424:	c9 01       	movw	r24, r18
    1426:	8f 77       	andi	r24, 0x7F	; 127
    1428:	90 70       	andi	r25, 0x00	; 0
    142a:	a0 70       	andi	r26, 0x00	; 0
    142c:	b0 70       	andi	r27, 0x00	; 0
    142e:	80 34       	cpi	r24, 0x40	; 64
    1430:	91 05       	cpc	r25, r1
    1432:	a1 05       	cpc	r26, r1
    1434:	b1 05       	cpc	r27, r1
    1436:	39 f4       	brne	.+14     	; 0x1446 <__pack_f+0x130>
    1438:	27 ff       	sbrs	r18, 7
    143a:	09 c0       	rjmp	.+18     	; 0x144e <__pack_f+0x138>
    143c:	20 5c       	subi	r18, 0xC0	; 192
    143e:	3f 4f       	sbci	r19, 0xFF	; 255
    1440:	4f 4f       	sbci	r20, 0xFF	; 255
    1442:	5f 4f       	sbci	r21, 0xFF	; 255
    1444:	04 c0       	rjmp	.+8      	; 0x144e <__pack_f+0x138>
    1446:	21 5c       	subi	r18, 0xC1	; 193
    1448:	3f 4f       	sbci	r19, 0xFF	; 255
    144a:	4f 4f       	sbci	r20, 0xFF	; 255
    144c:	5f 4f       	sbci	r21, 0xFF	; 255
    144e:	57 ff       	sbrs	r21, 7
    1450:	05 c0       	rjmp	.+10     	; 0x145c <__pack_f+0x146>
    1452:	56 95       	lsr	r21
    1454:	47 95       	ror	r20
    1456:	37 95       	ror	r19
    1458:	27 95       	ror	r18
    145a:	31 96       	adiw	r30, 0x01	; 1
    145c:	87 e0       	ldi	r24, 0x07	; 7
    145e:	56 95       	lsr	r21
    1460:	47 95       	ror	r20
    1462:	37 95       	ror	r19
    1464:	27 95       	ror	r18
    1466:	8a 95       	dec	r24
    1468:	d1 f7       	brne	.-12     	; 0x145e <__pack_f+0x148>
    146a:	0b c0       	rjmp	.+22     	; 0x1482 <__pack_f+0x16c>
    146c:	e0 e0       	ldi	r30, 0x00	; 0
    146e:	f0 e0       	ldi	r31, 0x00	; 0
    1470:	05 c0       	rjmp	.+10     	; 0x147c <__pack_f+0x166>
    1472:	e0 e0       	ldi	r30, 0x00	; 0
    1474:	f0 e0       	ldi	r31, 0x00	; 0
    1476:	05 c0       	rjmp	.+10     	; 0x1482 <__pack_f+0x16c>
    1478:	ef ef       	ldi	r30, 0xFF	; 255
    147a:	f0 e0       	ldi	r31, 0x00	; 0
    147c:	20 e0       	ldi	r18, 0x00	; 0
    147e:	30 e0       	ldi	r19, 0x00	; 0
    1480:	a9 01       	movw	r20, r18
    1482:	8e 2f       	mov	r24, r30
    1484:	87 95       	ror	r24
    1486:	88 27       	eor	r24, r24
    1488:	87 95       	ror	r24
    148a:	94 2f       	mov	r25, r20
    148c:	9f 77       	andi	r25, 0x7F	; 127
    148e:	67 95       	ror	r22
    1490:	66 27       	eor	r22, r22
    1492:	67 95       	ror	r22
    1494:	e6 95       	lsr	r30
    1496:	e2 2e       	mov	r14, r18
    1498:	a9 2f       	mov	r26, r25
    149a:	a8 2b       	or	r26, r24
    149c:	fe 2f       	mov	r31, r30
    149e:	f6 2b       	or	r31, r22
    14a0:	62 2f       	mov	r22, r18
    14a2:	73 2f       	mov	r23, r19
    14a4:	8a 2f       	mov	r24, r26
    14a6:	9f 2f       	mov	r25, r31
    14a8:	cd b7       	in	r28, 0x3d	; 61
    14aa:	de b7       	in	r29, 0x3e	; 62
    14ac:	e6 e0       	ldi	r30, 0x06	; 6
    14ae:	0c 94 43 0b 	jmp	0x1686	; 0x1686 <__epilogue_restores__+0x18>

000014b2 <__unpack_f>:
    14b2:	dc 01       	movw	r26, r24
    14b4:	fb 01       	movw	r30, r22
    14b6:	2c 91       	ld	r18, X
    14b8:	11 96       	adiw	r26, 0x01	; 1
    14ba:	3c 91       	ld	r19, X
    14bc:	11 97       	sbiw	r26, 0x01	; 1
    14be:	12 96       	adiw	r26, 0x02	; 2
    14c0:	8c 91       	ld	r24, X
    14c2:	12 97       	sbiw	r26, 0x02	; 2
    14c4:	48 2f       	mov	r20, r24
    14c6:	4f 77       	andi	r20, 0x7F	; 127
    14c8:	50 e0       	ldi	r21, 0x00	; 0
    14ca:	98 2f       	mov	r25, r24
    14cc:	99 1f       	adc	r25, r25
    14ce:	99 27       	eor	r25, r25
    14d0:	99 1f       	adc	r25, r25
    14d2:	13 96       	adiw	r26, 0x03	; 3
    14d4:	6c 91       	ld	r22, X
    14d6:	13 97       	sbiw	r26, 0x03	; 3
    14d8:	86 2f       	mov	r24, r22
    14da:	88 0f       	add	r24, r24
    14dc:	89 2b       	or	r24, r25
    14de:	90 e0       	ldi	r25, 0x00	; 0
    14e0:	66 1f       	adc	r22, r22
    14e2:	66 27       	eor	r22, r22
    14e4:	66 1f       	adc	r22, r22
    14e6:	61 83       	std	Z+1, r22	; 0x01
    14e8:	00 97       	sbiw	r24, 0x00	; 0
    14ea:	39 f5       	brne	.+78     	; 0x153a <__unpack_f+0x88>
    14ec:	21 15       	cp	r18, r1
    14ee:	31 05       	cpc	r19, r1
    14f0:	41 05       	cpc	r20, r1
    14f2:	51 05       	cpc	r21, r1
    14f4:	11 f4       	brne	.+4      	; 0x14fa <__unpack_f+0x48>
    14f6:	82 e0       	ldi	r24, 0x02	; 2
    14f8:	29 c0       	rjmp	.+82     	; 0x154c <__unpack_f+0x9a>
    14fa:	82 e8       	ldi	r24, 0x82	; 130
    14fc:	9f ef       	ldi	r25, 0xFF	; 255
    14fe:	93 83       	std	Z+3, r25	; 0x03
    1500:	82 83       	std	Z+2, r24	; 0x02
    1502:	67 e0       	ldi	r22, 0x07	; 7
    1504:	22 0f       	add	r18, r18
    1506:	33 1f       	adc	r19, r19
    1508:	44 1f       	adc	r20, r20
    150a:	55 1f       	adc	r21, r21
    150c:	6a 95       	dec	r22
    150e:	d1 f7       	brne	.-12     	; 0x1504 <__unpack_f+0x52>
    1510:	83 e0       	ldi	r24, 0x03	; 3
    1512:	80 83       	st	Z, r24
    1514:	09 c0       	rjmp	.+18     	; 0x1528 <__unpack_f+0x76>
    1516:	22 0f       	add	r18, r18
    1518:	33 1f       	adc	r19, r19
    151a:	44 1f       	adc	r20, r20
    151c:	55 1f       	adc	r21, r21
    151e:	82 81       	ldd	r24, Z+2	; 0x02
    1520:	93 81       	ldd	r25, Z+3	; 0x03
    1522:	01 97       	sbiw	r24, 0x01	; 1
    1524:	93 83       	std	Z+3, r25	; 0x03
    1526:	82 83       	std	Z+2, r24	; 0x02
    1528:	20 30       	cpi	r18, 0x00	; 0
    152a:	80 e0       	ldi	r24, 0x00	; 0
    152c:	38 07       	cpc	r19, r24
    152e:	80 e0       	ldi	r24, 0x00	; 0
    1530:	48 07       	cpc	r20, r24
    1532:	80 e4       	ldi	r24, 0x40	; 64
    1534:	58 07       	cpc	r21, r24
    1536:	78 f3       	brcs	.-34     	; 0x1516 <__unpack_f+0x64>
    1538:	20 c0       	rjmp	.+64     	; 0x157a <__unpack_f+0xc8>
    153a:	8f 3f       	cpi	r24, 0xFF	; 255
    153c:	91 05       	cpc	r25, r1
    153e:	79 f4       	brne	.+30     	; 0x155e <__unpack_f+0xac>
    1540:	21 15       	cp	r18, r1
    1542:	31 05       	cpc	r19, r1
    1544:	41 05       	cpc	r20, r1
    1546:	51 05       	cpc	r21, r1
    1548:	19 f4       	brne	.+6      	; 0x1550 <__unpack_f+0x9e>
    154a:	84 e0       	ldi	r24, 0x04	; 4
    154c:	80 83       	st	Z, r24
    154e:	08 95       	ret
    1550:	44 ff       	sbrs	r20, 4
    1552:	03 c0       	rjmp	.+6      	; 0x155a <__unpack_f+0xa8>
    1554:	81 e0       	ldi	r24, 0x01	; 1
    1556:	80 83       	st	Z, r24
    1558:	10 c0       	rjmp	.+32     	; 0x157a <__unpack_f+0xc8>
    155a:	10 82       	st	Z, r1
    155c:	0e c0       	rjmp	.+28     	; 0x157a <__unpack_f+0xc8>
    155e:	8f 57       	subi	r24, 0x7F	; 127
    1560:	90 40       	sbci	r25, 0x00	; 0
    1562:	93 83       	std	Z+3, r25	; 0x03
    1564:	82 83       	std	Z+2, r24	; 0x02
    1566:	83 e0       	ldi	r24, 0x03	; 3
    1568:	80 83       	st	Z, r24
    156a:	87 e0       	ldi	r24, 0x07	; 7
    156c:	22 0f       	add	r18, r18
    156e:	33 1f       	adc	r19, r19
    1570:	44 1f       	adc	r20, r20
    1572:	55 1f       	adc	r21, r21
    1574:	8a 95       	dec	r24
    1576:	d1 f7       	brne	.-12     	; 0x156c <__unpack_f+0xba>
    1578:	50 64       	ori	r21, 0x40	; 64
    157a:	24 83       	std	Z+4, r18	; 0x04
    157c:	35 83       	std	Z+5, r19	; 0x05
    157e:	46 83       	std	Z+6, r20	; 0x06
    1580:	57 83       	std	Z+7, r21	; 0x07
    1582:	08 95       	ret

00001584 <__fpcmp_parts_f>:
    1584:	fc 01       	movw	r30, r24
    1586:	db 01       	movw	r26, r22
    1588:	90 81       	ld	r25, Z
    158a:	92 30       	cpi	r25, 0x02	; 2
    158c:	08 f4       	brcc	.+2      	; 0x1590 <__fpcmp_parts_f+0xc>
    158e:	49 c0       	rjmp	.+146    	; 0x1622 <__fpcmp_parts_f+0x9e>
    1590:	8c 91       	ld	r24, X
    1592:	82 30       	cpi	r24, 0x02	; 2
    1594:	08 f4       	brcc	.+2      	; 0x1598 <__fpcmp_parts_f+0x14>
    1596:	45 c0       	rjmp	.+138    	; 0x1622 <__fpcmp_parts_f+0x9e>
    1598:	94 30       	cpi	r25, 0x04	; 4
    159a:	51 f4       	brne	.+20     	; 0x15b0 <__fpcmp_parts_f+0x2c>
    159c:	61 81       	ldd	r22, Z+1	; 0x01
    159e:	84 30       	cpi	r24, 0x04	; 4
    15a0:	b1 f5       	brne	.+108    	; 0x160e <__fpcmp_parts_f+0x8a>
    15a2:	11 96       	adiw	r26, 0x01	; 1
    15a4:	2c 91       	ld	r18, X
    15a6:	11 97       	sbiw	r26, 0x01	; 1
    15a8:	30 e0       	ldi	r19, 0x00	; 0
    15aa:	26 1b       	sub	r18, r22
    15ac:	31 09       	sbc	r19, r1
    15ae:	41 c0       	rjmp	.+130    	; 0x1632 <__fpcmp_parts_f+0xae>
    15b0:	84 30       	cpi	r24, 0x04	; 4
    15b2:	21 f0       	breq	.+8      	; 0x15bc <__fpcmp_parts_f+0x38>
    15b4:	92 30       	cpi	r25, 0x02	; 2
    15b6:	41 f4       	brne	.+16     	; 0x15c8 <__fpcmp_parts_f+0x44>
    15b8:	82 30       	cpi	r24, 0x02	; 2
    15ba:	b1 f1       	breq	.+108    	; 0x1628 <__fpcmp_parts_f+0xa4>
    15bc:	11 96       	adiw	r26, 0x01	; 1
    15be:	8c 91       	ld	r24, X
    15c0:	11 97       	sbiw	r26, 0x01	; 1
    15c2:	88 23       	and	r24, r24
    15c4:	a1 f1       	breq	.+104    	; 0x162e <__fpcmp_parts_f+0xaa>
    15c6:	2d c0       	rjmp	.+90     	; 0x1622 <__fpcmp_parts_f+0x9e>
    15c8:	61 81       	ldd	r22, Z+1	; 0x01
    15ca:	82 30       	cpi	r24, 0x02	; 2
    15cc:	01 f1       	breq	.+64     	; 0x160e <__fpcmp_parts_f+0x8a>
    15ce:	11 96       	adiw	r26, 0x01	; 1
    15d0:	8c 91       	ld	r24, X
    15d2:	11 97       	sbiw	r26, 0x01	; 1
    15d4:	68 17       	cp	r22, r24
    15d6:	d9 f4       	brne	.+54     	; 0x160e <__fpcmp_parts_f+0x8a>
    15d8:	22 81       	ldd	r18, Z+2	; 0x02
    15da:	33 81       	ldd	r19, Z+3	; 0x03
    15dc:	12 96       	adiw	r26, 0x02	; 2
    15de:	8d 91       	ld	r24, X+
    15e0:	9c 91       	ld	r25, X
    15e2:	13 97       	sbiw	r26, 0x03	; 3
    15e4:	82 17       	cp	r24, r18
    15e6:	93 07       	cpc	r25, r19
    15e8:	94 f0       	brlt	.+36     	; 0x160e <__fpcmp_parts_f+0x8a>
    15ea:	28 17       	cp	r18, r24
    15ec:	39 07       	cpc	r19, r25
    15ee:	bc f0       	brlt	.+46     	; 0x161e <__fpcmp_parts_f+0x9a>
    15f0:	24 81       	ldd	r18, Z+4	; 0x04
    15f2:	35 81       	ldd	r19, Z+5	; 0x05
    15f4:	46 81       	ldd	r20, Z+6	; 0x06
    15f6:	57 81       	ldd	r21, Z+7	; 0x07
    15f8:	14 96       	adiw	r26, 0x04	; 4
    15fa:	8d 91       	ld	r24, X+
    15fc:	9d 91       	ld	r25, X+
    15fe:	0d 90       	ld	r0, X+
    1600:	bc 91       	ld	r27, X
    1602:	a0 2d       	mov	r26, r0
    1604:	82 17       	cp	r24, r18
    1606:	93 07       	cpc	r25, r19
    1608:	a4 07       	cpc	r26, r20
    160a:	b5 07       	cpc	r27, r21
    160c:	18 f4       	brcc	.+6      	; 0x1614 <__fpcmp_parts_f+0x90>
    160e:	66 23       	and	r22, r22
    1610:	41 f0       	breq	.+16     	; 0x1622 <__fpcmp_parts_f+0x9e>
    1612:	0d c0       	rjmp	.+26     	; 0x162e <__fpcmp_parts_f+0xaa>
    1614:	28 17       	cp	r18, r24
    1616:	39 07       	cpc	r19, r25
    1618:	4a 07       	cpc	r20, r26
    161a:	5b 07       	cpc	r21, r27
    161c:	28 f4       	brcc	.+10     	; 0x1628 <__fpcmp_parts_f+0xa4>
    161e:	66 23       	and	r22, r22
    1620:	31 f0       	breq	.+12     	; 0x162e <__fpcmp_parts_f+0xaa>
    1622:	21 e0       	ldi	r18, 0x01	; 1
    1624:	30 e0       	ldi	r19, 0x00	; 0
    1626:	05 c0       	rjmp	.+10     	; 0x1632 <__fpcmp_parts_f+0xae>
    1628:	20 e0       	ldi	r18, 0x00	; 0
    162a:	30 e0       	ldi	r19, 0x00	; 0
    162c:	02 c0       	rjmp	.+4      	; 0x1632 <__fpcmp_parts_f+0xae>
    162e:	2f ef       	ldi	r18, 0xFF	; 255
    1630:	3f ef       	ldi	r19, 0xFF	; 255
    1632:	c9 01       	movw	r24, r18
    1634:	08 95       	ret

00001636 <__prologue_saves__>:
    1636:	2f 92       	push	r2
    1638:	3f 92       	push	r3
    163a:	4f 92       	push	r4
    163c:	5f 92       	push	r5
    163e:	6f 92       	push	r6
    1640:	7f 92       	push	r7
    1642:	8f 92       	push	r8
    1644:	9f 92       	push	r9
    1646:	af 92       	push	r10
    1648:	bf 92       	push	r11
    164a:	cf 92       	push	r12
    164c:	df 92       	push	r13
    164e:	ef 92       	push	r14
    1650:	ff 92       	push	r15
    1652:	0f 93       	push	r16
    1654:	1f 93       	push	r17
    1656:	cf 93       	push	r28
    1658:	df 93       	push	r29
    165a:	cd b7       	in	r28, 0x3d	; 61
    165c:	de b7       	in	r29, 0x3e	; 62
    165e:	ca 1b       	sub	r28, r26
    1660:	db 0b       	sbc	r29, r27
    1662:	0f b6       	in	r0, 0x3f	; 63
    1664:	f8 94       	cli
    1666:	de bf       	out	0x3e, r29	; 62
    1668:	0f be       	out	0x3f, r0	; 63
    166a:	cd bf       	out	0x3d, r28	; 61
    166c:	09 94       	ijmp

0000166e <__epilogue_restores__>:
    166e:	2a 88       	ldd	r2, Y+18	; 0x12
    1670:	39 88       	ldd	r3, Y+17	; 0x11
    1672:	48 88       	ldd	r4, Y+16	; 0x10
    1674:	5f 84       	ldd	r5, Y+15	; 0x0f
    1676:	6e 84       	ldd	r6, Y+14	; 0x0e
    1678:	7d 84       	ldd	r7, Y+13	; 0x0d
    167a:	8c 84       	ldd	r8, Y+12	; 0x0c
    167c:	9b 84       	ldd	r9, Y+11	; 0x0b
    167e:	aa 84       	ldd	r10, Y+10	; 0x0a
    1680:	b9 84       	ldd	r11, Y+9	; 0x09
    1682:	c8 84       	ldd	r12, Y+8	; 0x08
    1684:	df 80       	ldd	r13, Y+7	; 0x07
    1686:	ee 80       	ldd	r14, Y+6	; 0x06
    1688:	fd 80       	ldd	r15, Y+5	; 0x05
    168a:	0c 81       	ldd	r16, Y+4	; 0x04
    168c:	1b 81       	ldd	r17, Y+3	; 0x03
    168e:	aa 81       	ldd	r26, Y+2	; 0x02
    1690:	b9 81       	ldd	r27, Y+1	; 0x01
    1692:	ce 0f       	add	r28, r30
    1694:	d1 1d       	adc	r29, r1
    1696:	0f b6       	in	r0, 0x3f	; 63
    1698:	f8 94       	cli
    169a:	de bf       	out	0x3e, r29	; 62
    169c:	0f be       	out	0x3f, r0	; 63
    169e:	cd bf       	out	0x3d, r28	; 61
    16a0:	ed 01       	movw	r28, r26
    16a2:	08 95       	ret

000016a4 <_exit>:
    16a4:	f8 94       	cli

000016a6 <__stop_program>:
    16a6:	ff cf       	rjmp	.-2      	; 0x16a6 <__stop_program>
